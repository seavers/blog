<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[大海Online的博客]]></title>
  <link href="http://www.lianghaijun.com/atom.xml" rel="self"/>
  <link href="http://www.lianghaijun.com/"/>
  <updated>2018-09-19T09:57:22+08:00</updated>
  <id>http://www.lianghaijun.com/</id>
  <author>
    <name><![CDATA[lianghaijun]]></name>
    <email><![CDATA[lianghaijun@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[maven构建archetype多模块工程模板的问题]]></title>
    <link href="http://www.lianghaijun.com/2018-09-18-maven-archetype-multimodule.html"/>
    <updated>2018-09-18T20:40:00+08:00</updated>
    <id>http://www.lianghaijun.com/maven-archetype-multimodule</id>
    <content type="html"><![CDATA[<p>今天遇到了maven创建archetype多模块工程时的很多问题, 记录一下</p>

<h4 id="archetype">archetype工程的创建可以参考:</h4>
<ul>
  <li><a href="http://maven.apache.org/archetype/maven-archetype-plugin/index.html">官方入口</a></li>
  <li><a href="http://maven.apache.org/archetype/maven-archetype-plugin/examples/create-multi-module-project.html">官方文档</a></li>
</ul>

<h4 id="section">问题如下:</h4>

<ul>
  <li>多模块时生成archetype-metadata.xml的问题
    <ul>
      <li>单模块工程时, 可以直接写archetype-metadata.xml文件</li>
      <li>多模块工程时, 不可以写archetype-metadata.xml, 因为外层工程没有src目录</li>
      <li>解决方案: 多模块工程可以配置出archetype-metadata.xml, 参考 <a href="http://maven.apache.org/archetype/maven-archetype-plugin/examples/create-with-property-file.html">这里</a></li>
    </ul>
  </li>
  <li>无法拷贝.gitignore文件的问题
    <ul>
      <li>参考<a href="https://stackoverflow.com/questions/7981060/maven-archetype-plugin-doesnt-let-resources-in-archetype-resources-through">这里</a>的解决方案</li>
    </ul>
  </li>
</ul>

<h4 id="section-1">解决方案如下:</h4>
<ul>
  <li>将.gitignore改名为__gitignore__</li>
  <li>创建archetype.properties文件</li>
</ul>

<div class="highlighter-rouge"><pre class="highlight"><code>## generate for archetype-metadata.xml
excludePatterns=archetype.properties,*.iml,.idea/,.idea/libraries,logs/,build.sh


## generate .gitignore file
gitignore=.gitignore
</code></pre>
</div>

<ul>
  <li>修改pom文件, 多模块工程最外层的pom文件</li>
</ul>

<div class="highlighter-rouge"><pre class="highlight"><code>    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;
                &lt;version&gt;3.0.2&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;addDefaultExcludes&gt;false&lt;/addDefaultExcludes&gt;      &lt;!-- 解决复制.gitignore的问题 --&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                &lt;artifactId&gt;maven-archetype-plugin&lt;/artifactId&gt;
                &lt;version&gt;3.0.1&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;propertyFile&gt;archetype.properties&lt;/propertyFile&gt;   &lt;!-- 解决排除.idea目录的问题 --&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;
</code></pre>
</div>

<p>完美解决以上两个问题</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java native方法列表]]></title>
    <link href="http://www.lianghaijun.com/2016-02-12-java-native-list.html"/>
    <updated>2016-02-12T12:40:08+08:00</updated>
    <id>http://www.lianghaijun.com/java-native-list</id>
    <content type="html"><![CDATA[<p>想了解一下JDK里有多少方法是用navtive实现的, 所以统计了下</p>

<div class="highlighter-rouge"><pre class="highlight"><code>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Object</span><span class="o">.</span><span class="na">registerNatives</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Object</span><span class="o">.</span><span class="na">getClass</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Object</span><span class="o">.</span><span class="na">hashCode</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Object</span><span class="o">.</span><span class="na">clone</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Object</span><span class="o">.</span><span class="na">notify</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Object</span><span class="o">.</span><span class="na">notifyAll</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Object</span><span class="o">.</span><span class="na">wait</span><span class="o">(</span><span class="kt">long</span> <span class="n">timeout</span><span class="o">);</span>

<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span><span class="o">.</span><span class="na">intern</span><span class="o">();</span>

<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Throwable</span><span class="o">.</span><span class="na">fillInStackTrace</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Throwable</span><span class="o">.</span><span class="na">getStackTraceDepth</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Throwable</span><span class="o">.</span><span class="na">getStackTraceElement</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">);</span>

<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span><span class="o">.</span><span class="na">registerNatives</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span><span class="o">.</span><span class="na">forName0</span><span class="o">(</span><span class="n">String</span> <span class="kd">native</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">initialize</span><span class="o">,</span> <span class="n">ClassLoader</span> <span class="n">loader</span><span class="o">);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span><span class="o">.</span><span class="na">isInstance</span><span class="o">(</span><span class="n">Object</span> <span class="n">obj</span><span class="o">);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span><span class="o">.</span><span class="na">isAssignableFrom</span><span class="o">(</span><span class="n">Class</span><span class="o">&lt;?&gt;</span> <span class="n">cls</span><span class="o">);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span><span class="o">.</span><span class="na">isInterface</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span><span class="o">.</span><span class="na">isArray</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span><span class="o">.</span><span class="na">isPrimitive</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span><span class="o">.</span><span class="na">getName0</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span><span class="o">.</span><span class="na">getClassLoader0</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span><span class="o">.</span><span class="na">getSuperclass</span><span class="o">();</span>
<span class="c1">//.......</span>

<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">System</span><span class="o">.</span><span class="na">registerNatives</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">System</span><span class="o">.</span><span class="na">setIn0</span><span class="o">(</span><span class="n">InputStream</span><span class="o">);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">System</span><span class="o">.</span><span class="na">setOut0</span><span class="o">(</span><span class="n">PrintStream</span><span class="o">);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">System</span><span class="o">.</span><span class="na">setErr0</span><span class="o">(</span><span class="n">PrintStream</span><span class="o">);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">System</span><span class="o">.</span><span class="na">nanoTime</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">System</span><span class="o">.</span><span class="na">arraycopy</span><span class="o">(</span><span class="n">Object</span><span class="o">,</span> <span class="kt">int</span><span class="o">,</span> <span class="n">Object</span><span class="o">,</span> <span class="kt">int</span><span class="o">,</span> <span class="kt">int</span><span class="o">);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">System</span><span class="o">.</span><span class="na">identityHashCode</span><span class="o">(</span><span class="n">Object</span><span class="o">);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">System</span><span class="o">.</span><span class="na">initProperties</span><span class="o">(</span><span class="n">Properties</span><span class="o">);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">System</span><span class="o">.</span><span class="na">mapLibraryName</span><span class="o">(</span><span class="n">String</span><span class="o">);</span>


<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Thread</span><span class="o">.</span><span class="na">registerNatives</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Thread</span><span class="o">.</span><span class="na">currentThread</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Thread</span><span class="o">.</span><span class="na">yield</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="kt">long</span><span class="o">);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Thread</span><span class="o">.</span><span class="na">start0</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Thread</span><span class="o">.</span><span class="na">isInterrupted</span><span class="o">(</span><span class="kt">boolean</span><span class="o">);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Thread</span><span class="o">.</span><span class="na">isAlive</span><span class="o">();</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Thread</span><span class="o">.</span><span class="na">holdsLock</span><span class="o">(</span><span class="n">Object</span><span class="o">);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Thread</span><span class="o">.</span><span class="na">dumpThreads</span><span class="o">(</span><span class="n">Thread</span><span class="o">[]);</span>
<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Thread</span><span class="o">.</span><span class="na">getThreads</span><span class="o">();</span>
<span class="c1">//......</span>

<span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">Proxy</span><span class="o">.</span><span class="na">defineClass0</span><span class="o">(</span><span class="n">ClassLoader</span><span class="o">,</span> <span class="n">String</span><span class="o">,</span> <span class="kt">byte</span><span class="o">[],</span> <span class="kt">int</span><span class="o">,</span> <span class="kt">int</span><span class="o">);</span>

</code></pre>
</div>

<p>得出以下结论:</p>

<ul>
  <li>这里的Object,Class,Throwable,System,Thread 都是比较底层的功能,都有native的方法</li>
  <li>直接依赖了包装了native的类, 如
    <ul>
      <li>Math -&gt; StrictMath</li>
      <li>File -&gt; FileSystem</li>
      <li>Socket -&gt; PlainSocketImpl</li>
    </ul>
  </li>
  <li>java.lang.reflect包里的多数是Pojo, 都是从Class获取到的Pojo, 然后是纯内存操作, 但 Array 比较例外</li>
  <li>有很多纯内存计算, 没有使用native方法了, 如
    <ul>
      <li>String里编码转换</li>
      <li>Date的api</li>
      <li>ArrayList, HashMap的API</li>
      <li>对象的序列化</li>
      <li>BigInteger, BigDecimal数字运算</li>
      <li>字符串格式化</li>
    </ul>
  </li>
  <li>System, Thread, Runtime, Process都是系统核心紧密的, 几乎都需要调用至native方法的</li>
  <li>Class, Object则是语言相关的, 需要操作至字节码, 也几乎都是调用至native方法的</li>
  <li>还有比较特殊的 sun.misc.Unsafe 类, 主要是互斥锁类的API, 用于concurrent包</li>
</ul>

<p>而jdk之上, 几乎就很少有native了, 如以下</p>

<ul>
  <li>http的实现</li>
  <li>sql,jdbc,log的实现</li>
  <li>各类app应用</li>
</ul>

<p>所以总结了下, 涉及native的共几类</p>

<ul>
  <li>系统相关的 System, Runtime, Process, Thread, Unsafe, File, Socket</li>
  <li>语言相关的 Object, Class, Array, ClassLoader</li>
  <li>计算密集型的 StrictMath</li>
</ul>

<p>其实看native源代码是最直观的了, 点击 <a href="http://hg.openjdk.java.net/jdk7u/jdk7u/jdk/file/tip/src/share/native/java/lang/">http://hg.openjdk.java.net/jdk7u/jdk7u/jdk/file/tip/src/share/native/java/lang/</a>
或
<a href="https://github.com/dmlloyd/openjdk/tree/jdk7u/jdk7u/jdk/src/share/native/java/lang">https://github.com/dmlloyd/openjdk/tree/jdk7u/jdk7u/jdk/src/share/native/java/lang</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[升级jekyll]]></title>
    <link href="http://www.lianghaijun.com/2016-02-07-jekyll-update.html"/>
    <updated>2016-02-07T15:08:29+08:00</updated>
    <id>http://www.lianghaijun.com/jekyll-update</id>
    <content type="html"><![CDATA[<p>原先博客是使用 octopress 搭建的blog, jekyll版本是0.12
其中一个代码弊端是blog的源码中, source与octopress的部分代码耦合
所以希望能将代码分离, 这里采用直接jekyll的方案</p>

<p>使用jekyll的方案</p>

<ul>
  <li>jekyll3 需要ruby2.0以上版本,安装总是出错,解决方案</li>
</ul>

<div class="highlighter-rouge"><pre class="highlight"><code>sudo ln -sf ~/.rvm/rubies/ruby-2.2.1/bin/ruby /usr/bin/ruby
sudo ln -sf ~/.rvm/rubies/ruby-2.2.1/bin/gem /usr/bin/gem
</code></pre>
</div>

<ul>
  <li>
    <p>jekyll3升级了很多基本组件, 也存在很多的不兼容<br />
 markdown的解析组件有maruku|rdiscount|redcarpet|kramdown, 其中默认移除redcarpet, 采用kramdown</p>

    <table>
      <tbody>
        <tr>
          <td>highlighter的解析组件有pygments</td>
          <td>coderay</td>
          <td>rouge, 其中默认中移除pygments, 采用rouge</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>原先的markdown使用```做为code block的符号, 新的kramdown没有默认支持</p>
    <ul>
      <li>jekyll2中使用 kramdown.input=GFM , 可以继续使用</li>
      <li>jekyll3.1.1时, 因为bug的原因, 无法支持,  参考 <a href="http://www.tuicool.com/articles/aQ3aqq">http://www.tuicool.com/articles/aQ3aqq</a> 可以解决</li>
      <li>但是```前有没有换行符, 对页面的展现, 有着不同的展示方案</li>
    </ul>
  </li>
</ul>

<h2 id="bug">自己遇到的一些bug</h2>
<ul>
  <li>Q: Don’t know how to build task ‘default’</li>
  <li>A: rake -v 不支持, 应该是 rake -V ,也就是说后面的命令有问题</li>
  <li>Q: jekyll requires Ruby version &gt;= 2.0.0.</li>
  <li>A: rvm是安排在当前用户的, sudo时使用的 /usr/bin/ruby /usr/bin/gem的, 需要修正
    另外: ubuntu的ruby2.0也有问题, 切换至/usr/bin/ruby切换至rvm的2.2时, 问题解决</li>
  <li>Q: ERROR: While executing gem … (TypeError) no implicit conversion of nil int</li>
  <li>A: 同上</li>
</ul>

<hr />

<p>参考文档:
1. <a href="http://www.tuicool.com/articles/rAnmQvB">Jekyll kramdown配置</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mybatis 动态扫描xml]]></title>
    <link href="http://www.lianghaijun.com/2014-11-25-mybatis-dong-tai-sao-miao-xml.html"/>
    <updated>2014-11-25T08:34:29+08:00</updated>
    <id>http://www.lianghaijun.com/mybatis-dong-tai-sao-miao-xml</id>
    <content type="html"><![CDATA[<p>之前在java工程中引入mybatis, 在配置xml时总是这样子的</p>

<div class="highlighter-rouge"><pre class="highlight"><code>	<span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">"userMapper"</span> <span class="na">class=</span><span class="s">"org.mybatis.spring.mapper.MapperFactoryBean"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"mapperInterface"</span> <span class="na">value=</span><span class="s">"com.company.application.mapper.auth.UserMapper"</span> <span class="nt">/&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"sqlSessionFactory"</span> <span class="na">ref=</span><span class="s">"sqlSessionFactory"</span> <span class="nt">/&gt;</span>
	<span class="nt">&lt;/bean&gt;</span>
	
	<span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">"permissionMapper"</span> <span class="na">class=</span><span class="s">"org.mybatis.spring.mapper.MapperFactoryBean"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"mapperInterface"</span> <span class="na">value=</span><span class="s">"com.company.application.mapper.auth.PermissionMapper"</span> <span class="nt">/&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"sqlSessionFactory"</span> <span class="na">ref=</span><span class="s">"sqlSessionFactory"</span> <span class="nt">/&gt;</span>
	<span class="nt">&lt;/bean&gt;</span>
	
	<span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">"roleMapper"</span> <span class="na">class=</span><span class="s">"org.mybatis.spring.mapper.MapperFactoryBean"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"mapperInterface"</span> <span class="na">value=</span><span class="s">"com.company.application.mapper.auth.RoleMapper"</span> <span class="nt">/&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"sqlSessionFactory"</span> <span class="na">ref=</span><span class="s">"sqlSessionFactory"</span> <span class="nt">/&gt;</span>
	<span class="nt">&lt;/bean&gt;</span>
</code></pre>
</div>

<p>系统每增加一个mapper都要去配置一个bean, 这样不仅繁锁,而且多人编辑文件时,容易引起代码冲突</p>

<p>其实可以使用自动扫描的方式去加载所有的mapper文件,方法如下:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>	<span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"basePackage"</span> <span class="na">value=</span><span class="s">"com.company.application.mapper"</span> <span class="nt">/&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"sqlSessionFactory"</span> <span class="na">ref=</span><span class="s">"sqlSessionFactory"</span> <span class="nt">/&gt;</span>
	<span class="nt">&lt;/bean&gt;</span>
</code></pre>
</div>

<p>这个MapperScannerConfigurer是在mybatis-spring包中定义的
引入方法为</p>

<div class="highlighter-rouge"><pre class="highlight"><code>	<span class="nt">&lt;dependency&gt;</span>
		<span class="nt">&lt;groupId&gt;</span>org.mybatis<span class="nt">&lt;/groupId&gt;</span>
		<span class="nt">&lt;artifactId&gt;</span>mybatis-spring<span class="nt">&lt;/artifactId&gt;</span>
		<span class="nt">&lt;version&gt;</span>1.1.1<span class="nt">&lt;/version&gt;</span>
	<span class="nt">&lt;/dependency&gt;</span>
</code></pre>
</div>

<p>如果是 MyBatis-Spring 1.2.0 以上, 还有一种更简单的方法, <mybatis:scan></mybatis:scan>
见http://mybatis.github.io/spring/mappers.html    (英文)
或http://mybatis.github.io/spring/zh/mappers.html (中文)</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby语法糖 - 多返回值]]></title>
    <link href="http://www.lianghaijun.com/2014-01-19-ruby-multiple-return.html"/>
    <updated>2014-01-19T13:01:18+08:00</updated>
    <id>http://www.lianghaijun.com/ruby-multiple-return</id>
    <content type="html"><![CDATA[<p>前几天写代码的时候, 使用到了ruby的多返回值, 觉得很值得写一写</p>

<p>记得第一次看见多返回值, 是在lua中, 当时觉得不过是一语法糖, 没什么特别的, 并不会带来什么特别的好处, 就没有细细研究下去</p>

<p>多返回值, 比较经典的使用场景是交换数值, 最常用于排序等各类算法中, 比如</p>

<div class="highlighter-rouge"><pre class="highlight"><code>	<span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">list</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">list</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
	<span class="n">width</span><span class="p">,</span> <span class="n">height</span> <span class="o">=</span> <span class="n">height</span><span class="p">,</span> <span class="n">width</span>
</code></pre>
</div>

<p>而实际中, 我碰到的使用场景是这样的, 解析一个文本文件</p>

<p>常见的写法这样的</p>

<div class="highlighter-rouge"><pre class="highlight"><code>    <span class="no">IO</span><span class="p">.</span><span class="nf">read</span><span class="p">(</span><span class="s1">'20140119_result.txt'</span><span class="p">).</span><span class="nf">lines</span><span class="p">.</span><span class="nf">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">line</span><span class="o">|</span>
        <span class="n">words</span> <span class="o">=</span> <span class="n">line</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="s1">','</span><span class="p">)</span>
        <span class="nb">id</span> <span class="o">=</span> <span class="n">words</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
        <span class="nb">name</span> <span class="o">=</span> <span class="n">words</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
        <span class="n">type</span> <span class="o">=</span> <span class="n">words</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
        <span class="n">status</span> <span class="o">=</span> <span class="n">words</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span>
        
        <span class="nb">puts</span> <span class="s2">"[</span><span class="si">#{</span><span class="n">status</span><span class="si">}</span><span class="s2">] </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="nb">id</span><span class="si">}</span><span class="s2">"</span> <span class="k">if</span> <span class="n">type</span> <span class="o">==</span> <span class="mi">1</span>
    <span class="p">}</span>   
</code></pre>
</div>

<p>如果用多返回值, 效果就完全不同了, 而且达到了相同的效果</p>

<div class="highlighter-rouge"><pre class="highlight"><code>	IO.read('20140119_result.txt').lines.each { |line|
		id,name,type,status = line.split(',')
		puts "[#{status}] #{name}/#{id}" if type == 1
	}
</code></pre>
</div>

<p>在java中, 经常见一些让我很痛苦的写法, 如</p>

<div class="highlighter-rouge"><pre class="highlight"><code>	<span class="n">Result</span><span class="o">&lt;</span><span class="n">PairValue</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="n">NoSql</span><span class="o">.</span><span class="na">getValue</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
	<span class="k">if</span><span class="o">(!</span><span class="n">result</span><span class="o">.</span><span class="na">isSuccess</span> <span class="o">||</span> <span class="n">result</span><span class="o">.</span><span class="na">getResult</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">result</span><span class="o">.</span><span class="na">getResult</span><span class="o">().</span><span class="na">getValue</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"......"</span><span class="o">,</span> <span class="n">result</span><span class="o">.</span><span class="na">getError</span><span class="o">());</span>
	<span class="o">}</span>
	<span class="n">Model</span> <span class="n">model</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">getResult</span><span class="o">().</span><span class="na">getValue</span><span class="o">();</span>
</code></pre>
</div>

<p>单独看这行代码, 你觉得无所谓, 但是一个方法里, 只有四行逻辑, 但却有16行代码,其中12个是这种判断,你就是发疯了,看代码太累了,无法直接看到主要的逻辑</p>

<div class="highlighter-rouge"><pre class="highlight"><code>	<span class="n">model</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">err</span> <span class="o">=</span> <span class="no">NoSql</span><span class="p">.</span><span class="nf">getValue</span><span class="p">(</span><span class="n">key</span><span class="p">);</span>
	<span class="n">logger</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="s2">"...."</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span> <span class="k">if</span> <span class="n">err</span>

	<span class="no">List</span><span class="p">,</span> <span class="n">err</span> <span class="o">=</span> <span class="no">Service</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">model</span><span class="p">.</span><span class="nf">itemIds</span><span class="p">)</span>
	<span class="n">logger</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="s2">"...."</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span> <span class="k">if</span> <span class="n">err</span>
</code></pre>
</div>

<p>纵观代码, 会把注意力集中到业务逻辑上, 而不是各种返回结果的判断上</p>

<h2 id="section">本质</h2>

<p>让我们来看看, ruby多返回值的本质</p>

<div class="highlighter-rouge"><pre class="highlight"><code>	<span class="k">def</span> <span class="nf">multi</span>
		<span class="k">return</span> <span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span>
	<span class="k">end</span>
	<span class="n">result</span> <span class="o">=</span> <span class="n">multi</span>
	<span class="nb">puts</span> <span class="n">result</span><span class="p">.</span><span class="nf">class</span>   <span class="c1">## Array</span>
	<span class="nb">puts</span> <span class="n">result</span> <span class="o">===</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span>  <span class="c1">## true </span>
</code></pre>
</div>

<p>我们发现, 原来ruby的多返回值就是一个数组, 而且</p>

<ul>
  <li>x=1,2,3,4,5,6 与 x=[1,2,3,4,5,6]  写法是一样的,结果也一样</li>
  <li>x,y=1,2,3,4,5,6 与 x,y=[1,2,3,4,5,6]  写法也是一样的,结果也一样</li>
  <li>不一样的一点是   [1,2,3,4,5,6].class 与  (1,2,3,4,5,6).class 是不一样的, 后面会报语法错误</li>
  <li>因此, 不带中括号, 其实是一种简写的方式, 只是有些地方能简单, 有些地方无法简写</li>
  <li>从另一个角度来看, []其实也是一种运算符号, 与()一样, 是为了提高运算符的优先级</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby Enumerator]]></title>
    <link href="http://www.lianghaijun.com/2014-01-12-ruby-enumerable.html"/>
    <updated>2014-01-12T17:33:56+08:00</updated>
    <id>http://www.lianghaijun.com/ruby-enumerable</id>
    <content type="html"><![CDATA[<p>之前看到这样的API文档</p>

<p>关于数组Array的</p>

<div class="highlighter-rouge"><pre class="highlight"><code>map { |item| block } → new_ary click to toggle source
map → Enumerator
Invokes the given block once for each element of self.

Creates a new array containing the values returned by the block.

See also Enumerable#collect.

If no block is given, an Enumerator is returned instead.
</code></pre>
</div>

<p>当时不明白, Array的map方法不带参数时返回 Enumerator, 而Array已经支持各类迭代操作了, 为什么还要返回Enumerator, 与数组的操作有什么区别呢, 当时没有细究, 今天知道了</p>

<!--more-->

<p>我们知道数组是继承自Enumerable的</p>

<div class="highlighter-rouge"><pre class="highlight"><code>irb(main):077:0&gt; [].class.ancestors
=&gt; [Array, Enumerable, Object, Kernel, BasicObject]
</code></pre>
</div>

<p>数组中的方法, 会比Enumerable多一些数组特色的方法, 如insert,push,pop,fist,last</p>

<p>而Enumerable调用map时, 有一些常用的方法, 无法满足, 比如</p>

<div class="highlighter-rouge"><pre class="highlight"><code>	[2,3,5,7,9,11].map {|item,index| item+index}
</code></pre>
</div>

<p>map时, 参数中的第一个参数, 为item, 但是不支持索引位置</p>

<p>而像select, count, reject 等方法时, 同样也不支持索引位置</p>

<p>于是Enumerator发挥作用了, 注意这里不是Enumerable</p>

<div class="highlighter-rouge"><pre class="highlight"><code>irb(main):071:0&gt; [].map.methods - [].methods
=&gt; [:with_index, :with_object, :next_values, :peek_values, :next, :peek, :feed, :rewind]
</code></pre>
</div>

<p>所以
<code class="highlighter-rouge">
irb(main):109:0&gt; [2,3,5,7,9,11].map.with_index {|item,index| item+index}
=&gt; [2, 4, 7, 10, 13, 16]
</code></p>

<p>结论: Array中map,select,count,reject时, 如果不带闭包参数, 将返回Enumerator, 这时可继续使用索引参数</p>

<p>这里是ruby的官方文档, <a href="http://ruby-doc.org/core-1.9.3/Enumerator.html">Enumerator的API</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby 字符串与数组]]></title>
    <link href="http://www.lianghaijun.com/2014-01-05-ruby-string-array.html"/>
    <updated>2014-01-05T18:55:00+08:00</updated>
    <id>http://www.lianghaijun.com/ruby-string-array</id>
    <content type="html"><![CDATA[<p>ruby的字符串与数组,在API设计上,有很多的相似之处,同时方法广度上,又有所区分,这里还是有很多学问</p>

<!--more-->

<p>字符串在底层上是字符的数组, 同是数组, 我们先从相同点开始</p>

<h3 id="section">比较方法名</h3>

<p>让我们先单纯的比较一下</p>

<div class="highlighter-rouge"><pre class="highlight"><code>'string'.methods.length   ### 161
('string'.methods - Object.new.methods).length   ## 107

[].methods.length         ### 167
([].methods - Object.new.methods).length   ## 113

([].methods &amp; 'string'.methods).length    ## 76
([].methods &amp; 'string'.methods - Object.new.methods).length  ## 22

[].methods &amp; 'string'.methods - Object.new.methods
[:[], :[]=, :concat, :&lt;&lt;, :insert, :length, :size, :empty?, :index, :rindex, :reverse, :reverse!, :delete, :replace, :clear, :include?, :slice, :slice!, :+, :*, :count, :partition]
</code></pre>
</div>

<ul>
  <li>字符串共有161个方法,去掉继承后, 剩107个</li>
  <li>数组共有167个方法,去掉继承后,剩113个</li>
  <li>字符串与数组相同的方法,共有76,去掉继承的54个, 只剩22个</li>
</ul>

<p>让我们来仔细看看这22个方法</p>

<ul>
  <li>[],[]=, 下标操作</li>
  <li>[],slice,slice! 子字符串,子数组操作</li>
  <li>«,insert,+,*       插入操作</li>
  <li>length,size,count,empty?   大小计算</li>
  <li>index,rindex,include?    查找</li>
  <li>reverse, reverse!  反转</li>
  <li>delete,clear          删除</li>
  <li>partition         拆分 (数组中没找到此方法????)</li>
</ul>

<p>汇总起来, 就是 增删改查, 子反转,大小</p>

<h3 id="section-1">字符串</h3>

<p>而字符串中去掉数组的方法, 就是真正的字符串操作了
<code class="highlighter-rouge">
irb(main):026:0&gt; 'string'.methods - [].methods
=&gt; [:casecmp, :%, :bytesize, :match, :succ, :succ!, :next, :next!, :upto, :chr, :getbyte, :setbyte, :byteslice, :to_i, :to_f, :to_str, :dump, :upcase, :downcase, :capitalize, :swapcase, :upcase!, :downcase!, :capitalize!, :swapcase!, :hex, :oct, :split, :lines, :bytes, :chars, :codepoints, :prepend, :crypt, :intern, :to_sym, :ord, :start_with?, :end_with?, :scan, :ljust, :rjust, :center, :sub, :gsub, :chop, :chomp, :strip, :lstrip, :rstrip, :sub!, :gsub!, :chop!, :chomp!, :strip!, :lstrip!, :rstrip!, :tr, :tr_s, :squeeze, :tr!, :tr_s!, :delete!, :squeeze!, :each_line, :each_byte, :each_char, :each_codepoint, :sum, :rpartition, :encoding, :force_encoding, :b, :valid_encoding?, :ascii_only?, :unpack, :encode, :encode!, :to_r, :to_c, :&gt;, :&gt;=, :&lt;, :&lt;=, :between?]
</code></p>

<p>其中: getbyte,setbyte,byteslice,split,bytes,chars,codepoints,prepend,start_with?,end_with? ,sub,gsub,sub!,gsub!,delete!,each_line,each_byte,each_char,each_codepoint 等等,其实也是围绕这个概念,派生出来的方法,都是在”部分”,”全体”, 在这个概念上生成的方法</p>

<p>而to_i, to_f, hex, &lt; &gt; 等, 这些是属于转换与比较的方法, 另upcase,downcase 是字符串间的转换</p>

<p>除去这个概念后, 与字符串本质有关的方法, 只有encoding,force_encoding 这几个方法了</p>

<p>所以字符串的方法, 我们可以归结为三类</p>

<ul>
  <li>字符数组, 数组的操作方法</li>
  <li>转换与比较</li>
  <li>编码相关</li>
</ul>

<h3 id="section-2">数组</h3>

<p>让我们再来看看数组</p>

<div class="highlighter-rouge"><pre class="highlight"><code>irb(main):031:0&gt; [].methods - 'string'.methods
=&gt; [:to_a, :to_ary, :at, :fetch, :first, :last, :push, :pop, :shift, :unshift, :each, :each_index, :reverse_each, :find_index, :join, :rotate, :rotate!, :sort, :sort!, :sort_by!, :collect, :collect!, :map, :map!, :select, :select!, :keep_if, :values_at, :delete_at, :delete_if, :reject, :reject!, :zip, :transpose, :fill, :assoc, :rassoc, :-, :&amp;, :|, :uniq, :uniq!, :compact, :compact!, :flatten, :flatten!, :shuffle!, :shuffle, :sample, :cycle, :permutation, :combination, :repeated_permutation, :repeated_combination, :product, :take, :take_while, :drop, :drop_while, :bsearch, :pack, :entries, :sort_by, :grep, :find, :detect, :find_all, :flat_map, :collect_concat, :inject, :reduce, :group_by, :all?, :any?, :one?, :none?, :min, :max, :minmax, :min_by, :max_by, :minmax_by, :member?, :each_with_index, :each_entry, :each_slice, :each_cons, :each_with_object, :chunk, :slice_before, :lazy]
</code></pre>
</div>

<p>我们再来分下组</p>

<ul>
  <li>常用的增删改查, 子反转,大小</li>
  <li>同样的转换与比较  to_a</li>
  <li>单项相关,   at,first,last,pop,min,max,take</li>
  <li>遍历,     each,each_index, collect, map,select, take_while,drop_while,grep,find,find_all,reduce,all?,any?,one?, each_*</li>
</ul>

<h3 id="section-3">后续</h3>

<p>我们可以看出,在数组中有很多方法,并没有在字符串中体现,字符串中部分数组的方法,必定是最常用</p>

<p>假如,数组里所有的方法,都放在字符串中,虽然行得通,但并不好,相反不好理解, 比如string.grep,实际意义不大</p>

<p>所以我们现在可以理解, 为什么 String 不是直接继承自 Array 了, 因为Array并不是String的核心, String中最核心的应该是别的, 比如字符与编码</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby 学习笔记]]></title>
    <link href="http://www.lianghaijun.com/2014-01-04-ruby-study-notes.html"/>
    <updated>2014-01-04T21:39:33+08:00</updated>
    <id>http://www.lianghaijun.com/ruby-study-notes</id>
    <content type="html"><![CDATA[<style>
figure.code{width: 48%; display:inline-block}
</style>

<p>学习ruby已经有一段时间了, 抽点时间把常用的语法方法总结一下, 算是入门小笔记吧</p>

<!--more-->

<h2 id="section">简述</h2>

<ul>
  <li>ruby为动态语言,弱类型,一切皆对象(就是可以.)</li>
  <li>ruby没有属性,只有方法,看似属性的,其实都只是其成员变量的读方法</li>
  <li>ruby调用方法时括号可省略, 行尾无分号, return 关键字可省略</li>
  <li>ruby支持[]语法创建变长数组, {}语法创建Hash对象, 支持闭包</li>
</ul>

<h2 id="section-1">常用的语法结构</h2>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="c1">#encoding:utf-8</span>
<span class="nb">require</span> <span class="s1">'nokogiri'</span>

<span class="c1"># comment</span>

<span class="k">return</span> <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>

<span class="k">if</span><span class="p">(</span><span class="n">page</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
	<span class="n">page</span> <span class="o">=</span> <span class="mi">1</span>
<span class="k">end</span>

<span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="p">.</span><span class="nf">.</span><span class="mi">10</span>
	<span class="nb">puts</span> <span class="n">i</span><span class="p">.</span><span class="nf">to_s</span> <span class="o">+</span> <span class="s1">'.'</span>
<span class="k">end</span>

<span class="k">for</span> <span class="n">step</span> <span class="k">in</span> <span class="p">[</span><span class="s1">'one'</span><span class="p">,</span><span class="s1">'two'</span><span class="p">,</span><span class="s1">'three'</span><span class="p">]</span>
	<span class="n">process</span><span class="p">(</span><span class="n">step</span><span class="p">)</span>
<span class="k">end</span>

<span class="n">list</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
	<span class="nb">puts</span> <span class="s2">"echo </span><span class="si">#{</span><span class="n">x</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>

<span class="n">list</span><span class="p">.</span><span class="nf">each_index</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
    <span class="nb">puts</span> <span class="s2">"echo </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2"> -&gt; </span><span class="si">#{</span><span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="si">}</span><span class="s2">"</span>
<span class="p">}</span>

<span class="k">def</span> <span class="nf">nilisnull</span>
	<span class="kp">nil</span><span class="p">.</span><span class="nf">to_s</span> <span class="o">===</span> <span class="s1">''</span>
<span class="k">end</span>

<span class="k">case</span> <span class="n">x</span>
<span class="k">when</span> <span class="mi">1</span><span class="p">.</span><span class="nf">.</span><span class="mi">10</span>              <span class="c1">#匹配数字</span>
    <span class="nb">puts</span> <span class="s2">"First branch"</span>
<span class="k">when</span> <span class="n">foobar</span><span class="p">()</span>           <span class="c1">#批量方法返回的值</span>
    <span class="nb">puts</span> <span class="s2">"Second branch"</span>
<span class="k">when</span> <span class="sr">/^hel.*/</span>           <span class="c1">#匹配正则表达式</span>
    <span class="nb">puts</span> <span class="s2">"Third branch"</span>
<span class="k">else</span>  
    <span class="nb">puts</span> <span class="s2">"Last branch"</span>
<span class="k">end</span>
</code></pre>
</div>

<h2 id="section-2">方法符号</h2>

<p>语法上除了一些常见的顺序,选择,循环,变量,函数,模块,类, 还有一些特有的内容</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="c1"># 查看一个变量可以调用哪些方法</span>
<span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mi">108</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="s1">'string'</span><span class="p">.</span><span class="nf">methods</span>
<span class="o">=&gt;</span> <span class="p">[</span><span class="ss">:&lt;=&gt;</span><span class="p">,</span> <span class="ss">:==</span><span class="p">,</span> <span class="ss">:===</span><span class="p">,</span> <span class="ss">:eql?</span><span class="p">,</span> <span class="ss">:hash</span><span class="p">,</span> <span class="ss">:casecmp</span><span class="p">,</span> <span class="p">:</span><span class="o">+</span><span class="p">,</span> <span class="p">:</span><span class="o">*</span><span class="p">,</span> <span class="ss">:%</span><span class="p">,</span> <span class="ss">:[]</span><span class="p">,</span> <span class="ss">:[]=</span><span class="p">,</span> <span class="ss">:insert</span><span class="p">,</span> <span class="ss">:length</span><span class="p">,</span> <span class="ss">:size</span><span class="p">,</span> <span class="ss">:bytesize</span><span class="p">,</span> <span class="ss">:empty?</span><span class="p">,</span> <span class="p">:</span><span class="o">=~</span><span class="p">,</span> <span class="ss">:match</span><span class="p">,</span> <span class="ss">:succ</span><span class="p">,</span> <span class="ss">:succ!</span><span class="p">,</span> <span class="ss">:next</span><span class="p">,</span> <span class="ss">:next!</span><span class="p">,</span> <span class="ss">:upto</span><span class="p">,</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:rindex</span><span class="p">,</span> <span class="ss">:replace</span><span class="p">,</span> <span class="ss">:clear</span><span class="p">,</span> <span class="ss">:chr</span><span class="p">,</span> <span class="ss">:getbyte</span><span class="p">,</span> <span class="ss">:setbyte</span><span class="p">,</span> <span class="ss">:byteslice</span><span class="p">,</span> <span class="ss">:to_i</span><span class="p">,</span> <span class="ss">:to_f</span><span class="p">,</span> <span class="ss">:to_s</span><span class="p">,</span> <span class="ss">:to_str</span><span class="p">,</span> <span class="ss">:inspect</span><span class="p">,</span> <span class="ss">:dump</span><span class="p">,</span> <span class="ss">:upcase</span><span class="p">,</span> <span class="ss">:downcase</span><span class="p">,</span> <span class="ss">:capitalize</span><span class="p">,</span> <span class="ss">:swapcase</span><span class="p">,</span> <span class="ss">:upcase!</span><span class="p">,</span> <span class="ss">:downcase!</span><span class="p">,</span> <span class="ss">:capitalize!</span><span class="p">,</span> <span class="ss">:swapcase!</span><span class="p">,</span> <span class="ss">:hex</span><span class="p">,</span> <span class="ss">:oct</span><span class="p">,</span> <span class="ss">:split</span><span class="p">,</span> <span class="ss">:lines</span><span class="p">,</span> <span class="ss">:bytes</span><span class="p">,</span> <span class="ss">:chars</span><span class="p">,</span> <span class="ss">:codepoints</span><span class="p">,</span> <span class="ss">:reverse</span><span class="p">,</span> <span class="ss">:reverse!</span><span class="p">,</span> <span class="ss">:concat</span><span class="p">,</span> <span class="ss">:&lt;&lt;</span><span class="p">,</span> <span class="ss">:prepend</span><span class="p">,</span> <span class="ss">:crypt</span><span class="p">,</span> <span class="ss">:intern</span><span class="p">,</span> <span class="ss">:to_sym</span><span class="p">,</span> <span class="ss">:ord</span><span class="p">,</span> <span class="ss">:include?</span><span class="p">,</span> <span class="ss">:start_with?</span><span class="p">,</span> <span class="ss">:end_with?</span><span class="p">,</span> <span class="ss">:scan</span><span class="p">,</span> <span class="ss">:ljust</span><span class="p">,</span> <span class="ss">:rjust</span><span class="p">,</span> <span class="ss">:center</span><span class="p">,</span> <span class="ss">:sub</span><span class="p">,</span> <span class="ss">:gsub</span><span class="p">,</span> <span class="ss">:chop</span><span class="p">,</span> <span class="ss">:chomp</span><span class="p">,</span> <span class="ss">:strip</span><span class="p">,</span> <span class="ss">:lstrip</span><span class="p">,</span> <span class="ss">:rstrip</span><span class="p">,</span> <span class="ss">:sub!</span><span class="p">,</span> <span class="ss">:gsub!</span><span class="p">,</span> <span class="ss">:chop!</span><span class="p">,</span> <span class="ss">:chomp!</span><span class="p">,</span> <span class="ss">:strip!</span><span class="p">,</span> <span class="ss">:lstrip!</span><span class="p">,</span> <span class="ss">:rstrip!</span><span class="p">,</span> <span class="ss">:tr</span><span class="p">,</span> <span class="ss">:tr_s</span><span class="p">,</span> <span class="ss">:delete</span><span class="p">,</span> <span class="ss">:squeeze</span><span class="p">,</span> <span class="ss">:count</span><span class="p">,</span> <span class="ss">:tr!</span><span class="p">,</span> <span class="ss">:tr_s!</span><span class="p">,</span> <span class="ss">:delete!</span><span class="p">,</span> <span class="ss">:squeeze!</span><span class="p">,</span> <span class="ss">:each_line</span><span class="p">,</span> <span class="ss">:each_byte</span><span class="p">,</span> <span class="ss">:each_char</span><span class="p">,</span> <span class="ss">:each_codepoint</span><span class="p">,</span> <span class="ss">:sum</span><span class="p">,</span> <span class="ss">:slice</span><span class="p">,</span> <span class="ss">:slice!</span><span class="p">,</span> <span class="ss">:partition</span><span class="p">,</span> <span class="ss">:rpartition</span><span class="p">,</span> <span class="ss">:encoding</span><span class="p">,</span> <span class="ss">:force_encoding</span><span class="p">,</span> <span class="ss">:b</span><span class="p">,</span> <span class="ss">:valid_encoding?</span><span class="p">,</span> <span class="ss">:ascii_only?</span><span class="p">,</span> <span class="ss">:unpack</span><span class="p">,</span> <span class="ss">:encode</span><span class="p">,</span> <span class="ss">:encode!</span><span class="p">,</span> <span class="ss">:to_r</span><span class="p">,</span> <span class="ss">:to_c</span><span class="p">,</span> <span class="p">:</span><span class="o">&gt;</span><span class="p">,</span> <span class="p">:</span><span class="o">&gt;=</span><span class="p">,</span> <span class="ss">:&lt;</span><span class="p">,</span> <span class="ss">:&lt;=</span><span class="p">,</span> <span class="ss">:between?</span><span class="p">,</span> <span class="ss">:nil?</span><span class="p">,</span> <span class="p">:</span><span class="o">!~</span><span class="p">,</span> <span class="ss">:class</span><span class="p">,</span> <span class="ss">:singleton_class</span><span class="p">,</span> <span class="ss">:clone</span><span class="p">,</span> <span class="ss">:dup</span><span class="p">,</span> <span class="ss">:taint</span><span class="p">,</span> <span class="ss">:tainted?</span><span class="p">,</span> <span class="ss">:untaint</span><span class="p">,</span> <span class="ss">:untrust</span><span class="p">,</span> <span class="ss">:untrusted?</span><span class="p">,</span> <span class="ss">:trust</span><span class="p">,</span> <span class="ss">:freeze</span><span class="p">,</span> <span class="ss">:frozen?</span><span class="p">,</span> <span class="ss">:methods</span><span class="p">,</span> <span class="ss">:singleton_methods</span><span class="p">,</span> <span class="ss">:protected_methods</span><span class="p">,</span> <span class="ss">:private_methods</span><span class="p">,</span> <span class="ss">:public_methods</span><span class="p">,</span> <span class="ss">:instance_variables</span><span class="p">,</span> <span class="ss">:instance_variable_get</span><span class="p">,</span> <span class="ss">:instance_variable_set</span><span class="p">,</span> <span class="ss">:instance_variable_defined?</span><span class="p">,</span> <span class="ss">:remove_instance_variable</span><span class="p">,</span> <span class="ss">:instance_of?</span><span class="p">,</span> <span class="ss">:kind_of?</span><span class="p">,</span> <span class="ss">:is_a?</span><span class="p">,</span> <span class="ss">:tap</span><span class="p">,</span> <span class="ss">:send</span><span class="p">,</span> <span class="ss">:public_send</span><span class="p">,</span> <span class="ss">:respond_to?</span><span class="p">,</span> <span class="ss">:extend</span><span class="p">,</span> <span class="ss">:display</span><span class="p">,</span> <span class="ss">:method</span><span class="p">,</span> <span class="ss">:public_method</span><span class="p">,</span> <span class="ss">:define_singleton_method</span><span class="p">,</span> <span class="ss">:object_id</span><span class="p">,</span> <span class="ss">:to_enum</span><span class="p">,</span> <span class="ss">:enum_for</span><span class="p">,</span> <span class="ss">:equal?</span><span class="p">,</span> <span class="p">:</span><span class="o">!</span><span class="p">,</span> <span class="p">:</span><span class="o">!=</span><span class="p">,</span> <span class="ss">:instance_eval</span><span class="p">,</span> <span class="ss">:instance_exec</span><span class="p">,</span> <span class="ss">:__send__</span><span class="p">,</span> <span class="ss">:__id__</span><span class="p">]</span>
</code></pre>
</div>

<p>其中:</p>

<ul>
  <li>冒号: 用冒号+字符串代表Symbol(名字), 表示创建了一个Symbol对象, 常用于表示方法, 可以参考<a href="http://www.ibm.com/developerworks/cn/opensource/os-cn-rubysbl/index.html">这里</a></li>
  <li>问号: 问号也是方法名的一部分,表示这个方法,返回true或者false</li>
  <li>叹号: 叹号也是方法名的一部分,表示这个方法,与同名的方法(如gsub,gsub!)功能类似,但此方法会改变对象的内部属性, 相反, 另一个方法则不会修改</li>
  <li>下划线: 如__send__, __id__, 为特殊命名方式, 因send太常见,可能被覆盖,用__send__可避免</li>
</ul>

<h2 id="section-3">字符串操作</h2>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="c1">## 简单</span>
<span class="s1">'hello'</span><span class="p">.</span><span class="nf">length</span>   <span class="c1">## 5</span>
<span class="s1">'hello'</span><span class="p">.</span><span class="nf">start_with?</span><span class="p">(</span><span class="s1">'he'</span><span class="p">)</span>   <span class="c1">## true</span>
<span class="s1">'hello'</span><span class="p">.</span><span class="nf">end_with?</span><span class="p">(</span><span class="s1">'he'</span><span class="p">)</span>     <span class="c1">## false</span>
<span class="s1">' hello '</span><span class="p">.</span><span class="nf">strip</span>             <span class="c1">## 'hello'</span>

<span class="c1"># 字符串连接</span>
<span class="s1">'hello '</span> <span class="o">+</span> <span class="s1">'world '</span> <span class="o">+</span> <span class="mi">3</span><span class="p">.</span><span class="nf">to_s</span>  <span class="c1">## 'hello world 3'</span>

<span class="c1"># 子字符串</span>
<span class="s1">'hello world'</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span>     <span class="c1">## 'l'</span>
<span class="s1">'hello world'</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">]</span>   <span class="c1">## 'lo wo'</span>
<span class="s1">'hello world'</span><span class="p">[</span><span class="mi">3</span><span class="p">.</span><span class="nf">.</span><span class="mi">5</span><span class="p">]</span>  <span class="c1">## 'lo '</span>

<span class="c1"># 查找</span>
<span class="s1">'hello world'</span><span class="p">.</span><span class="nf">index</span><span class="p">(</span><span class="s1">'orl'</span><span class="p">)</span>   <span class="c1">## 7</span>
<span class="s1">'hello world'</span><span class="p">.</span><span class="nf">index</span><span class="p">(</span><span class="sr">/[ole]+/</span><span class="p">)</span>  <span class="c1">## 1</span>

<span class="c1"># 替换</span>
<span class="s1">'hello world'</span><span class="p">.</span><span class="nf">gsub</span><span class="p">(</span><span class="s1">'o'</span><span class="p">,</span> <span class="s1">'e'</span><span class="p">)</span>  <span class="c1">## 'helle werld'</span>
<span class="s1">'hello world'</span><span class="p">.</span><span class="nf">gsub</span><span class="p">(</span><span class="sr">/[a-z]+/</span><span class="p">,</span> <span class="s1">'ok'</span><span class="p">)</span>   <span class="c1">## 'ok ok'</span>

<span class="c1"># 分拆</span>
<span class="s1">'hello world'</span><span class="p">.</span><span class="nf">lines</span><span class="p">(</span><span class="s1">' '</span><span class="p">)</span>     <span class="c1">## ["hello ", "world"]</span>
<span class="s2">" now's  the time"</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="s1">' '</span><span class="p">)</span>   <span class="c1">#=&gt; ["now's", "the", "time"]</span>
<span class="s2">"hello"</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sr">//</span><span class="p">)</span>               <span class="c1">#=&gt; ["h", "e", "l", "l", "o"]</span>

</code></pre>
</div>

<h2 id="section-4">数组操作</h2>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="p">[</span><span class="s1">'one'</span><span class="p">,</span><span class="s1">'two'</span><span class="p">,</span><span class="s1">'three'</span><span class="p">].</span><span class="nf">length</span>    <span class="c1">## 3</span>
<span class="p">[</span><span class="s1">'one'</span><span class="p">,</span><span class="s1">'two'</span><span class="p">,</span><span class="s1">'three'</span><span class="p">].</span><span class="nf">include?</span><span class="p">(</span><span class="s1">'four'</span><span class="p">)</span>   <span class="c1">## false</span>
<span class="p">[</span><span class="s1">'1'</span><span class="p">,</span><span class="s1">'2'</span><span class="p">,</span><span class="s1">'3'</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s1">'4'</span>            <span class="c1">## ['1','2','3','4']</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">][</span><span class="mi">1</span><span class="p">.</span><span class="nf">.</span><span class="mi">3</span><span class="p">]</span>                 <span class="c1">## [2,3]</span>
<span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">].</span><span class="nf">sort</span>					<span class="c1">## [1,2,3,4]</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">].</span><span class="nf">uniq</span>					<span class="c1">## [1,3,4]</span>
<span class="p">[</span><span class="s1">'one'</span><span class="p">,</span><span class="s1">'two'</span><span class="p">,</span><span class="s1">'three'</span><span class="p">].</span><span class="nf">join</span><span class="p">(</span><span class="s1">','</span><span class="p">)</span> <span class="c1">## 'one,two,three'</span>

</code></pre>
</div>

<h2 id="section-5">函数</h2>

<div class="highlighter-rouge"><pre class="highlight"><code>def process

end
</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iteye 博客迁移]]></title>
    <link href="http://www.lianghaijun.com/2013-12-31-iteye-blog-migration.html"/>
    <updated>2013-12-31T15:16:16+08:00</updated>
    <id>http://www.lianghaijun.com/iteye-blog-migration</id>
    <content type="html"><![CDATA[<p>之前一直是在iteye上写博客的, 后来建立了本博客系统后, 就希望将博客从iteye上迁移过来</p>

<p>然而iteye上博客的文章太多了, 手动一篇一篇拷贝很不现实, 所以写了个工具来辅助迁移</p>

<p>iteye2markdown是一款博客迁移工具,可以将博客从iteye迁移至octopress</p>

<ul>
  <li>此工具会自动下载iteye博客上的所有文章</li>
  <li>接着会将博客中的bbcode代码转换成markdown</li>
  <li>下载转换后的markdown可用于octopress,迁移至自己的博客系统上</li>
</ul>

<!--more-->

<p>使用方式:</p>

<ul>
  <li>修改download.rb中的cookie配置, cookie将用于连接iteye.com的后台系统, 下载博客内容</li>
  <li>修改download.rb中的博客地址</li>
  <li>使用以下命令
<code class="highlighter-rouge">
ruby download.rb
</code>
执行下载转换, 结果保存于blog目录中</li>
</ul>

<p>源代码见:  <a href="https://github.com/seavers/iteye2markdown">github</a></p>

<p>核心代码如下:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>re 'open-uri'
require 'nokogiri'

def process(id, date)
	host = 'http://seavers.iteye.com'
	cookie = ''      #IO.read('cookie.txt')
	agent = 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.14 Safari/537.36'

	html = open(host + '/admin/blogs/' + id + '/edit', 'User-Agent'=&gt;agent, 'Cookie'=&gt;cookie).read
	doc = Nokogiri::HTML(html)

	title = doc.search('#blog_title').attr('value').to_s
	text = doc.search('#editor_body').text
	category = doc.search('#blog_category_list').attr('value').to_s
	tag = doc.search('#blog_tag_list').attr('value').to_s
	

	content = text
		.gsub('[size=xx-large]', '#')
		.gsub('[size=x-large]', '##')
		.gsub('[size=large]', '###')
		.gsub('[size=medium]', '####')
		.gsub('[size=small]', '')
		.gsub('[size=x-small]', '')
		.gsub('[size=xx-small]', '')
		.gsub('[/size]', '')
		.gsub(/\[url=(.*)\](.*)\[\/url\]/, '[\2](\1)')
		.gsub('[url]', '').gsub('[/url]', '')
		.gsub('[b]', '*').gsub('[/b]', '*')
		.gsub('[list]', '').gsub('[/list]', '')
		.gsub('[b]', '*').gsub('[/b]', '*')
		.gsub('[*]', '* ')
		.gsub('[code]', '```').gsub('[ne/code]', '```')
		.gsub(/\[code="(.*)"\]/, '```')


	filename = date[0..9] + '-' + id + '.markdown'
	File.open('blog/' + filename, 'w') { |file|
		file.puts '---'
		file.puts 'layout: post'
		file.puts 'title: "' + title.to_s + '"'
		file.puts 'date: ' + date + ':00 +0800'
		file.puts 'comments: true'
		file.puts 'categories:'
		file.puts '- ' + category.to_s
		file.puts 'tags:'
		tag.split(',').each {|x|
			file.puts '- ' + x
		}
		file.puts '---'

		file.puts ''
		file.puts content 
	}

end

def spider(page)
	agent = 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.14 Safari/537.36'

	url = 'http://seavers.iteye.com/?page='+page.to_s
	html = open(url, 'User-Agent'=&gt;agent)

	doc = Nokogiri::HTML(html)
	doc.search('.blog_main').each {|x|
		id = x.search('h3 a').attr('href').text[/[0-9]+/, 0]
		date = x.search('.blog_bottom .date').text
		puts id + "\t" + date
		process(id, date)
	}

	return doc.search('.pagination a.next_page').length == 0
end

##process('1416013', '2013-12-31 14:01')
(1..100).each {|page|
	break if spider(page)
}

</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby spider]]></title>
    <link href="http://www.lianghaijun.com/2013-12-23-ruby-spider.html"/>
    <updated>2013-12-23T21:19:09+08:00</updated>
    <id>http://www.lianghaijun.com/ruby-spider</id>
    <content type="html"><![CDATA[<p>最近开始喜欢上研究ruby了,正好手头有一些抓取的需求,正好练练手</p>

<p>在写爬虫时,我们总希望能方便的实现以下功能</p>

<ul>
  <li>类似curl的下载模块,提供URL即可获取下载内容</li>
  <li>方便的网页分析工具,最好能提供类似css selector的元素选择器</li>
  <li>简单方便的数据处理模块</li>
</ul>

<!--more-->

<p>写个简单的例子</p>

<div class="highlighter-rouge"><pre class="highlight"><code>#encoding:utf-8
require 'open-uri'
require 'nokogiri'

def spide
    url = "http://home.photo.qq.com/index.php?mod=activity&amp;act=detail&amp;category_id=1"

    html = open(url).read
    doc = Nokogiri::HTML(html)

    list = doc.search('.photo-list li img')
    list.each { |x|
        src = x.attr('src')
        puts src.gsub(/400/, '800');
    }
end

spide

</code></pre>
</div>

<p>其中:</p>

<ol>
  <li>open-uri模块用于实现curl的功能, open后read即可</li>
  <li>Nokogiri为html分析模块,支持css selector式的元素选择</li>
  <li>而ruby本身的特点, 则可快速处理数据</li>
</ol>

<p>抓到图片URL后,剩下的就容易多了,都下载下来吧~~</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[全屏图片查看器 fullscreen picture viewer]]></title>
    <link href="http://www.lianghaijun.com/2013-12-16-fullscreen-picture-viewer.html"/>
    <updated>2013-12-16T23:54:34+08:00</updated>
    <id>http://www.lianghaijun.com/fullscreen-picture-viewer</id>
    <content type="html"><![CDATA[<h2 id="chrome">全屏图片查看器是一个chrome扩展</h2>
<p>可以用于全屏查看图片,当查看网页时,按f键后,会隐藏掉网页里的其它内容,只留下大图</p>

<!--more-->

<h2 id="section">举一些实际的使用场景</h2>

<ul>
  <li>看一些图片时,发现旁边全是广告,直接屏蔽掉,只显示中间的大图</li>
  <li>浏览壁纸时,全屏展示大图,用于观看全屏效果</li>
  <li>查看所有的图片,直接寻找兴趣点</li>
</ul>

<h2 id="section-1">使用方式</h2>
<ul>
  <li>双击网页内的空白区</li>
  <li>按f键 (fullscreen的缩写)</li>
  <li>按w/s按来调整threshold, 调整图片最小尺寸的阀值</li>
</ul>

<p>扩展下载: <a href="http://www.lianghaijun.com/download/fullscreen.crx">fullscreen.crx</a>
源码浏览: <a href="https://github.com/seavers/fullscreen">github</a></p>

<h2 id="section-2">试用</h2>
<ul>
  <li>图片大小的默认阀值是350px</li>
  <li>可以随便找个有大图的页面,按下f键体验一下</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hive 常用技巧]]></title>
    <link href="http://www.lianghaijun.com/2013-12-13-hive-skill.html"/>
    <updated>2013-12-13T10:52:07+08:00</updated>
    <id>http://www.lianghaijun.com/hive-skill</id>
    <content type="html"><![CDATA[<p>最近在使用hive来处理些大数据,偶有心得,记录之</p>

<!--more-->

<p>建表</p>

<div class="highlighter-rouge"><pre class="highlight"><code>create external table hive_table (
	id int,
	name string,
	category string,
	tag string
)
PARTITIONED BY (pt string) 
ROW FORMAT DELIMITED
   FIELDS TERMINATED BY ',' 
STORED AS TEXTFILE
</code></pre>
</div>

<p>分组统计</p>

<div class="highlighter-rouge"><pre class="highlight"><code>select id,name,count(*),
	count(distinct category),collect_set(category),
	count(distinct tag),collect_set(tag)
from hive_table
where pt='20131213'
group by id,name
</code></pre>
</div>

<p>拆分多行</p>

<div class="highlighter-rouge"><pre class="highlight"><code>select id,name,category_id
from hive_table
lateral view explode(split(category, ',')) category_table as category_id
where pt='20131213'
</code></pre>
</div>

<p>过滤某些行</p>

<div class="highlighter-rouge"><pre class="highlight"><code>select h.*
from hive_table h
left semi join
girl_names g
on h.name = g.name


</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux repeat]]></title>
    <link href="http://www.lianghaijun.com/2013-12-04-linux-repeat.html"/>
    <updated>2013-12-04T15:32:01+08:00</updated>
    <id>http://www.lianghaijun.com/linux-repeat</id>
    <content type="html"><![CDATA[<p>linux下循环执行命令, 小工具, 觉得有用, 可收录</p>

<!--more-->

<div class="highlighter-rouge"><pre class="highlight"><code>	vi ~/.bash_aliases
</code></pre>
</div>

<div class="highlighter-rouge"><pre class="highlight"><code>repeat() {
    n=100
    s=1

    while true; do
        arg=$1
        if [ "$arg" == "-n" ]; then
            n=$2
            shift
            shift
        elif [ "$arg" == "-s" ]; then
            s=$2
            shift
            shift
        else
            break
        fi
    done

    while [ $((n -= 1)) -ge 0 ]; do
        "$@"
        sleep $s
    done
}
</code></pre>
</div>

<div class="highlighter-rouge"><pre class="highlight"><code>	source ~/.bash_aliases
</code></pre>
</div>

<div class="highlighter-rouge"><pre class="highlight"><code>	repeat ls -l
	repeat date
	repeat iostat
	repeat -n 3 curl 'http://www.lianghaijun.com'
	repeat -n 3 -s 300 curl 'http://www.lianghaijun.com'
	repeat -n 3 -s 0.5 sh -c "curl -I -s 'http://www.lianghaijun.com' | head -1"
</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[utuntu group]]></title>
    <link href="http://www.lianghaijun.com/2013-12-02-utuntu-group.html"/>
    <updated>2013-12-02T14:28:53+08:00</updated>
    <id>http://www.lianghaijun.com/utuntu-group</id>
    <content type="html"><![CDATA[<p>linux用户管理中, 一直都有分组的概念, 然而我们总感觉使用场景较少, 其实是因为我们不了解</p>

<p>举个例子, 比如</p>

<ul>
  <li>在配置apache,nginx时, htdocs的目录权限, 遇到问题时, 我们总喜欢用 777,</li>
  <li>在使用samba, 或者 nfs 或者 ftp 时, 为避免复杂性, 也是 777</li>
  <li>是否希望将工作,生活的帐户体系分开, 是否希望, 使用不同的git环境</li>
</ul>

<!--more-->

<h2 id="section">基础</h2>

<ul>
  <li>每个用户都有一个主分组, 以及多个次分组, 即一个用户可以属于多个分组</li>
</ul>

<h2 id="section-1">常用命令</h2>

<p>分组常用的几个操作</p>

<p>查看自己的分组
<code class="highlighter-rouge">
seavers@seavers:/home/admin$ id
uid=1000(seavers) gid=1000(seavers) groups=1000(seavers),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),109(lpadmin),124(sambashare)
</code></p>

<p>查看所有的分组
<code class="highlighter-rouge">
	cat /etc/group
</code></p>

<p>查看某个用户所在的分组
<code class="highlighter-rouge">
	groups seavers
</code></p>

<p>增加用户到某个分组
<code class="highlighter-rouge">
	usermod seavers -a -G admin 
</code></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress 自动部署方案]]></title>
    <link href="http://www.lianghaijun.com/2013-11-28-octopress-deploy.html"/>
    <updated>2013-11-28T22:20:52+08:00</updated>
    <id>http://www.lianghaijun.com/octopress-deploy</id>
    <content type="html"><![CDATA[<p>今天准备实现 octopress 的自动部署, 完成以下功能</p>

<ul>
  <li>在github.com提交markdown文件后,自动触发服务器打包更新</li>
  <li>服务器打包更新后, 同步至github.io, 以及服务器展示</li>
</ul>

<!--more-->

<p>实现之前, 参考了下这篇, <a href="http://imxylz.com/blog/2013/11/27/build-octopress-with-github-hook/">监听github，自动编译octopress博客</a>, 写的蛮不错的
不过, 我的方案, 有些不同的地方</p>

<h2 id="section">钩子</h2>
<p>在github的项目设置的Service Hooks中添加一个WebHook URLs的钩子
<code class="highlighter-rouge">
	http://&lt;host&gt;:&lt;port&gt;/blog-update
</code>
而github钩子, 我采用的是ruby, 命名为hook.rb</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'socket'</span>

<span class="n">server</span> <span class="o">=</span> <span class="no">TCPServer</span><span class="p">.</span><span class="nf">open</span> <span class="mi">4001</span>
<span class="nb">puts</span> <span class="s2">"Listening on port "</span> <span class="o">+</span> <span class="n">server</span><span class="p">.</span><span class="nf">addr</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nf">to_s</span>

<span class="kp">loop</span> <span class="p">{</span>
  <span class="n">client</span> <span class="o">=</span> <span class="n">server</span><span class="p">.</span><span class="nf">accept</span><span class="p">()</span>
  <span class="k">while</span><span class="p">((</span><span class="n">x</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="nf">gets</span><span class="p">)</span> <span class="o">!=</span> <span class="s2">"</span><span class="se">\r\n</span><span class="s2">"</span><span class="p">)</span>
    <span class="nb">puts</span> <span class="n">x</span>
  <span class="k">end</span>

  <span class="n">client</span><span class="p">.</span><span class="nf">puts</span> <span class="s2">"HTTP/1.1 200 OK</span><span class="se">\r\n\r\n</span><span class="s2">OK"</span>
  <span class="n">client</span><span class="p">.</span><span class="nf">close</span>
  <span class="nb">puts</span> <span class="s1">'OK'</span>

  <span class="nb">system</span><span class="p">(</span><span class="s1">'git pull'</span><span class="p">)</span>
  <span class="nb">system</span><span class="p">(</span><span class="s1">'rake generate'</span><span class="p">)</span>
  <span class="c1">##system('rake deploy')</span>
  <span class="nb">puts</span> <span class="s1">''</span>
<span class="p">}</span>
</code></pre>
</div>
<p>然后启动为后台进程
<code class="highlighter-rouge">
   nohup ruby hook.rb &amp;
</code>
当github更新时,会触发hook时, 服务器运行ruby代码,执行shell脚本 
<code class="highlighter-rouge">
	git pull
	rake generate
</code></p>

<h2 id="section-1">部署</h2>
<p>那服务器上如何来更新呢, 部署的时候, 是有两种方案的,一种是
<code class="highlighter-rouge">
	rake preview
</code>
然后nginx代理转发至preview的端口</p>

<p>另一种方案是, nginx直接请求 _deploy 目录
<code class="highlighter-rouge">
	location /blog/ {
		alias ~/octopress/public/;
	}
</code></p>

<h2 id="github">部署在github上</h2>
<p>当然, 如果想在github.io上部署, 需要再同步至github.io, 如在刚才在hook.rb里修改
<code class="highlighter-rouge">
	rake deploy
</code>
这里要小心,这样改会死循环的. 
deploy会触发git commit, commit再触发hook, hook里再deploy,再commit, 如此死循环
所以需要在hook里判断是master还是source</p>

<p>另一种解决方案, 就是把master与source, 放置在不同git仓库上
这样, 提交source的时候, 就不会触发blog的hook了</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sed]]></title>
    <link href="http://www.lianghaijun.com/2013-11-28-sed.html"/>
    <updated>2013-11-28T16:50:01+08:00</updated>
    <id>http://www.lianghaijun.com/sed</id>
    <content type="html"><![CDATA[<p>sed是基于行进行文本替换的神器, 这里记录一些自己常用的功能</p>

<!--more-->

<p>直接替换
<code class="highlighter-rouge">
  cat data.txt | sed 's/abc/def/g'
</code></p>

<p>删掉空行
<code class="highlighter-rouge">
  cat data.txt | sed '/^$/d'
</code></p>

<p>删除掉第一行
<code class="highlighter-rouge">
  cat data.txt | sed '1d'
</code></p>

<p>删除掉每行的第一个字符
<code class="highlighter-rouge">
  cat data.txt | sed 's/^.//g'
</code></p>

<p>还有一些从<a href="http://baiqiuyi.com/linux/review-sed-command-for-unix-shell-book.html">其它地方</a>拷贝过来的</p>

<div class="highlighter-rouge"><pre class="highlight"><code>sed '1,3d' file //删除1-3行
sed '/[Aa]bc/p' file //打印包含Abc或者abc的行
sed '/ABC/d' //删除包含ABC的行
sed '/ABC/!d' //不删除包含ABC的行
sed '5,$d' //从第五行到最后一行全部删除
sed 1q  //显示第一行
sed 's/$/.../g' //每行的最后面添加 ...
sed 's/d.(sk)/1&amp;/g' //满足d*sk的单词,在单词前添加sk
sed 's/&lt;[^&gt;]*&gt;//g' //去除html标签
sed '/ABC/a123' //在包含ABC的行后面添加一行数值为123的行
sed '/ABC/i123' //跟a不同的是i是插入当前行的前面
sed '/ABC/c123' //包含ABC的行将更改为123
sed '/ABC/{n;s/123/ABC/g}' //精确匹配包含ABC的下一行,将123全部替换成ABC
sed '/ABC/{s/A/a/}' //在包含ABC的行将A替换成a
sed -e '/ABC/h' -e '$g' //将包含ABC的行复制,在最后一行添加.
sed -e '/ABC/{h;d}' -e '/123/G' //将包含ABC的行复制并删除,在包含123的行后添加.
g等于在当前行覆盖,G是在符合条件的行后新增加一行.
sed 's/^/ /g' //每行前面增加一个空格
sed 's/.(.)$/*1/' //将倒数第二位换成*
sed '/ABC/!s/1/*/g' //在不包含ABC的行里,将所有的1替换成*
sed 's/1|2|3/*/g' //在GNU里将不管是1或2或者是3替换成*
</code></pre>
</div>

<p>还有这个
<a href="http://henter.me/post/sed-notes.html">http://henter.me/post/sed-notes.html</a>
<a href="http://blog.csdn.net/hepeng597/article/details/11269387">http://blog.csdn.net/hepeng597/article/details/11269387</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[html5版仙剑]]></title>
    <link href="http://www.lianghaijun.com/2013-11-27-xianjian.html"/>
    <updated>2013-11-27T23:20:11+08:00</updated>
    <id>http://www.lianghaijun.com/xianjian</id>
    <content type="html"><![CDATA[<p>刚学习html5时, 为了练手, 基于html5写了版仙剑, <a href="http://xianjian.github.com/">http://xianjian.github.com/</a></p>

<!--more-->

<p>当时花了不少心血, 也解决了不少算法问题, 可用度80%, 然而后来比较忙, 就停止了</p>

<p>今天心血来潮, 在服务器上重新部署了一套, 欢迎试用 (图片点击右键, 新窗口打开)</p>

<p><a href="http://xianjian.u.qiniudn.com/"><img src="/blog/uploads/xianjian.png" alt="xianjian" /></a></p>

<p>刚开始下载时, 速度有点慢, 请耐心等待, 后续再更改算法, 如果本地玩, 可以git clone哦~~</p>

<ul>
  <li>在线试玩,可以使用<a href="http://xianjian.u.qiniudn.com">qiniudn</a> 或者 <a href="http://xianjian.github.com">github</a> 或者 <a href="http://www.lianghaijun.com/xianjian/">博客内</a></li>
  <li>github地址在  <a href="https://github.com/seavers/xianjian">https://github.com/seavers/xianjian</a></li>
  <li>其实还有一个java版的 <a href="https://github.com/seavers/pal">https://github.com/seavers/pal</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[about octopress]]></title>
    <link href="http://www.lianghaijun.com/2013-11-27-about-octopress.html"/>
    <updated>2013-11-27T18:30:41+08:00</updated>
    <id>http://www.lianghaijun.com/about-octopress</id>
    <content type="html"><![CDATA[<p>一直以来, 都使用javaeye来记录博客, 见 <a href="http://seavers.iteye.com/">http://seavers.iteye.com/</a>, 偶有心得, 必记录之</p>

<p>然, 随着时间积累, 发现只依赖博客, 很多的需求无法满足, 如一个DEMO, 一个作品, 甚至是自定义样式
每遇新技术时, 总想折腾下, 无奈博客只能写写文字, 不能充分自主设计
现在好了, 服务器,域名 都已经OK了, 开始折腾了~~~</p>

<p>不过, 博客还是要先建起来, 前段时间, 曾折腾过 jekyll , 却半途而废了
今天突然发现 <a href="http://www.ithans.com">http://www.ithans.com</a> 改用 octopress 了, 尝试了下</p>

<p>发现 octopress 是基于ruby 写的, 还是挺好用的</p>

<div class="highlighter-rouge"><pre class="highlight"><code>rake --help
rake --tasks
rake new_post[title]
rake generate
rake deploy
</code></pre>
</div>

<p>后续试试自动化, 外加git同步, 自动部署至服务器</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hello octopress]]></title>
    <link href="http://www.lianghaijun.com/2013-11-27-hello-octopress.html"/>
    <updated>2013-11-27T17:56:47+08:00</updated>
    <id>http://www.lianghaijun.com/hello-octopress</id>
    <content type="html"><![CDATA[<p>hello octopress</p>

<p>2013-11-27</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小清新网站标准]]></title>
    <link href="http://www.lianghaijun.com/2013-11-26-1981188.html"/>
    <updated>2013-11-26T23:19:00+08:00</updated>
    <id>http://www.lianghaijun.com/1981188</id>
    <content type="html"><![CDATA[<p><em>小清新网站标准</em>        纯属YY</p>

<ul>
  <li>采用微博登录</li>
  <li>提供iphone,android,html5版本</li>
  <li>采用小新清设计原则:  色块背景, 图文混排, 配色明亮, 合适留白</li>
  <li>新删改采用ajax请求, 支持滚动式翻页</li>
  <li>restful url</li>
  <li>icon式文字, 文字式按钮</li>
  <li>赞, 评论, 分享, 收藏, 加关注</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wget 整站下载]]></title>
    <link href="http://www.lianghaijun.com/2013-11-26-1980761.html"/>
    <updated>2013-11-26T10:22:00+08:00</updated>
    <id>http://www.lianghaijun.com/1980761</id>
    <content type="html"><![CDATA[<p>下载整站
<code class="highlighter-rouge">
wget -r -nv --restrict-file-names=nocontrol http://seavers.iteye.com/
</code></p>

<p>下载时可以加 -np, 不下载父目录
<code class="highlighter-rouge">
wget -r -nv --restrict-file-names=nocontrol -np http://seavers.iteye.com/blog/
</code></p>

<p>下载时, 加入断点续传
<code class="highlighter-rouge">
wget -r -nv -c --restrict-file-names=nocontrol http://seavers.iteye.com/
</code></p>

<ul>
  <li>
    <p>–restrict-file-names=nocontrol 用来解决中文乱码问题</p>
  </li>
  <li>http://aotee.com/using-wget-recursive-download-the-entire-station</li>
  <li>http://www.cnblogs.com/lybeta/archive/2012/05/23/2514759.html</li>
  <li>http://blog.csdn.net/flyskywhy/article/details/7777972</li>
  <li>http://www.butian.org/knowledge/linux/254.html</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu ipconfig]]></title>
    <link href="http://www.lianghaijun.com/2013-11-06-1972028.html"/>
    <updated>2013-11-06T13:45:00+08:00</updated>
    <id>http://www.lianghaijun.com/1972028</id>
    <content type="html"><![CDATA[<p>sudo vi /sbin/ipconfig</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="c">#! /bin/bash</span>
<span class="k">for </span>word <span class="k">in</span> <span class="sb">`</span>ifconfig eth0 | grep <span class="s2">"inet addr"</span> | sed  <span class="s1">'s/          inet addr/addr/g'</span><span class="sb">`</span>; <span class="k">do </span><span class="nb">echo</span> <span class="nv">$word</span> | sed <span class="s1">'s/:/\t/g'</span>; <span class="k">done
</span>route -n | awk <span class="s1">'/UG/ {printf "gateway    %-21s %s\n", $2,$8}'</span> ;
grep nameserver /etc/resolv.conf ;
</code></pre>
</div>

<div class="highlighter-rouge"><pre class="highlight"><code>sudo chmod +x /sbin/ipconfig

ipconfig

</code></pre>
</div>

<hr />
<p>待改进</p>

<ul>
  <li>支持eth0 与 wlan0</li>
  <li>支持dnsmasq</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu 注册 wins]]></title>
    <link href="http://www.lianghaijun.com/2013-11-06-1972001.html"/>
    <updated>2013-11-06T12:17:00+08:00</updated>
    <id>http://www.lianghaijun.com/1972001</id>
    <content type="html"><![CDATA[<p>以下是为了让ubuntu进入windows网络,实现互ping,互连</p>

<ol>
  <li>ubuntu进入windows网络,必须安装samba
<code class="highlighter-rouge">
sudo apt-get install samba
</code></li>
  <li>修改/etc/samba/smb.conf, 将wins server修改为正确的ip
   可以在windows上, 敲入ipconfig /all得到具体ip</li>
  <li>重启服务
<code class="highlighter-rouge">
sudo service nmbd restart
</code></li>
  <li>验证下
<code class="highlighter-rouge">
nmblookup -R -U &lt;wins_server_ip&gt; &lt;hostname&gt;
</code></li>
  <li>这时windows就可访问ubuntu,可以直接ping通</li>
  <li>ubuntu互ping, 需要设置search domain
<code class="highlighter-rouge">
echo 'search abc.com' &gt;&gt; /etc/resolv.conf
</code></li>
</ol>

<hr />

<ol>
  <li>如果IP改变后, wins_server的缓存的ip不正确了,
可以删除以下两个文件
/var/cache/samba/wins.dat
/var/cache/samba/browse.dat 
然后重启 nmbd 即可</li>
  <li>如果ubuntu ping 时, ip仍然不正确, 检查下dns server
   (这块还没有搞清楚, 试试换备用server, 或者等等dns同步)</li>
  <li></li>
</ol>

<hr />

<p>如果只是为了互连互通,只需要 nmbd 服务即可
如果还需要windows共享文件的服务, 需启动smbd</p>

<p>===========================================================</p>

<p>nsswitch.conf是SUN公司开发的一种扩充（name services switch）</p>

<div class="highlighter-rouge"><pre class="highlight"><code># /etc/nsswitch.conf
#
# Example configuration of GNU Name Service Switch functionality.
# If you have the `glibc-doc-reference' and `info' packages installed, try:
# `info libc "Name Service Switch"' for information about this file.

aliases:    邮件别名, sendmail(8) 使用该文件. 
ethers:     以太网号. 
group:      用户组, getgrent(3) 函数使用该文件. 
hosts:      主机名和主机号, gethostbyname(3) 以及类似的函数使用了该文件. 
netgroup:   网络内主机及其用户的列表, 访问规则使用该文件. 
network:    网络名及网络号, getnetent(3) 函数使用该文件. 
passwd:     用户口令, getpwent(3) 函数使用该文件. 
protocols:  网络协议, getprotoent(3) 函数使用该文件. 
publickey:  NIS+及NFS 所使用的secure_rpc的公开密匙. 
rpc:        远程过程调用名及调用号, getrpcbyname(3) 及类似函数使用该文件. 
services:   网络服务, getservent(3) 函数使用该文件. 
shadow:     shadow用户口令, getspnam(3) 函数使用该文件.
</code></pre>
</div>

<p>=====================</p>

<p>hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4</p>

<ul>
  <li>files:  /etc/hosts</li>
  <li>mdns :  dnsmasq  avahi-daemon</li>
  <li>dns  :  dns server</li>
</ul>

<p>===================</p>

<p>dnsmasq</p>

<p>Dnsmasq is a lightweight, easy to configure DNS forwarder and DHCP server. 
https://wiki.archlinux.org/index.php/Dnsmasq_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</p>

<p>stop dnsmasq:
1. sudo vi /etc/NetworkManager/NetworkManager.conf
2. comment  dns=dnsmasq
3. sudo service network-manager restart</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu 五笔]]></title>
    <link href="http://www.lianghaijun.com/2013-11-04-1969731.html"/>
    <updated>2013-11-04T15:36:00+08:00</updated>
    <id>http://www.lianghaijun.com/1969731</id>
    <content type="html"><![CDATA[<p>ubuntu 使用五笔输入法
ubuntu 13.10 测试通过</p>

<ul>
  <li>sudo apt-get install ibus-table-wubi</li>
  <li>ibus-daemon -x -r -d</li>
  <li>选择五笔输入,生效</li>
</ul>

<p>使用SHIFT+SPACE切换全半角
使用SHIFT切换中英文输入</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pycompile not found]]></title>
    <link href="http://www.lianghaijun.com/2013-10-17-1959997.html"/>
    <updated>2013-10-17T16:10:00+08:00</updated>
    <id>http://www.lianghaijun.com/1959997</id>
    <content type="html"><![CDATA[<p>sudo apt-get remove python 后, 出现了很多错误, 导致后续的无法进行</p>

<p>pycompile not found
解决方案: 删掉 /usr/bin/pycompile, 然后继续apt-get -f install / remove</p>

<p>gconf2 not found 错误
sudo dpkg-reconfigure gconf2
sudo apt-get –purge remove gconf2</p>

<p>gconf2安装时 gconf-schemas not found
因安装gconf2时,需执行脚本,脚本中需要python,而python需要gconf2
导致了这个地方的问题</p>

<p>解决方案: 注掉报错的脚本中的那几行命令,然后重新执行
或:  如果已经安装了python的话, ln -s 下python即可</p>

<p>==============================</p>

<p>ubuntu从13.04升级至13.10时,报/usr/bin/python错误,不知原因
修改/usr/bin/python链接位置时,也无法通过
故直接remove python python3, 然后就出现上面的错误了
修复后, 可以执行do-release-upgrade了</p>

<p>ubuntu的包管理,要赞一下</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[maven的全局去除依赖]]></title>
    <link href="http://www.lianghaijun.com/2013-09-22-1944892.html"/>
    <updated>2013-09-22T15:01:00+08:00</updated>
    <id>http://www.lianghaijun.com/1944892</id>
    <content type="html"><![CDATA[<p>我们在maven中有时候希望将某个依赖包彻底去除</p>

<p>如我们的系统使用的是spring3.1.2, 但是依赖的二方包中, 总是或多或少依赖了spring2.5.6, 希望有个方法, 能全局去除掉</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;!-- globally exclusion --&gt;
&lt;dependency&gt;
	&lt;groupId&gt;org.springframework&lt;/groupId&gt;
	&lt;artifactId&gt;spring&lt;/artifactId&gt;
	&lt;version&gt;2.5.6.SEC03&lt;/version&gt;
	&lt;scope&gt;provided&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>
</div>

<p>以上方式, 有个弊端, 就是eclipse中, 还是会依赖, 且容易用混</p>

<p>有三个方案(建议使用第三种)
```</p>
<dependency>
	<groupid>org.springframework</groupid>
	<artifactid>spring</artifactid>
	<version>99.0-does-not-exist</version>
	<scope>provided</scope>
</dependency>
<div class="highlighter-rouge"><pre class="highlight"><code>
</code></pre>
</div>
<dependency>
	<groupid>org.springframework</groupid>
	<artifactid>spring</artifactid>
	<version>2.5.6</version>
	<scope>system</scope>
	<systempath>${basedir}/lib/empty.jar</systempath>
</dependency>
<div class="highlighter-rouge"><pre class="highlight"><code>
</code></pre>
</div>
<div class="highlighter-rouge"><pre class="highlight"><code>		&lt;plugin&gt;
			&lt;artifactId&gt;maven-eclipse-plugin&lt;/artifactId&gt;
			&lt;configuration&gt;
				&lt;downloadSources&gt;true&lt;/downloadSources&gt;
				&lt;downloadJavadocs&gt;true&lt;/downloadJavadocs&gt;
				&lt;classpathContainers&gt;
					&lt;classpathContainer&gt;org.eclipse.jdt.launching.JRE_CONTAINER&lt;/classpathContainer&gt;
				&lt;/classpathContainers&gt;
				&lt;excludes&gt;
					&lt;exclude&gt;org.springframework:spring&lt;/exclude&gt;
				&lt;/excludes&gt;
			&lt;/configuration&gt;
		&lt;/plugin&gt; ```
</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Class.forName 返回 String[].class]]></title>
    <link href="http://www.lianghaijun.com/2013-08-13-1923887.html"/>
    <updated>2013-08-13T11:38:00+08:00</updated>
    <id>http://www.lianghaijun.com/1923887</id>
    <content type="html"><![CDATA[<p>A: 如何通过Class.forName 返回 String[].class
Q: Class.forName(“[Ljava.lang.String;”)</p>

<p>因为 String[].class.getName() =&gt; “[Ljava.lang.String;”
经测试, 反过来, 也成立</p>

<p>因此: 
在sqlmap-config.xml可以这样写</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;typeHandler javaType="[Ljava.util.String;" callback="xxxxxx.StringArrayTypeHandler" /&gt;
</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ibatis typehandler]]></title>
    <link href="http://www.lianghaijun.com/2013-08-09-1922745.html"/>
    <updated>2013-08-09T18:57:00+08:00</updated>
    <id>http://www.lianghaijun.com/1922745</id>
    <content type="html"><![CDATA[<p>今天配置typehandler时碰到一个问题</p>

<p>主要解决的问题是
java.sql.SQLException: Cannot convert value ‘0000-00-00 00:00:00’ from column 18 to TIMESTAMP</p>

<p>解决方案: 替换掉系统默认的 typehandler, 抛出异常时,改为null</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="GBK"?&gt;</span>
<span class="cp">&lt;!DOCTYPE sqlMapConfig
 PUBLIC "-//iBATIS.com//DTD SQL Map Config 2.0//EN"
 "http://www.ibatis.com/dtd/sql-map-config-2.dtd"&gt;</span>
<span class="nt">&lt;sqlMapConfig&gt;</span>
	<span class="nt">&lt;settings</span> 
		<span class="na">cacheModelsEnabled=</span><span class="s">"true"</span> 
	<span class="nt">/&gt;</span>
	<span class="nt">&lt;typeHandler</span> <span class="na">javaType=</span><span class="s">"java.util.Date"</span> <span class="na">callback=</span><span class="s">"xxxxxxxxx.CustomDateTypeHandler"</span> <span class="nt">/&gt;</span>
	
	<span class="nt">&lt;sqlMap</span> <span class="na">resource=</span><span class="s">"sqlmap/sqlmap-price.xml"</span> <span class="nt">/&gt;</span>	
<span class="nt">&lt;/sqlMapConfig&gt;</span>

</code></pre>
</div>

<p>这里需要注意的是</p>

<ol>
  <li>typeHandler 中的 jdbcType 取值应为 null, DATE, TIME, 这里用的null</li>
  <li>typehandler 必须要在 sqlmap 前面, 否则sqlmap中的类型handler就会用默认的</li>
</ol>

<p>下面是自定义的datetypehandler</p>

<div class="highlighter-rouge"><pre class="highlight"><code>package xxxxxxxxx;

import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.ibatis.sqlmap.engine.type.DateTypeHandler;

public class CustomDateTypeHandler extends DateTypeHandler {


	@Override
	public Object getResult(ResultSet rs, String columnName) throws SQLException {
		try {
			return super.getResult(rs, columnName);
		} catch(SQLException e) {
			if("S1009".equals(e.getSQLState())) {
				return null;
			}
			throw e;
		}
	}

	@Override
	public Object getResult(ResultSet rs, int columnIndex) throws SQLException {
		try {
			return super.getResult(rs, columnIndex);
		} catch(SQLException e) {
			if("S1009".equals(e.getSQLState())) {
				return null;
			}
			throw e;
		}
	}

	@Override
	public Object getResult(CallableStatement cs, int columnIndex) throws SQLException {
		try {
			return super.getResult(cs, columnIndex);
		} catch(SQLException e) {
			if("S1009".equals(e.getSQLState())) {
				return null;
			}
			throw e;
		}
	}

}
</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[下列签名无效： NODATA 1 NODATA 2]]></title>
    <link href="http://www.lianghaijun.com/2013-07-15-1906461.html"/>
    <updated>2013-07-15T11:42:00+08:00</updated>
    <id>http://www.lianghaijun.com/1906461</id>
    <content type="html"><![CDATA[<p>ubuntu下 apt-get update 时,报错
下列签名无效： NODATA 1 NODATA 2</p>

<p>原因是: 网络连接出错了, 对应的网址连不上去</p>

<p>比如: archive.ubuntu.com,   连接不上, 可换成 cn.archive.ubuntu.com
或者: 网络有代理, 什么的被拦截了</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu安装maven3]]></title>
    <link href="http://www.lianghaijun.com/2013-06-28-1895665.html"/>
    <updated>2013-06-28T13:39:00+08:00</updated>
    <id>http://www.lianghaijun.com/1895665</id>
    <content type="html"><![CDATA[<p>ubuntu 安装 maven3的方法就是</p>

<div class="highlighter-rouge"><pre class="highlight"><code>  sudo apt-get install maven
</code></pre>
</div>

<p>一直以来, 以为 install maven安装的是 maven1.x
而 install maven2 安装的是 maven2.x
而看到某些论坛说安装maven3, 要使用 ppa ,
后来才知道错了</p>

<p>install maven 安装的就是最新版本的maven</p>

<p>在  12.04, 13.04 测试通过</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git 与 svn 同步]]></title>
    <link href="http://www.lianghaijun.com/2013-06-26-1894735.html"/>
    <updated>2013-06-26T15:44:00+08:00</updated>
    <id>http://www.lianghaijun.com/1894735</id>
    <content type="html"><![CDATA[<p>svn 与 git 保持同步</p>

<ul>
  <li>先svn checkout url 把svn上的代码checkout下来</li>
  <li>进入工程目录</li>
  <li>git init</li>
  <li>git remote add origin git@github.com:username/project.git</li>
  <li>git pull</li>
  <li>git branch –set-upstream master origin/master</li>
  <li>git reset</li>
  <li>git status</li>
  <li>git commit -a -m “update”</li>
  <li>git push</li>
</ul>

<p>其中 git reset 不好处理,可以
  git reset –hard
  svn -R revert .</p>

<p>另外:</p>

<ul>
  <li>svn propget svn:ignore .</li>
  <li>svn propset svn:ignore . -Fingore.txt</li>
</ul>

<p>ignore.txt 中 加入  .git .gitignore
.gitignore 中 加入  .svn</p>

<div class="highlighter-rouge"><pre class="highlight"><code>.svn
bin
target
.settings
.project
.classpath

/assets/node_modules
</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nginx expires 绝对过期时间]]></title>
    <link href="http://www.lianghaijun.com/2013-06-22-1892343.html"/>
    <updated>2013-06-22T00:09:00+08:00</updated>
    <id>http://www.lianghaijun.com/1892343</id>
    <content type="html"><![CDATA[<p>nginx expires 绝对过期时间</p>

<p>参考: http://wiki.nginx.org/HttpHeadersModule</p>

<div class="highlighter-rouge"><pre class="highlight"><code>  expires       24h;
  expires       modified +24h;
  expires       @15h30m;
  expires       0;
  expires       -1;
  expires       epoch;
</code></pre>
</div>

<p>@time 表示绝对过期时间, 基于一天的某个时间点来过期</p>

<p>@15h30m, 这里的意思是每天15点30分的时候,请求过期</p>

<p>举例, 比如
访问时间为  08:00, 则过期时间为 15:30
访问时间为  21:33, 则过期时间为 第二天的15:30分</p>

<p>原文中的解释:
Times written with an @ prefix represent an absolute time-of-day expiry, written in either the form Hh or Hh:Mm, where H ranges from 0 to 24, and M ranges from 0 to 59 (available from versions 0.7.9 &amp; 0.6.34).</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[curlftpfs]]></title>
    <link href="http://www.lianghaijun.com/2013-06-21-1892316.html"/>
    <updated>2013-06-21T22:06:00+08:00</updated>
    <id>http://www.lianghaijun.com/1892316</id>
    <content type="html"><![CDATA[<p>多数curlftpfs的例子是这样的</p>

<div class="highlighter-rouge"><pre class="highlight"><code>sudo curlftpfs –o rw,allow_other ftp://username:password@192.168.1.111 /ftp
</code></pre>
</div>

<p>这种写法,有一个缺点,就是,当mount查看时, 会显示出密码</p>

<p>换成另一种写法吧:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>sudo curlftpfs -o rw,allow_other,user=username:password ftp://192.168.1.111 /ftp
</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[umount]]></title>
    <link href="http://www.lianghaijun.com/2013-06-21-1891105.html"/>
    <updated>2013-06-21T13:53:00+08:00</updated>
    <id>http://www.lianghaijun.com/1891105</id>
    <content type="html"><![CDATA[<p>mount nfs后,　如果遇到服务器修改 /etc/exports 等原因时,经常会遇到
<code class="highlighter-rouge">
umount2: Stale NFS file handle
umount: htdocs: Stale NFS file handle
</code>
或者
<code class="highlighter-rouge">
/var/www/html was not found in /proc/mounts
</code>
等问题</p>

<p>解决方案:</p>

<ul>
  <li>找到使用目录的进程, kill掉</li>
  <li>sudo umount -f /directory</li>
  <li>sudo umount -i -f /directory</li>
  <li>sudo umount -i -d -r -n -v -f  /directory</li>
</ul>

<p>用umount的各种参数,　总是有办法 unmount的</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[思考方法论]]></title>
    <link href="http://www.lianghaijun.com/2013-06-03-1881714.html"/>
    <updated>2013-06-03T19:56:00+08:00</updated>
    <id>http://www.lianghaijun.com/1881714</id>
    <content type="html"><![CDATA[<ol>
  <li>客户是谁？客户细分？</li>
  <li>客户需要我们解决的问题？</li>
  <li>什么情况和标志出现才体现我们解决了客户的问题？</li>
  <li>独特卖点？与众不同的引起客户关注的是什么？</li>
  <li>为解决客户的问题，我们需要聚焦的突破点和瓶颈是什么？</li>
  <li>客户现有的能力即制或习惯是什么？</li>
  <li>解决方案</li>
  <li>产品最重要的三个功能？</li>
  <li>客户参与的动力在哪？</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu 无法载入支持的服务器方式列表  请检查您的gvfs安装]]></title>
    <link href="http://www.lianghaijun.com/2013-05-08-1863348.html"/>
    <updated>2013-05-08T11:10:00+08:00</updated>
    <id>http://www.lianghaijun.com/1863348</id>
    <content type="html"><![CDATA[<p>ubuntu “无法载入支持的服务器方式列表  请检查您的gvfs安装” 的解决方案</p>

<p>碰到两次这个错误了,记录下解决方案</p>

<div class="highlighter-rouge"><pre class="highlight"><code>sudo apt-get remove gvfs
sudo apt-get install ubuntu-desktop
</code></pre>
</div>

<p>原因不明,重装解决问题</p>

<p>补: 如果有些ubuntu底层的组件,类似gvfs, libgtk2.0等被卸载掉,又不想重装系统,直接install ubuntu-desktop就可以了</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[批量转换GBK到UTF-8]]></title>
    <link href="http://www.lianghaijun.com/2013-05-02-1858898.html"/>
    <updated>2013-05-02T18:58:00+08:00</updated>
    <id>http://www.lianghaijun.com/1858898</id>
    <content type="html"><![CDATA[<p>批量转换GBK到UTF-8</p>

<div class="highlighter-rouge"><pre class="highlight"><code>find src | grep ".java" | grep -v ".svn" | xargs -I% echo "iconv -f GBK -t UTF-8 % &gt; %.temp " | bash
find src | grep ".java" | grep -v ".svn" | grep -v ".temp" | xargs -I% echo "cp %.temp %" | bash
find src | grep ".java" | grep -v ".svn" | grep ".temp" | xargs -I% echo "rm %" | bash
</code></pre>
</div>

<p>注意, 如果直接用
<code class="highlighter-rouge">
iconv -f GBK -t UTF-8 filename &gt; filename
</code>
会挂掉的, 导致filename清空,所以用的.temp</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android 整合 maven 环境]]></title>
    <link href="http://www.lianghaijun.com/2013-04-30-1857184.html"/>
    <updated>2013-04-30T14:33:00+08:00</updated>
    <id>http://www.lianghaijun.com/1857184</id>
    <content type="html"><![CDATA[<p>我们再先整理一下思路:</p>

<p>使用eclipse:</p>

<ol>
  <li>创建:  adt自带的android创建插件  New -&gt; android application project</li>
  <li>引入:  import -&gt; existing project into workspace</li>
  <li>打包:  run as -&gt;  android application</li>
</ol>

<p>使用maven:</p>

<ol>
  <li>创建: maven archetype:generate (99: de.akquinet.android.archetypes:android-quickstart)
   https://github.com/akquinet/android-archetypes</li>
  <li>运行: maven clean package android:deploy android:run    (android-maven-plugin)</li>
  <li>引入eclipse:
    a).  mvn eclipse:eclipse
    b).  import -&gt; android -&gt; existing android code into workspace
    c).  注意, 要选中 copy projects into workspace , 否则会有 overlaps 问题
    d).  下次,已经存在.project .classpath, 直接导入已存在的java工程即可</li>
  <li>打包同上~~~</li>
</ol>

<hr />

<p>用maven编译android并部署
<code class="highlighter-rouge">
  export ANDROID_HOME=~/android/sdk/
  mvn clean package android:deploy android:run
</code></p>

<p>其中package中使用了 android-maven-plugin中的</p>

<ul>
  <li>android-maven-plugin:3.5.0:generate-sources</li>
  <li>android-maven-plugin:3.5.0:proguard</li>
  <li>android-maven-plugin:3.5.0:emma</li>
  <li>android-maven-plugin:3.5.0:dex</li>
  <li>android-maven-plugin:3.5.0:apk</li>
</ul>

<p>这四个mvn指令,穿插在了package正常打包过程中
这四个mvn指令,均是直接调用了android.sdk中的platform-tools中的某个指令或java调用</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;plugin&gt;
    &lt;groupId&gt;com.jayway.maven.plugins.android.generation2&lt;/groupId&gt;
    &lt;artifactId&gt;android-maven-plugin&lt;/artifactId&gt;
    &lt;version&gt;3.1.1&lt;/version&gt;
    &lt;extensions&gt;true&lt;/extensions&gt;
    &lt;configuration&gt;
     &lt;sdk&gt;
      &lt;platform&gt;16&lt;/platform&gt;
     &lt;/sdk&gt;
    &lt;/configuration&gt;
   &lt;/plugin&gt;

</code></pre>
</div>

<p>maven.android的eclipse常用插件是 m2e-android 插件
可以认为m2e-android也是同样的道理,</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android开发环境]]></title>
    <link href="http://www.lianghaijun.com/2013-04-29-1857067.html"/>
    <updated>2013-04-29T23:06:00+08:00</updated>
    <id>http://www.lianghaijun.com/1857067</id>
    <content type="html"><![CDATA[<p>android 开发环境搭建</p>

<p>刚接触android开发, 前辈们都说现在的android开发环境比以前容易搭建了~~~</p>

<p>搭建方式如下:</p>

<ol>
  <li>下载android sdk
http://developer.android.com/sdk/index.html
下载后的sdk, 包括了 eclipse 以及 sdk</li>
  <li>解压, 并切换至 eclipse 目录, 打开 eclipse</li>
  <li>eclipse打开菜单window-android SDK Manager下载SDK sources</li>
  <li>安装m2e-android 用于maven工程    (当然没有使用maven就算了)
web: http://rgladwell.github.com/m2e-android/
update: http://rgladwell.github.com/m2e-android/updates/</li>
  <li>import导入 maven版的android工程</li>
</ol>

<p>另外:</p>

<p>由于android自带的eclipse不支持eclipse marketplace
你也可以下载最新版eclipse
然后从插件市场中下载 android sdk, m2e-android</p>

<p>入门必备,存档留念</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java rsa code]]></title>
    <link href="http://www.lianghaijun.com/2013-04-26-1855578.html"/>
    <updated>2013-04-26T23:08:00+08:00</updated>
    <id>http://www.lianghaijun.com/1855578</id>
    <content type="html"><![CDATA[<div class="highlighter-rouge"><pre class="highlight"><code>package rsa;
import java.security.Key;  
import java.security.KeyFactory;  
import java.security.KeyPair;  
import java.security.KeyPairGenerator;  
import java.security.PrivateKey;  
import java.security.PublicKey;  
import java.security.interfaces.RSAPrivateKey;  
import java.security.interfaces.RSAPublicKey;  
import java.security.spec.PKCS8EncodedKeySpec;  
import java.security.spec.X509EncodedKeySpec;  
   
import javax.crypto.Cipher;  

import sun.misc.BASE64Decoder;  
import sun.misc.BASE64Encoder;  
   
   
public class RSAUtil {
	public static String[] initKey() throws Exception {
		KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance("RSA");  
        //密钥位数  
        keyPairGen.initialize(1024);  
        //密钥对  
        KeyPair keyPair = keyPairGen.generateKeyPair();  

        // 公钥  
        PublicKey publicKey = (RSAPublicKey) keyPair.getPublic();  

        // 私钥  
        PrivateKey privateKey = (RSAPrivateKey) keyPair.getPrivate();  

        String publicKeyString = getKeyString(publicKey);  
        System.out.println("public:\n" + publicKeyString);  

        String privateKeyString = getKeyString(privateKey);  
        System.out.println("private:\n" + privateKeyString);  
        return new String[]{publicKeyString, privateKeyString};
	}
	
	public static String encode(String data, String publicKey) throws Exception {
        //加解密类  
        Cipher cipher = Cipher.getInstance("RSA");//Cipher.getInstance("RSA/ECB/PKCS1Padding");  
        cipher.init(Cipher.ENCRYPT_MODE, getPublicKey(publicKey));  

        //加密  
        byte[] enBytes = cipher.doFinal(data.getBytes("UTF-8"));  
        return new BASE64Encoder().encode(enBytes);
	}
	
	public static String decode(String data, String privateKey) throws Exception {
        //加解密类  
        Cipher cipher = Cipher.getInstance("RSA");//Cipher.getInstance("RSA/ECB/PKCS1Padding");  
        cipher.init(Cipher.DECRYPT_MODE, getPrivateKey(privateKey));  

        //加密  
        byte[] deBytes = new BASE64Decoder().decodeBuffer(data);
        byte[] enBytes = cipher.doFinal(deBytes);  
        return new String(enBytes, "UTF-8");
	}	
	
   
      /** 
       * 得到公钥 
       * @param key 密钥字符串（经过base64编码） 
       * @throws Exception 
       */  
      private static PublicKey getPublicKey(String key) throws Exception {  
            byte[] keyBytes;  
            keyBytes = (new BASE64Decoder()).decodeBuffer(key);  
   
            X509EncodedKeySpec keySpec = new X509EncodedKeySpec(keyBytes);  
            KeyFactory keyFactory = KeyFactory.getInstance("RSA");  
            PublicKey publicKey = keyFactory.generatePublic(keySpec);  
            return publicKey;  
      }  
      /** 
       * 得到私钥 
       * @param key 密钥字符串（经过base64编码） 
       * @throws Exception 
       */  
      private static PrivateKey getPrivateKey(String key) throws Exception {  
            byte[] keyBytes;  
            keyBytes = (new BASE64Decoder()).decodeBuffer(key);  
   
            PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(keyBytes);  
            KeyFactory keyFactory = KeyFactory.getInstance("RSA");  
            PrivateKey privateKey = keyFactory.generatePrivate(keySpec);  
            return privateKey;  
      }  
   
      /** 
       * 得到密钥字符串（经过base64编码） 
       * @return 
       */  
      private static String getKeyString(Key key) throws Exception {  
            byte[] keyBytes = key.getEncoded();  
            String s = (new BASE64Encoder()).encode(keyBytes);  
            return s;  
      }  
   
   
      public static void main(String[] args) throws Exception {  
          //明文  
          String plainText = "很好！hello world";  
          String[] keys = initKey();
          
          System.out.println(encode(plainText, keys[0]));
          System.out.println(decode(encode(plainText, keys[0]), keys[1]));
   
      }  
   
}  
</code></pre>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[maven 多环境配置]]></title>
    <link href="http://www.lianghaijun.com/2013-04-25-1853687.html"/>
    <updated>2013-04-25T17:29:00+08:00</updated>
    <id>http://www.lianghaijun.com/1853687</id>
    <content type="html"><![CDATA[<p>maven多环境配置</p>

<p>比较常见的maven的多环境配置</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;build&gt;
  &lt;resources&gt;
     &lt;resource&gt;
       &lt;directory&gt;src/main/resources&lt;/directory&gt;
         &lt;filtering&gt;true&lt;/filtering&gt;
     &lt;/resource&gt;
  &lt;/resources&gt;
  &lt;profiles&gt;
    &lt;profile&gt;
      &lt;id&gt;development&lt;/id&gt;
      &lt;activation&gt;
        &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;
      &lt;/activation&gt;
      &lt;filters&gt;
        &lt;filter&gt;src/main/resources/profile/development.properties&lt;/filter&gt;
      &lt;/filters&gt;
    &lt;/profile&gt;
    &lt;profile&gt;
      &lt;id&gt;production&lt;/id&gt;
      &lt;filters&gt;
        &lt;filter&gt;src/main/resources/profile/production.properties&lt;/filter&gt;
      &lt;/filters&gt;
     &lt;/profile&gt;
  &lt;/profiles&gt;
&lt;/build&gt;
</code></pre>
</div>

<div class="highlighter-rouge"><pre class="highlight"><code>    mvn jetty:run
    mvn jetty:run -Pproduction
</code></pre>
</div>

<p>当没有写P参数时，采用development的profile,若指定，则使用指定的profile</p>

<p>另外一种写，个人认为比较优化</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;properties&gt;
  &lt;env&gt;development&lt;/env&gt;
&lt;build&gt;
  &lt;filters&gt;
    &lt;filter&gt;src/main/resources/profile/${env}.properties&lt;/filter&gt;
  &lt;/filters&gt;
  &lt;resources&gt;
     &lt;resource&gt;
       &lt;directory&gt;src/main/resources&lt;/directory&gt;
         &lt;filtering&gt;true&lt;/filtering&gt;
     &lt;/resource&gt;
  &lt;/resources&gt;
&lt;/build&gt;
</code></pre>
</div>

<div class="highlighter-rouge"><pre class="highlight"><code>   mvn jetty:run
   mvn jetty:run -Denv=production
</code></pre>
</div>

<p>默认的采用properties中的配置，不同的环境采用指定的参数</p>

<hr />

<p>多环境需要注意的点：
1. 在切换环境时，不能改动源代码，如操作系统，线上线下，切换数据库等
2. 源代码独立于环境配置，或配置文件独立，或切换环境名称
3. 环境所有配置独立，需独立server管理
4. 环境名称切换，则可扩展性不强，但适应性强，管理方便</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[raspberry 网络设置]]></title>
    <link href="http://www.lianghaijun.com/2013-04-20-1850803.html"/>
    <updated>2013-04-20T19:52:00+08:00</updated>
    <id>http://www.lianghaijun.com/1850803</id>
    <content type="html"><![CDATA[<p>今天调了一天 raspberry pi 的网络设置</p>

<p>测试结论如下
1. raspberry pi的USB确实有问题, 插拔都会引起系统重启, 尤其是TTL2USB以及USB网卡
2. usb网卡在TTL模式下时, 可以设置成功, 拔掉TTL后, 自动重启, 然后就连不上了, 再接上TTL, 网络又好了, 很怪
3. 有线网卡, DHCP下总是不成功, 设置死IP后, 就成功了, 可以断掉TTL, 重启后,依然正常
4. 有线网卡, DHCP下也是可以成功的, 需要在rc.local中添加 dhclient eth0</p>

<p>正常的/etc/network/interfaces 如下</p>

<div class="highlighter-rouge"><pre class="highlight"><code>auto lo
iface lo inet loopback

auto eth0
allow-hotplug eth0
#iface eth0 inet dhcp
iface eth0 inet static
   address 192.168.1.8 
   netmask 255.255.255.0
   gateway 192.168.1.1

allow-hotplug wlan0
iface wlan0 inet manual
wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
iface default inet dhcp

</code></pre>
</div>

<p>以上测试基于2013-02-09-wheezy-raspbian.img
只改动了 interfaces , 其余未动</p>

<p>dhcp的/etc/network/interfaces 如下</p>

<div class="highlighter-rouge"><pre class="highlight"><code>auto lo
iface lo inet loopback

auto eth0
allow-hotplug eth0
iface eth0 inet dhcp

allow-hotplug wlan0
iface wlan0 inet manual
wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
iface default inet dhcp

</code></pre>
</div>
<p>并在 /etc/rc.local中添加一行, 需在exit 0前
dhclient eth0</p>

<ol>
  <li>难道无线网卡也是同样的问题, 再试下</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu下的apache]]></title>
    <link href="http://www.lianghaijun.com/2013-04-06-1842638.html"/>
    <updated>2013-04-06T15:06:00+08:00</updated>
    <id>http://www.lianghaijun.com/1842638</id>
    <content type="html"><![CDATA[<p>最近仔细的研究了下ubuntu的apache</p>

<p>ubuntu下的apache跟其它操作系统下的apache, 有很大的区别</p>

<p>ubuntu下安装apache
<code class="highlighter-rouge">
    sudo apt-get install apache2
</code>
ubuntu下启用apache的模块
<code class="highlighter-rouge">
   sudo a2enmod &lt;modname&gt;
</code></p>

<p>ubuntu下的apache的设计, 有很大程度上, 是帮助程序员尽量的减少conf的改动
比如:
1. 让apache启用一个模块
     a) 我们可以看到apache下的模块,是以文件的形式存在的, mods-enables下, 多一个模块的引用, 就表示启用一个模块, 而全部的模块, 是保存在 mods-available中的
     b) 这样设计的原因, 就在于, 启用以及停用模块, 简化为文件的操作
     c) 这样, apt-get,a2enmod这样的命令行,会更方便的执行命令, 否则要用正则匹配conf文件, 复杂麻烦,易出错, 而且耦合在了一起, 不利于apache的conf版本升级
2. 让apache启用一个站点
       同上面的设计一样,  站点也是使用 sites-available 以及 sites-enables 来管理的
3. conf.d 的设计
       a) 使用 conf.d 目录的设计, 让增加以及修改 apache2.conf 文件的方式, 改为了文件操作
       b) 比如支持一个proxy的, 或者 Redirect 类的, 可以简化增加一个文件配置
4. 利用别名的技术
       a)  增加一个 phpmyadmin
<code class="highlighter-rouge">
     sudo ln -s  /usr/share/phpmyadmin  /var/www/phpmyadmin
</code>
      b)  或者自定义的代码库
<code class="highlighter-rouge">
     sudo ln -s  /home/admin/workspace  /var/www/workspace
</code>
<code class="highlighter-rouge">
     sudo ln -s  /home/admin/.m2/repository      /var/www/maven2
</code>
5. 使用 .htaccess
        将 .htaccess 打包在代码库里, 统一使用上面的别名部署, 统一代码管理, 减少与 apache 的相关配置文件的耦合
6.  使用 .htpasswd
        这其实也是一个不错的实践</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu下安装phpmyadmin]]></title>
    <link href="http://www.lianghaijun.com/2013-04-01-1840440.html"/>
    <updated>2013-04-01T23:22:00+08:00</updated>
    <id>http://www.lianghaijun.com/1840440</id>
    <content type="html"><![CDATA[<p>其实ubuntu下安装phpmyadmin很简单</p>

<div class="highlighter-rouge"><pre class="highlight"><code>sudo apt-get install phpmyadmin
</code></pre>
</div>

<p>然而,装完之后的配置, 就让人容易出错了
起初我一直在修改  /usr/share/phpmyadmin/config.inc.php
然而,不是的,正确的位置在  /etc/phpmyadmin/config.inc.php, 而它又 include 了 /var/lib/phpmyadmin/config.inc.php
我们需要修改的文件, 应该是 /var/lib/phpmyadmin/config.inc.php</p>

<p>事实上, 我们没有必要手工去修改 config.inc.php
我们可以这样配置   http://localhost/phpmyadmin/setup/</p>

<p>有两个命令可以帮助我们
* pma-configure
* pma-secure
这两个命令, 都没有参数, 作用相反, 一个为打开配置开关, 另一个为关闭配置,禁止修改
当我们需要修改时, 就执行pma-configure, 修改完后,执行 pma-secure
当然, 这两个命令都需要 sudo 权限</p>

<p>于是整体流程如下:
install phpmyadmin -&gt; pma-configure -&gt; /phpmyadmin/setup -&gt; pma-secure</p>

<p>当然, 我们需要将phpmyadmin放置在apache下面, 或者 nginx下
<code class="highlighter-rouge">
sudo ln -s /usr/share/phpmyadmin  /var/www/
</code>
事实上, 上面的步骤也是多余的
看看 /etc/phpmyadmin/apache.conf , 你就明白了
<code class="highlighter-rouge">
Alias /phpmyadmin /usr/share/phpmyadmin
</code>
而且还有别的配置</p>

<hr />

<p>这么多的内容, 其实你可以从这里看出点端倪来
<code class="highlighter-rouge">
dpkg -L phpmyadmin
</code>
这样, 你可以看到 phpmyadmin到底在硬盘上装了什么文件</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu 支持无线网卡]]></title>
    <link href="http://www.lianghaijun.com/2013-03-26-1836490.html"/>
    <updated>2013-03-26T08:23:00+08:00</updated>
    <id>http://www.lianghaijun.com/1836490</id>
    <content type="html"><![CDATA[<p>在cubieboard上测试了下无线网卡, ubuntu上也应该是适用的</p>

<p>要求:
<code class="highlighter-rouge">
sudo apt-get install wpasupplicant
</code></p>

<p>插上无线网卡后, 在ifconfig里看到了wlan0</p>

<p>然后在 /etc/network/interfaces 里添加四行即可, 完整的见下</p>

<div class="highlighter-rouge"><pre class="highlight"><code>auto lo
iface lo inet loopback

auto wlan0
iface wlan0 inet dhcp   
wpa-ssid  &lt;you wlan ssid&gt;
wpa-psk   &lt;your wlan password&gt;
</code></pre>
</div>

<p>然后重启网络生效</p>

<div class="highlighter-rouge"><pre class="highlight"><code>//关闭再开启wlan0
sudo ifdown wlan0
sudo ifup wlan0

//或者重启网络
sudo service networking stop
sudo service networking start

//或者重启,有时需要执行两次, 执行时会有提示
sudo service networking restart
</code></pre>
</div>

<ul>
  <li>网上说的wpa打头的各类配置经测试可以省略,  我这里是 tp-link wpa2-psk的安全配置</li>
  <li>wpa-psk 也可以用密文, 有命令可以生成</li>
</ul>

<p>参考文档: http://ubuntuforums.org/showthread.php?t=318539</p>

<p>后记: 
还有一种实现方案比较繁琐
使用了wpa_supplicant守护进程及配置文件的做法, 比较麻烦, 不过, 可用于启动后再插上网卡的情况
比如: http://onefishum.blog.163.com/blog/static/5184730520131174170755/
如果按文中所说,生成rc.local后,得停止networking,用守护进程安装后,再启动networking,然后依赖于networking的dbus,avahi-deamon还得再启动一次, 这个方式不适合rc.local
无线网卡配置应该是在系统初始化时完成的,  /etc/network/interfaces正好
所以文中的方法,适合, 系统已经正常运行时, 再插入的无线网卡配置</p>

<p>或者: 这篇也可以
比如: http://www.cnitblog.com/luofuchong/archive/2010/05/20/66251.html</p>

<p>精简配置, 来自于
http://www.raspberrypi.org/phpBB3/viewtopic.php?f=27&amp;t=7592</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu name server]]></title>
    <link href="http://www.lianghaijun.com/2013-03-23-1835389.html"/>
    <updated>2013-03-23T14:47:00+08:00</updated>
    <id>http://www.lianghaijun.com/1835389</id>
    <content type="html"><![CDATA[<p>我们在ubuntu下经常会遇到以下问题</p>

<ol>
  <li>windows下ping ubuntu的机器名ping不到</li>
  <li>ubuntu下ping windows下的机器名 ping 不到</li>
  <li>ubuntu下ping ubuntu下的机器名ping不到</li>
</ol>

<p>以上就是碰到了name server的问题了</p>

<p>首先, 我们要理清楚以下几个问题</p>

<ol>
  <li>windows是如何根据name寻找ip的</li>
  <li>ubuntu是如何根据name寻找ip的</li>
  <li>mac呢</li>
</ol>

<p>name到ip的映射有以下几个方式
1. /etc/hosts的方式, 用户自行配置的, 优先级最高
2. wins  windows用于解析名字的服务
3. mdns 是apple发明的, ubuntu下也可以使用
4. dns服务, 通常由ISP提供,  一般局域网搜不到, 就要去外网搜了
另外:
wins 的服务, 有时会有域服务器来提供服务</p>

<p>由此: windows 与 ubuntu 下互通name, 需要敲定要走 wins还是mdns
1. windows 下默认支持 wins 服务, 有服务器,也有客户端支持
2. ubuntu下走wins,  可以安装 samba , 由 nmbd服务器提供服务端
3. ubuntu 下 ping wins, 可以在 smb.conf 下配置 wins server
4. windows 下走 mdns 服务, 可以安装apple的itunes, 由bonjour提供服务端
5. ubuntu 下安装 mdns服务, 可使用 avahi-demon 来提供 mdns 服务
6. ubuntu 下解析 mdns, 可以在 /etc/resolv.conf 中配置, 由 dnsmasq 来提供解析
7. mac 上默认提供了 mdns 与 wins</p>

<p>因此, 不动 windows, 可以在 ubuntu 中安装以下服务
```
sudo apt-get install samba
sudo apt-get install avahi-daemon
sudo apt-get install libnss-mdns             ##necessary?</p>

<p>sudo vi /etc/nsswitch.conf   (hosts:          files mdns4_minimal dns)
sudo vi /etc/samba/smb.conf</p>

<p>sudo service smbd restart
sudo service nmbd restart
//sudo service avahi-daemon restart
sudo dnsmasq</p>

<p>sudo service networking restart
```</p>

<p>如果ubuntu一直ping不通mac.local or ipad.local,请尝试重启
这样, 在 windows, ubuntu, mac 下互相ping hostname就OK了
补: mdns 的ping时, 要加 .local</p>

<p>相关的命令有:  ping nslookup host dig nbtscan nmblookup nmap
sudo netstat -ntp
sudo ss -nlt</p>

<p>相关的文件有:
/etc/resolv.conf
/etc/nsswitch.conf
/etc/NetworkManager/NetworkManager.conf
https://wiki.archlinux.org/index.php/Avahi</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[maven常用技巧]]></title>
    <link href="http://www.lianghaijun.com/2013-03-22-1834993.html"/>
    <updated>2013-03-22T17:19:00+08:00</updated>
    <id>http://www.lianghaijun.com/1834993</id>
    <content type="html"><![CDATA[<p>maven常用技巧</p>

<p>限定只使用内置的archetypes
<code class="highlighter-rouge">
mvn archetype:generate -DarchetypeCatalog=internal
</code></p>

<p>mvn创建spring mvc 
https://github.com/kolorobot/spring-mvc-quickstart-archetype</p>

<div class="highlighter-rouge"><pre class="highlight"><code>mvn archetype:generate -DarchetypeGroupId=com.github.spring-mvc-archetypes -DarchetypeArtifactId=spring-mvc-quickstart -DarchetypeVersion=1.0.0-SNAPSHOT -DgroupId=hello -DartifactId=hello -Dversion=1.0.0
</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sunxi-bsp 脚本分析]]></title>
    <link href="http://www.lianghaijun.com/2013-03-21-1833467.html"/>
    <updated>2013-03-21T15:36:00+08:00</updated>
    <id>http://www.lianghaijun.com/1833467</id>
    <content type="html"><![CDATA[<p>cubieboard刷sd卡时, 使用了下面的脚本
https://github.com/linux-sunxi/sunxi-bsp/blob/master/scripts/sunxi-media-create.sh</p>

<p>命令如下:
./script/sunxi-media-create.sh /dev/sdb 引导文件 操作系统文件</p>

<p>####分析如下:</p>

<ul>
  <li>umount sd</li>
  <li>sd卡前1M的字节,全部清0</li>
  <li>sfdisk命令写分区表</li>
  <li>两个分区分别格式化成vfat与ext4文件系统</li>
  <li>解压两个文件到临时目录</li>
  <li>/bootloader/sunxi-spl.bin 写至sd卡8K处, (第二引导系统处)</li>
  <li>/bootloader/u-boot.bin 写至32K处        (真正的引导模块)</li>
  <li>两个分区mount至文件系统</li>
  <li>拷贝文件 /kernel/uImage =&gt; 第一分区</li>
  <li>拷贝文件 /kernel/*.bin  =&gt; 第一分区</li>
  <li>拷贝文件 /kernel/*.scr  =&gt; 第一分区</li>
  <li>拷贝文件 操作系统文件/*   =&gt; 第二分区</li>
  <li>拷贝文件 /rootfs/*      =&gt; 第二分区</li>
</ul>

<p>####总结如下:</p>

<ul>
  <li>脚本主要是分区,格式化,拷贝文件</li>
  <li>分成两个区,两个文件解压后,拷贝至分区内</li>
</ul>

<p>####关于源码
源码的github上,有几多很特别的目录, 是打不开的, 很怪~~~
更详细的可参考:
http://linux-sunxi.org/Main_Page/zh_cn#.E8.BD.AF.E4.BB.B6</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cubieboard上手]]></title>
    <link href="http://www.lianghaijun.com/2013-03-20-1832923.html"/>
    <updated>2013-03-20T20:19:00+08:00</updated>
    <id>http://www.lianghaijun.com/1832923</id>
    <content type="html"><![CDATA[<p>最近刚买了cubieboard, 入手到玩转后的各个过程记录下</p>

<p>购买链接: http://item.taobao.com/item.htm?id=18271795262
已有装备: 笔记本, 无线路由器
入手装备: cubieboard, 带电源,ttl2usb线等
关键问题: 无显示器与电视
超市购物: 读卡器+网线,  (从手机上拿的TF卡)</p>

<p>Q: 没有显示器与电视, 如何连接</p>

<ul>
  <li>板子预装的android, 启动后, 可以直连至无线路由器, 但无法ssh或telnet上</li>
  <li>使用TTL线进行连接 http://linux-sunxi.org/Cubieboard/TTL</li>
  <li>然后使用windows/putty连接  方式:serial COM3 速率:115200</li>
  <li>然后接上电源就可以看到输出信息了, 这时就可以敲shell命令了 (如ls)</li>
  <li>没有找到命令行下载与安装软件的方式, 后续考虑</li>
</ul>

<p>Q: 在tf卡上安装ubuntu</p>

<ul>
  <li>用读卡器装tf卡连接到了ubuntu笔记本上</li>
  <li>刚开始时, 容量有问题, 只有64M, 用fdisk命令解决了, 见前一博文</li>
  <li>刷tf方法见:   http://blog.sina.com.cn/s/blog_5459f60d0101h0j3.html
http://cn.cubieboard.org/forum.php?mod=viewthread&amp;tid=55&amp;extra=page%3D1
(precise在镜像上已经失效了,换quantal(即v12.10))</li>
  <li>装上tf卡, 拔电源重启, 就可在ttl上看到, 已经连接到ubuntu上, 并且可以敲命令了</li>
  <li>在/etc/resolv.conf配置nameserver, 就可以ping通baidu.com了</li>
  <li>apt-get install openssh-server, 然后就可以拔掉ttl线了,</li>
  <li>买上无线网卡, 就可拔掉网线, 连接线, 只剩下电源线了</li>
</ul>

<p>Q: 刷nand</p>

<ul>
  <li>可使用官网提供的方式刷系统</li>
  <li>也可以用tf卡的ubuntu, 直接写系统至 /dev/nand</li>
  <li>拔掉tf卡, 用nand上的系统启动</li>
</ul>

<p>接下来, 就可以搜索各种有趣的玩法了~~~</p>

<hr />
<p>sd卡刷ubuntu/linaro, (来源见前面描述)
<code class="highlighter-rouge">
git clone https://github.com/linux-sunxi/sunxi-bsp/ 
cd sunxi-bsp 
wget http://dl.linux-sunxi.org/amery/sunxi-3.0/latest/cubieboard_hwpack.tar.xz
wget http://releases.linaro.org/latest/ubuntu/quantal-images/alip/linaro-quantal-alip-20121124-519.tar.gz
./scripts/sunxi-media-create.sh /dev/sdb cubieboard_hwpack.tar.xz linaro-quantal-alip-20121124-519.tar.gz
</code></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu 下使用 tf 卡]]></title>
    <link href="http://www.lianghaijun.com/2013-03-20-1832792.html"/>
    <updated>2013-03-20T16:45:00+08:00</updated>
    <id>http://www.lianghaijun.com/1832792</id>
    <content type="html"><![CDATA[<p>记录下,在ubuntu下使用tf卡的问题</p>

<p>在ubuntu使用了下tf卡,在windows下使用读卡器正常, 在ubuntu下就变成63M了</p>

<p>使用
<code class="highlighter-rouge">
sudo fdisk /dev/sdb
</code>
之后为交互式的命令行操作</p>

<ul>
  <li>使用p显示当前分区情况</li>
  <li>使用d命令删除了所有的分区</li>
  <li>使用o命令改为兼容的分区表结构 或 用c,没有研究</li>
  <li>使用a命令,增加可引导标识</li>
  <li>使用w命令,保存退出</li>
  <li>使用q命令,不保存退出</li>
</ul>

<p>中间操作时,会遇到一些error(如设备忙),请尝试以下办法
* 操作完一个命令,如o后,先w保存退出,然后重新fdisk进命令后,再操作
* 使用d删除完全后,w保存后,再重新进入操作
* 分区后,还要再格式化为某个文件系统, 关键词 mkfs
* /dev/sdb为tf卡, /dev/sdb1为第一个分区, /dev/sdb2为第二个分区</p>

<p>fdisk后, ubuntu与windows就都正常了, 没试过U盘,改天看看~~</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用符号链接提高工作效率]]></title>
    <link href="http://www.lianghaijun.com/2013-03-07-1825519.html"/>
    <updated>2013-03-07T14:23:00+08:00</updated>
    <id>http://www.lianghaijun.com/1825519</id>
    <content type="html"><![CDATA[<p>使用符号链接提高工作效率</p>

<p>目标
本文主要阐述一种理念，如何使用符号链接来提高工作效率</p>

<p>什么是符号链接
1. windows下使用junction或者mklink /J创建的符号链接 (非快捷方式)
2. linux下使用ln -s创建的符号链接</p>

<p>让我们来先看看各种使用场景</p>

<p><em>dropbox</em>
很多网盘只支持同步单一个文件夹，容易设计，容易理解，容易使用
但事实上会遇到很多不方便，尤其是想同步一个已经存在的目录时
使用junction或ln -s吧，不仅同步，还不影响原来的开发环境</p>

<p><em>apache</em>
apache默认安装的时候，根目录是指向 /var/www 的
很多人喜欢去改 apache.conf 来修改ROOT 比如改至 ~/workspace 这样的
其实可以这样用 ln -s ~/workspace  /var/www/workpsace
这样能解决几个问题
a). 系统重装时，或者更换环境时， /home/xx/workspace要换成 /home/yy/workspace，因为使用 ~ ，apache可能不知所云
b). 这时，如果想重新搭环境，改apache.conf是个问题，是从网上下载一份，还是拷贝之前，有时喜欢把这些配置放在云盘备份，但有些目录系统重装后目录就没了，或者要配置另一个环境
c). SCM维护大量机器的时候，也是希望.conf可以统一，不统一的再用include子conf
d). 如果使用 alias, 这不要改配置还要重启吗？ 试试符号链接吧, ls一目了然
e). 也许会有很多不错的使用方式
    i). 把公司统一配置的tools从共享服务器别名过来，里面已经装了dummyimage等等
    ii). 把github目录别名过来，直接浏览器预览
    iii). 把 ~/personal/secret 临时别名下，使用完后，马上删除别名
f). 很多好处</p>

<p><em>切换版本</em>
比如: 
http://backup.com/nodejs/lastest/index.html
http://backup.com/nodejs/v8.0.16/index.html
http://backup.com/nodejs/v8.0.22/index.html
这里的lastest目录，就使用符号链接吧</p>

<p>http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/latest/
这里的lastest，也应该是某个版本的符号链接吧
难道每发布一次版本，改下apache.conf，再重启，用符号链接</p>

<p>你经常在python2 与 python3 之间切换，这些路径在很多地方都配置过，在shell,在历史维护任务，在很多django工程中，你新找到一个python3的运行统计工具，你想尝试下，建立一个python别名，大家都指向到这里吧，随时切换</p>

<p><em>mod-enabled</em>
无意中发现ubuntu中的/etc/apache2/中的模块是这样管理的
将增加删除一个模块，改为文件操作，不用再修改配置文件了
如果能不改配置文件，就会有以下好处
1. 命令行工具，帮忙调整apache配置时，可以不用去改配置文件，避名意外
2. apt-get做插件开发时，不需要去解析修改配置文件，直接改文件就可能是一个插件了</p>

<p><em>/etc/init.d/</em>
在linux下面，有很多目录下，都是由一些别名文件组成的
/etc/init.d/    /etc/fonts/conf.d
这些目录大部分是相当于一个list的工作，用于收集需要进行的任务
然后将各个任务从四面八方收集而来，这里只是一个汇总工作，不破坏各个任务的内容</p>

<p><em>库</em>
win7引入的库，其实也是一个别名，也是一个符号链接的应用</p>

<p><em>你有什么想法？</em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[包管理软件]]></title>
    <link href="http://www.lianghaijun.com/2013-03-01-1820183.html"/>
    <updated>2013-03-01T22:38:00+08:00</updated>
    <id>http://www.lianghaijun.com/1820183</id>
    <content type="html"><![CDATA[<p>常见的各类包管理软件对比</p>

<p>包管理分类</p>

<ul>
  <li>操作系统包管理  如: yum (RHL), apt-get(ubuntu), homebrew(mac)</li>
  <li>语言级别  如: npm(nodejs), gem(ruby),pip(python), bower(javascript), maven(java)</li>
</ul>

<p>总结</p>

<ul>
  <li>
    <table>
      <tbody>
        <tr>
          <td>包管理几乎都有list, install, uninstall, update</td>
          <td>upgrade, search 等功能</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>语言级别时, 因涉及到应用, 会分 local与global, 会有工程配置如package.json</li>
  <li>maven比较特殊, 不支持install, 需要手工配置pom.xml   (需要不少插件)</li>
</ul>

<p>一些列表
[table]
|name   | list | install | uninstall| update | search | init|
|apt-get| apt-cache  | install | uninstall | upgrade | apt-cache search | |
|yum     | ||||||
|brew    | list | install | uninstall | upgrade | search | |
|npm     | local | -g –save  | prune  | update |  /regexp | package.json|
|gem     | –local | local| cleanup | update | –remote | Gemfile (bundle init)|
|pip       | freeze | install | uninstall | —- | search | |
|bower  | list  | -g –save | cache-clean | update | search  |  component.json |
[/table]</p>

<p>心得</p>

<ul>
  <li>yum, apt-get, npm, gem 几乎是官方的, 但mac, python还是选择性较多</li>
  <li>install 并保存至 .json 配置时, 使用 –save参数, 但gem,python不清楚,待补充</li>
  <li>有些update是更新版本信息的, upgrade才是升级所有组件</li>
  <li>组件的依赖版本冲突如何办, npm的方法确实不错</li>
</ul>

<p>汇总列表</p>

<ul>
  <li>apt-get(ubuntu),yum(fedora),macports(mac),homebrew(mac),pkg(solaris),emerge(Gentoo)</li>
  <li>npm(nodejs),gem(ruby),pip(python),easy_install(python),nuget(vs),bower(javascript)</li>
  <li>maven(java),grunt(java),gradle(java),pear(php),cpan(perl)</li>
  <li></li>
</ul>

<p>各种镜像:
http://ruby.taobao.org/
http://gems.rubyforge.org/
http://gems.github.com/</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[chrome  support for sass]]></title>
    <link href="http://www.lianghaijun.com/2013-02-28-1817854.html"/>
    <updated>2013-02-28T15:51:00+08:00</updated>
    <id>http://www.lianghaijun.com/1817854</id>
    <content type="html"><![CDATA[<p>chrome  support for sass</p>

<p>很多人说 chrome 已经支持 sass了，但是怎么个支持法，却没有提及，通过google，搜出来一些资料，共享下</p>

<p>chrome开启sass
1. chrome://flags,   启用开发者工具实验  =&gt; 点击最下方重启
2. chrome开发者工具(F12), 右下角setttings,experiments,support for sass =&gt; 重启
3. OK 可以了</p>

<p>如何使用
1. 使用sass –watch文件夹， 实时编译 .scss 文件至 .css
<code class="highlighter-rouge">
   sass --watch .:. --debug-info --line-number
</code>
其中冒号前后，为监视的目录
2. chrome打开页面, 页面中的link，使用编译后的 .css
3. 开发者工具中， 查看 .css 文件， 已经变成了 .scss文件，并可以点击过去</p>

<p>注意点：
debug调试， .scss 文件只支持 file://</p>

<p>Ps: 原以为会支持实时编译，原来不是，可惜了</p>

<p>参考:</p>

<ul>
  <li>http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html</li>
  <li>http://wiki.netbeans.org/SourceMapsExampleSASS</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu 与 windows 的互联与共享]]></title>
    <link href="http://www.lianghaijun.com/2013-02-21-1811277.html"/>
    <updated>2013-02-21T18:23:00+08:00</updated>
    <id>http://www.lianghaijun.com/1811277</id>
    <content type="html"><![CDATA[<p>windows访问ubuntu</p>

<ol>
  <li>ubuntu 安装 samba</li>
</ol>

<div class="highlighter-rouge"><pre class="highlight"><code>sudo apt-get install samba
</code></pre>
</div>

<ol>
  <li>修改 /etc/samba/smb.conf文件</li>
</ol>

<div class="highlighter-rouge"><pre class="highlight"><code>
[global]
   workgroup = WORKGROUP
   server string = %h server (Samba, Ubuntu)
;   wins support = no
   wins server =  (用ipconfig /all里看， 或者直接填网关ip)
   dns proxy = no
   name resolve order = lmhosts host wins bcast

   security = share
   usershare allow guests = yes
[share]
      path = /home/ubuntu/
      available = yes
      browseable = yes
      public = yes
      writable = yes

</code></pre>
</div>

<ol>
  <li>重启服务
<code class="highlighter-rouge">
sudo restart smbd
sudo restart nmbd
</code></li>
</ol>

<ul>
  <li>smbd 是 samba 的文件共享服务</li>
  <li>nmbd 是 windows name 解析服务</li>
</ul>

<ol>
  <li>OK
这样，windows 就可以ping 通,且能查看unbutu的共享文件</li>
</ol>

<hr />

<p>ubuntu 访问windows</p>

<ol>
  <li>
    <p>安装服务
<code class="highlighter-rouge">
sudo apt-get install cifs
</code></p>
  </li>
  <li>
    <p>mount
<code class="highlighter-rouge">
sudo mount -t cifs //hostname/share  /mnt/path/to/name -o username=user
</code></p>
  </li>
</ol>

<hr />

<p>补： 上述是通过samba即cifs实现，也可通过ftp, webdav 等等其它协议实现互相访问</p>

<p>其它问题</p>

<ol>
  <li>ubuntu ping 的时候速度很慢，ping taobao.com 也慢
http://forum.ubuntu.org.cn/viewtopic.php?f=116&amp;t=345288</li>
  <li>ping <hostname> 默认会解析全域名
可以在 /etc/resolv.conf 中进行修改，将 search 修改为 正确的域后缀</hostname></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git的本质]]></title>
    <link href="http://www.lianghaijun.com/2013-02-17-1801066.html"/>
    <updated>2013-02-17T00:33:00+08:00</updated>
    <id>http://www.lianghaijun.com/1801066</id>
    <content type="html"><![CDATA[<p>git 的本质</p>

<p>配置:
git的配置操作，本质上，都是在修改config文件 (.git/config) 
* git config -l</p>

<p>其中
remote.origin.fetch 与 remote.origin.url 即是 remote 的配置</p>

<ul>
  <li>git remote -v 就是显示配置, git remote -v show <name> 细节</name></li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>git remote add</td>
          <td>rm</td>
          <td>set-url</td>
          <td>rename 即是增删改操作</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>git prune 是与服务器同步的功能</li>
</ul>

<p>其中
branch.master.remote 与  branch.master.merge 即是 branch的配置</p>

<ul>
  <li>git branch -v 就是显示配置</li>
  <li>git branch <branchname>|-m|-d 就是增删改的操作</branchname></li>
  <li>git branch –set-upstream 设置分支对应的 remote</li>
</ul>

<p>分支名:
git 命令，使用分支时，需要一个名字， 如origin/master, refs/remotes/origin/HEAD等
其实，可以参考 .git/refs目录， 就明白了</p>

<ul>
  <li>heads 代表本地分支</li>
  <li>remotes 代表远程分支</li>
  <li>tag 代表tags分支</li>
  <li>master 与 HEAD 同义</li>
</ul>

<p>当我们需要使用分支时，语法大致是这样的  (refs/)? (heads/|remotes/|tags/)? <name>
即，refs 或者 heads 等， 都是可以省略的， git 会遍历查询
假如有冲突时， git报错 warngin: refname '...' is ambiguous ， 但还会执行第一个</name></p>

<p>当然还有更精确及表示更多标识的方式， 即 commitId
而 tag 只是将 commitId 取了一个容易记忆的名字
而 分支，远程分支，可以理解为是一个 commitId 的有序列表（可变数组）</p>

<p>分支操作:
假如将远程仓库也看成是一个个本地分支的话， 就会明白了</p>

<ul>
  <li>git pull 就是  git merge origin/master</li>
  <li>git reset <commit> 就是 还原至某分支的状态    (会根据参数，还原 文件，index, commit)</commit></li>
  <li>git rebase 可以看作是另一种merge操作， 算法不同</li>
</ul>

<p>操作index
* git add    追加 index
* git rm     删除文件，以追加index
* git mv     移动文件，并追加index
* git reset  清除uncommit的index</p>

<p>clone
* 这个大家都知道了，就是一系列git操作的组合</p>

<p>checkout
* 就是在操作HEAD的位置</p>

<p>git
* git的所有操作，如果理解清每个命令， 是如何操作 file, index, commit, branch 的，就都理解了</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于平台]]></title>
    <link href="http://www.lianghaijun.com/2013-02-01-1782749.html"/>
    <updated>2013-02-01T16:15:00+08:00</updated>
    <id>http://www.lianghaijun.com/1782749</id>
    <content type="html"><![CDATA[<p>所谓“平台”就是能够独立运行并自主存在，为其所支撑的上层系统和应用提供运行所依赖的环境。 (来自百度百科)</p>

<p>越来越多的平台出现了
1. 操作系统层面: PC, MAC, IOS, Android, 
2. 技术体系层面: HTML5, Flash
3. 语言层面:  java, .net, python
4. 业务开放平台:  webbo, qq, baidu, taobao 开放平台
5. ….</p>

<p>每个大公司都在制造自己的大平台, 各方各面的大平台
很多程序也在不断完善着自己的产品, 在每个平台上, 推出自己的产品</p>

<p>如:
1. 很多云盘都在不断扩充自己的战线, 支持着越来越多的平台
2. 音乐听歌软件，也是pc, mac, web, ios, mp3， 甚至不少开放平台上</p>

<hr />

<p>继续:
1. 如果有着各色各样的虚拟机,模拟器, 我们就可以将另一个平台的软件迁移至新的平台
2. 但是移植并不是那么容易的,很多软件移植时，必须作更改，甚至是界面，操作上的更改
3. 平台的差异同时也决定着移植的难度， 如PC上软件，迁移至触摸屏上
4. 当然：平台的迁移也有着自己的复杂度</p>

<p>考虑一类迁移
1. FC游戏机上软件的迁移，我们会统称这类软件为模拟器，我们会建立各种各样的模块器
2. windows上的模拟器，mac上，flash的，html5版的
3. 我们不需要，一个游戏一个游戏的迁移， 我们只需要一个模拟器就可以了</p>

<hr />

<p>然后：
1. 各色各样的模拟器出现了
2. FC的，GBA的，DOSBOX, 然后是IOS的
3. 最重量级的， 就是虚拟机了， 直接模拟硬件，连各类操作系统也模拟了</p>

<p>好了
1. 你可以在一个终级模拟的PC上玩着，各色各样的终端的产品
2. 现在触模的笔记本也出来，你可以模拟更多的终端了
3.</p>

<hr />

<ol>
  <li>突然想通了GOOGLE的本质，google就是想在web上，搭建着更加终极的终端，其它终端能干的事，他也要做出来，做不出来，就模拟一个终端出来</li>
  <li>想想这个可能性：
  a) web版linux
  b) web版模拟器，有flash版本的，也有nacl版本的
  c) web版远程连接，有vnc, 有RDP的，还有chrome与chrome的
  d) web版的云盘，相当于硬盘
  e) web版的操作系统, chromeOS
  f) web版的。。。。</li>
  <li>一流的企业做平台啊~~~</li>
</ol>

<hr />

<ol>
  <li>我们经常在代码中，设计一些中间层，借此来统一各类解决方案</li>
  <li>如JDBC接口的出现，就是JAVA当年为了统一存取各种关系数据库</li>
  <li>而这样一来，带来了相当多的好处，上层使用方面了，中间层可以各类扩展，底层也有一依据，大家都很愉快</li>
  <li>同时，成功与失败都在于接口的设计的好与坏</li>
  <li>类似这样的设计有很多：opengl， 各类图片视频格式，tcp/ip， 等等。。</li>
  <li>硬件也是同理的，像USB, wifi， 都是这样的例子</li>
</ol>

<hr />

<p>用于实际中
1. 我们平时的软件开发过程中，也需要加入这样的思考
2. 一是采用业界通入的解决方案，这样会有很多的第三方的技术，工具支持
3. 二是从中抽象出自己的中间平台来，让别人帮你丰富起来
4. 在中间平台上，作更多的文章</p>

<hr />

<p>平台的成功与失败
1. 平台的成功有时不在于平台的技术实力，接口的完善
2. 更多的还是在于，支持者的实力，以及平台对应工具的实力了
3. 只有用户看到平台真正带来的好处，才会明白过来</p>

<p>举例：
1. 之前还是ant+cvs的年代的时候，并没有感觉到，会被新的maven+svn取代，但是周边工具丰富起来时，慢慢的大家也就接受了
2. 再想想现在的git与svn，有人喜欢有人讨厌，但git支持的人多，有很多人共同努力，替代svn估计也是迟早的事情了
3. 等到svn最后一个让你挽留的特性也被git模仿超越的时候，你就会改变你的想法了
4. 早点尝试，多学习下，对你有好处
5. 更多的趋势正在进行，你捕捉到了吗？ 要不要提前学习下</p>

<hr />

<p>有人说，变化每天都在继续，说不定，将来谁笑到最后
而且变化那么多，哪有办法都学的过来，实在太多了
提高自己的开发效率，从手头相关的工具，框架，平台开始吧</p>

<ol>
  <li>IDE，开发语言，编程框架，浏览器，操作系统，文件共享，版本管理，知识管理</li>
  <li>太多的基础平台，多研究下，改进下效率吧</li>
  <li>如果有兴趣，可以找一个方向，大胆深入底层去看看</li>
  <li>别忘了，找志同道合的人去一起研究</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[组件版本管理]]></title>
    <link href="http://www.lianghaijun.com/2012-12-18-1750012.html"/>
    <updated>2012-12-18T22:49:00+08:00</updated>
    <id>http://www.lianghaijun.com/1750012</id>
    <content type="html"><![CDATA[<p>组件版本管理</p>

<p>任何编程语言, 当组件有依赖关系+版本管理之后, 都会遇到同样的问题, 相依性地狱</p>

<p>常见的问题有:
1. 循环依赖:  A依赖于B, B依赖于C, C依赖于A, 相互循环依赖, 导致解析无法继续
2. 版本不兼容:  A依赖于B,C1, B依赖于C2, C1与C2不兼容时, 导致系统无法运行
3. 依赖过多:  依赖的深度与广度都比较大, 导致系统过于复杂, 能性能调试带来诸多不便</p>

<p>比如:
1. DLL,  DLL初期缺少规化, 导致当覆盖或升级系统的DLL时, 经常出现冲突的情况
2. JAR,   百家争鸣, 经常导致版本问题, 甚至象log4j,logback,jcf之间的纠缠
3. js,   复杂的页面交互, 历史遗留问题, 经常导致loader后的几个js不兼容,而作者可能是同一人</p>

<p>同时也有一些版本库管理器
1. APT, YUM  linux上的软件包管理
2. npm          nodejs的软件包管理
3. brew         mac homebrew软件
4. sublime    编辑器中的package control也算是
5. maven       jar包版本依赖管理
6. eclipse-plugins  插件版本管理
7. bundle       ios.app,  mac.app, 一种常用的app打包模式
8. 还有很多很多</p>

<p>从已有的解决方案来思考下这个问题
1. jar包以及java类都不会因循环依赖而导致问题,  因为依赖与运行解耦合了
    考虑js.loader中的依赖, AMD因运行后才能得到依赖的module, 导致循环依赖不得不break
    而CMD方案, 则提前将module设定为了{}, 少了点微不足道的功能, 但解耦合了, 
    从而可以将分析模块依赖与模块运行独立开来, 避免掉break
2. 可以得出这样一个结论, 一个相互依赖+版本的组件库, 通常具备以下几个功能
     a) 一个打包器, 通常由语言方制定好规范, 大家相互遵守 
     b) 一个版本管理工具, 通常会带有命令行, 可以查看树型依赖
     c) 依赖的组件, 有远程仓库, 通过id, 可以通过http直接下载,  有中央仓库, 而大公司也喜欢制造自己软件仓库
     d) 敲入安装命令后, 可以自行下载元信息, 分析依赖, 下载依赖, 执行初始化
     e)  软件本身不参与自己的版本管理
3. 版本不兼容的问题, 通常与实际情况有关, 很难有最佳实践, 向下兼容是比较靠谱的, 通常情况下, 一但不向下兼容, 通常都会在事后遇到依赖组件冲突问题, 除非完全统一升级
     如果无法向下兼容, 那就另起炉灶吧, 换个名字, 换个命名空间, 换个全局变量
4. 提前定义好接口规范, 小版本号bugfix, 中版本增加功能, 大版本号表示大幅重构或变更</p>

<p>因此: 
1. 在考虑是否采用版本号时, 首先要确定好, 是否有足够的精力去制造或者寻找一个合适的版本管理工具, 一个代码中央仓库, 一个有氛围的社区
2. 如果没有, 就还是单版本吧, 一个稳定的核心, 每个组件都尽量只依赖于核心, 独立成单独组件, 不相互依赖, 采用简单代码冗余, 代替复杂版本管理</p>

<p>一句话:  要么简单,  要么复杂,  量力选择, 针对具体情况, 做出选择</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[insertBefore]]></title>
    <link href="http://www.lianghaijun.com/2012-12-07-1743767.html"/>
    <updated>2012-12-07T15:10:00+08:00</updated>
    <id>http://www.lianghaijun.com/1743767</id>
    <content type="html"><![CDATA[<p>insertBefore</p>

<p>经常看到这样的写法:
<code class="highlighter-rouge">
if (head.firstChild) {
	head.insertBefore(node, head.firstChild);
} else {
	head.appendChild(node);
}
</code>
其实可以改为:
<code class="highlighter-rouge">
head.insertBefore(node, head.firstChild);
</code></p>

<ul>
  <li>insertBefore的第二参数为空时, 相当于appendChild</li>
  <li>head.firstChild为空时, insertBefore等同于appendChild</li>
  <li>jquery中的getScript时, 就是只有一句 insertBefore</li>
</ul>

<p>另外:</p>

<ul>
  <li>IE6,IE7,IE8 下的head默认不是空的, 有一个文本空节点, head.childNodes.length === 1</li>
  <li>IE9下面时, 如有&lt;head&gt;&lt;/head&gt;, 为1个文本节点, 内容为一个回车符</li>
  <li>IE9下面时, 如没有head标签, 与chrome一致,  节点数为0</li>
  <li>chrome时, &lt;head&gt;&lt;/head&gt;与没有head标签,均一致, 节点数为0</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[isFunction]]></title>
    <link href="http://www.lianghaijun.com/2012-12-07-1743758.html"/>
    <updated>2012-12-07T15:03:00+08:00</updated>
    <id>http://www.lianghaijun.com/1743758</id>
    <content type="html"><![CDATA[<p>[size=xx-large]isFunction</p>

<p>标准写法是:
<code class="highlighter-rouge">
 var isFunction = function(obj) {
       return Object.prototype.toString.call(obj) === '[object Function]'
 }
</code></p>

<p>深层次:</p>

<ul>
  <li>有博客说, 之前的chrome会识别 new Regexp()为function, 没有测试之前的chrome, 现在的不会了</li>
  <li>有博客说, document.write在IE下会识别为object, 其实新的写法, 依然还是object, 不信,jquery测试下, 同理getAttribute也是一样的</li>
  <li>jquery的isFunction注释</li>
</ul>

<div class="highlighter-rouge"><pre class="highlight"><code>    // See test/unit/core.js for details concerning isFunction.
    // Since version 1.3, DOM methods and functions like alert
    // aren't supported. They return false on IE (#2968).
    isFunction: function( obj ) {
        return jQuery.type(obj) === "function";
    }
</code></pre>
</div>
<ul>
  <li>jquery中的 type(obj), 即是  Object.prototype.toString.call(obj)</li>
  <li>jquery已经不支持DOM方法,以及像alert这样的方法, 因为他们在IE都返回false,无法区分</li>
  <li>#2968 见 http://bugs.jquery.com/ticket/2968</li>
</ul>

<p>最简单的写法:
<code class="highlighter-rouge">
 var isFunction = function(obj) {
       return typeof obj === 'function'
 }
</code></p>

<ul>
  <li>这个写法, 在jquery的isFunction测试用例中, 全部通过  https://code.google.com/p/jqueryjs/source/browse/trunk/jquery/test/unit/core.js</li>
  <li>简单的就是最好的~~</li>
</ul>

<p>测试用例 (修改自jquery的isFunction测试用例)
```</p>
<body>
<ul id="result"></ul>

<script>
var jQuery = {
	isFunction: function(obj) {
		return typeof obj === 'function'
	}
}

function ok(bool, text) {
	document.getElementById('result').innerHTML += ('<li>' + (bool ? '√':'×') + ' &nbsp; ' + text);
}

function test() {
        // Make sure that false values return false
        ok( !jQuery.isFunction(), "No Value" );
        ok( !jQuery.isFunction( null ), "null Value" );
        ok( !jQuery.isFunction( undefined ), "undefined Value" );
        ok( !jQuery.isFunction( "" ), "Empty String Value" );
        ok( !jQuery.isFunction( 0 ), "0 Value" );

        // Check built-ins
        // Safari uses "(Internal Function)"
        ok( jQuery.isFunction(String), "String Function("+String+")" );
        ok( jQuery.isFunction(Array), "Array Function("+Array+")" );
        ok( jQuery.isFunction(Object), "Object Function("+Object+")" );
        ok( jQuery.isFunction(Function), "Function Function("+Function+")" );

        // When stringified, this could be misinterpreted
        var mystr = "function";
        ok( !jQuery.isFunction(mystr), "Function String" );

        // When stringified, this could be misinterpreted
        var myarr = [ "function" ];
        ok( !jQuery.isFunction(myarr), "Function Array" );

        // When stringified, this could be misinterpreted
        var myfunction = { "function": "test" };
        ok( !jQuery.isFunction(myfunction), "Function Object" );

        // Make sure normal functions still work
        var fn = function(){};
        ok( jQuery.isFunction(fn), "Normal Function" );

        var obj = document.createElement("object");

        // Firefox says this is a function
        ok( !jQuery.isFunction(obj), "Object Element" );

        // IE says this is an object
        // Since 1.3, this isn't supported (#2968)
        //ok( jQuery.isFunction(obj.getAttribute), "getAttribute Function" );

        var nodes = document.body.childNodes;

        // Safari says this is a function
        ok( !jQuery.isFunction(nodes), "childNodes Property" );

        var first = document.body.firstChild;

        // Normal elements are reported ok everywhere
        ok( !jQuery.isFunction(first), "A normal DOM Element" );

        var input = document.createElement("input");
        input.type = "text";
        document.body.appendChild( input );

        // IE says this is an object
        // Since 1.3, this isn't supported (#2968)
        //ok( jQuery.isFunction(input.focus), "A default function property" );

        document.body.removeChild( input );

        var a = document.createElement("a");
        a.href = "some-function";
        document.body.appendChild( a );

        // This serializes with the word 'function' in it
        ok( !jQuery.isFunction(a), "Anchor Element" );

        document.body.removeChild( a );

        // Recursive function calls have lengths and array-like properties
        function callme(callback){
                function fn(response){
                        callback(response);
                }

                ok( jQuery.isFunction(fn), "Recursive Function Call" );

                fn({ some: "data" });
        };

        callme(function(){
                callme(function(){});
        });
}

test();

</script>


</body>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[function 工具集]]></title>
    <link href="http://www.lianghaijun.com/2012-11-19-1729814.html"/>
    <updated>2012-11-19T22:09:00+08:00</updated>
    <id>http://www.lianghaijun.com/1729814</id>
    <content type="html"><![CDATA[<p>function 工具集</p>

<p>经常会碰到这样的问题
1. button.click 后，只调用一次方法
2. window.scroll触发太频繁，导致滚动加载次数太多
3. document.keyup次数太多，导致智能提示调用次数太多</p>

<p>你需要以下的方法来解决此类问题</p>

<div class="highlighter-rouge"><pre class="highlight"><code>
<span class="nx">$</span><span class="p">(</span><span class="s1">'a.load'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'click'</span><span class="p">,</span> <span class="nx">$</span><span class="p">.</span><span class="nx">once</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
     <span class="nx">$</span><span class="p">(</span><span class="s1">'#tabs .first'</span><span class="p">).</span><span class="nx">load</span><span class="p">(</span><span class="nx">url</span><span class="p">);</span>
<span class="p">}));</span>

<span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'scroll'</span><span class="p">,</span> <span class="nx">$</span><span class="p">.</span><span class="nx">throttle</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
     <span class="nx">$</span><span class="p">(</span><span class="s1">'#rest'</span><span class="p">).</span><span class="nx">lazyload</span><span class="p">();</span>    
<span class="p">}));</span>

<span class="nx">$</span><span class="p">(</span><span class="nx">input</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'keyup'</span><span class="p">,</span> <span class="nx">$</span><span class="p">.</span><span class="nx">debounce</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
     <span class="nx">$</span><span class="p">.</span><span class="nx">suggest</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">val</span><span class="p">())</span>
<span class="p">}));</span>

</code></pre>
</div>

<p>工具集源码如下：</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="nx">$</span><span class="p">.</span><span class="nx">bind</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">func</span><span class="p">,</span> <span class="nx">context</span><span class="p">)</span> <span class="p">{</span>
      <span class="kd">var</span> <span class="nx">args</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
      <span class="k">return</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
          <span class="k">return</span>  <span class="nx">func</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">context</span><span class="p">,</span> <span class="nx">args</span><span class="p">);</span>
      <span class="p">}</span>
<span class="p">}</span>

<span class="c1">//只调用一次</span>
<span class="nx">$</span><span class="p">.</span><span class="nx">once</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">func</span><span class="p">){</span>
        <span class="kd">var</span> <span class="nx">ran</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
	<span class="k">return</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
		<span class="k">if</span><span class="p">(</span><span class="nx">ran</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
		<span class="nx">ran</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
		<span class="nx">func</span><span class="p">();</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="c1">//ms时间内只执行一次</span>
<span class="nx">$</span><span class="p">.</span><span class="nx">throttle</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">func</span><span class="p">,</span> <span class="nx">ms</span><span class="p">)</span> <span class="p">{</span>
   <span class="nx">ms</span> <span class="o">=</span> <span class="nx">ms</span> <span class="o">||</span> <span class="mi">150</span><span class="p">;</span>

   <span class="kd">var</span> <span class="nx">last</span> <span class="o">=</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
   <span class="kd">var</span> <span class="nx">timer</span> <span class="p">;</span>
    <span class="k">return</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">now</span> <span class="o">=</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">now</span> <span class="o">-</span> <span class="nx">last</span> <span class="o">&gt;</span> <span class="nx">ms</span><span class="p">)</span> <span class="p">{</span>
             <span class="nx">timer</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
             <span class="nx">last</span> <span class="o">=</span> <span class="nx">now</span><span class="p">;</span>
             <span class="nx">func</span><span class="p">();</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
             <span class="nx">timer</span> <span class="o">=</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">func</span><span class="p">,</span> <span class="nx">ms</span> <span class="o">-</span> <span class="p">(</span><span class="nx">now</span><span class="o">-</span><span class="nx">last</span><span class="p">));</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">//缓冲ms时间后才执行</span>
<span class="nx">$</span><span class="p">.</span><span class="nx">debounce</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">func</span><span class="p">,</span> <span class="nx">ms</span><span class="p">)</span> <span class="p">{</span>
       <span class="nx">ms</span> <span class="o">=</span> <span class="nx">ms</span> <span class="o">||</span> <span class="mi">150</span><span class="p">;</span>

       <span class="kd">var</span> <span class="nx">timer</span><span class="p">;</span>
       <span class="k">return</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
           <span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">timer</span><span class="p">);</span>
           <span class="nx">timer</span> <span class="o">=</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">func</span><span class="p">,</span> <span class="nx">ms</span><span class="p">);</span>
      <span class="p">}</span>
<span class="p">}</span>

</code></pre>
</div>

<ul>
  <li>underscore, yui 中有throttle, debounce两个方法, jquery中没有发现</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[maven jetty 配置]]></title>
    <link href="http://www.lianghaijun.com/2012-10-02-1689147.html"/>
    <updated>2012-10-02T10:48:00+08:00</updated>
    <id>http://www.lianghaijun.com/1689147</id>
    <content type="html"><![CDATA[<p><em>jetty的maven插件配置(pom.xml)</em></p>

<ul>
  <li>scanIntervalSeconds 配置扫描时间时间, 如果有文件变动, 如pom.xml,web.xml或classes, 则jetty会重新加载应用, 相当方便</li>
  <li>contextPath 配置ROOT, 即将web的上下文路径, 改为 /</li>
  <li>将jetty默认的uri编码, 改为GBK   (jetty默认是utf8)</li>
</ul>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="nt">&lt;plugin&gt;</span> 
    <span class="nt">&lt;groupId&gt;</span>org.mortbay.jetty<span class="nt">&lt;/groupId&gt;</span> 
    <span class="nt">&lt;artifactId&gt;</span>maven-jetty-plugin<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;configuration&gt;</span>    
        <span class="nt">&lt;contextPath&gt;</span>/<span class="nt">&lt;/contextPath&gt;</span>    
        <span class="nt">&lt;connectors&gt;</span>    
            <span class="nt">&lt;connector</span> <span class="na">implementation=</span><span class="s">"org.mortbay.jetty.nio.SelectChannelConnector"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;port&gt;</span>8080<span class="nt">&lt;/port&gt;</span>    
            <span class="nt">&lt;/connector&gt;</span>    
        <span class="nt">&lt;/connectors&gt;</span>    
        <span class="nt">&lt;reload&gt;</span>automatic<span class="nt">&lt;/reload&gt;</span>  
        <span class="nt">&lt;scanIntervalSeconds&gt;</span>3<span class="nt">&lt;/scanIntervalSeconds&gt;</span>
        <span class="nt">&lt;systemProperties&gt;</span>
            <span class="nt">&lt;systemProperty&gt;</span>
	        <span class="nt">&lt;name&gt;</span>org.mortbay.util.URI.charset<span class="nt">&lt;/name&gt;</span>
	        <span class="nt">&lt;value&gt;</span>GBK<span class="nt">&lt;/value&gt;</span>
	    <span class="nt">&lt;/systemProperty&gt;</span>
	 <span class="nt">&lt;/systemProperties&gt;</span>
     <span class="nt">&lt;/configuration&gt;</span> 
<span class="nt">&lt;/plugin&gt;</span>
</code></pre>
</div>

<p><em>jetty的另一段配置</em>(修改web.xml)
用于解决使用jetty后无法修改文件问题(错误描述:请求的操作无法在使用用户映射区域打开的文件上执行)</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="nt">&lt;servlet&gt;</span>
    <span class="nt">&lt;servlet-name&gt;</span>default<span class="nt">&lt;/servlet-name&gt;</span>
    <span class="nt">&lt;servlet-class&gt;</span>org.mortbay.jetty.servlet.DefaultServlet<span class="nt">&lt;/servlet-class&gt;</span>
    <span class="nt">&lt;init-param&gt;</span>
        <span class="nt">&lt;param-name&gt;</span>useFileMappedBuffer<span class="nt">&lt;/param-name&gt;</span>
        <span class="nt">&lt;param-value&gt;</span>false<span class="nt">&lt;/param-value&gt;</span>
    <span class="nt">&lt;/init-param&gt;</span>
    <span class="nt">&lt;load-on-startup&gt;</span>0<span class="nt">&lt;/load-on-startup&gt;</span>
<span class="nt">&lt;/servlet&gt;</span>
</code></pre>
</div>

<p><em>修改mvn时的java运行时参数</em> (解决 PermGen space问题)</p>

<div class="highlighter-rouge"><pre class="highlight"><code>set MAVEN_OPTS=-XX:MaxPermSize=128M
mvn jetty:run
</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[判断两个字符串的相似度(js)]]></title>
    <link href="http://www.lianghaijun.com/2012-09-19-1681794.html"/>
    <updated>2012-09-19T20:48:00+08:00</updated>
    <id>http://www.lianghaijun.com/1681794</id>
    <content type="html"><![CDATA[<p>问题来源于 http://weibo.com/1748374882/yavpCkc31</p>

<p>问题：有两个字符串 A 和 B，如何简单高效的判断 A 和 B 的相似度？A 和 B 完全一样，相似度为 100, A 和 B 完全不一样，相似度为 0. A 和 B 中有一半文字相同，相似度为 50. 依此类推。文字中包含中英文，空白字符也算。哪位用 JS 挑战下？性能第一，代码长短无所谓。</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">compare</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">z</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="nx">x</span><span class="p">.</span><span class="nx">length</span> <span class="o">+</span> <span class="nx">y</span><span class="p">.</span><span class="nx">length</span><span class="p">;;</span>

	<span class="nx">x</span><span class="p">.</span><span class="nx">sort</span><span class="p">();</span>
	<span class="nx">y</span><span class="p">.</span><span class="nx">sort</span><span class="p">();</span>
	<span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="nx">x</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span>
	<span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">y</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span>

	<span class="k">while</span><span class="p">(</span><span class="nx">a</span> <span class="o">!==</span> <span class="kc">undefined</span> <span class="o">&amp;&amp;</span> <span class="nx">b</span> <span class="o">!==</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="nx">a</span> <span class="o">===</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">z</span><span class="o">++</span><span class="p">;</span>
			<span class="nx">a</span> <span class="o">=</span> <span class="nx">x</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span>
			<span class="nx">b</span> <span class="o">=</span> <span class="nx">y</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span>
		<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">a</span> <span class="o">&lt;</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">a</span> <span class="o">=</span> <span class="nx">x</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span>
		<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">a</span> <span class="o">&gt;</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">b</span> <span class="o">=</span> <span class="nx">y</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="nx">z</span><span class="o">/</span><span class="nx">s</span> <span class="o">*</span> <span class="mi">200</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">compare</span><span class="p">([</span><span class="s1">'123'</span><span class="p">,</span> <span class="s1">'中文'</span><span class="p">,</span> <span class="s1">'hello'</span><span class="p">],</span> <span class="p">[</span><span class="s1">'123'</span><span class="p">,</span> <span class="s1">'中文'</span><span class="p">,</span> <span class="s1">'hello'</span><span class="p">]))</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">compare</span><span class="p">([</span><span class="s1">'123'</span><span class="p">,</span> <span class="s1">'中文'</span><span class="p">,</span> <span class="s1">'hello'</span><span class="p">],</span> <span class="p">[</span><span class="s1">'123'</span><span class="p">,</span> <span class="s1">'中文'</span><span class="p">,</span> <span class="s1">'hello'</span><span class="p">].</span><span class="nx">sort</span><span class="p">()))</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">compare</span><span class="p">([</span><span class="s1">'123'</span><span class="p">,</span> <span class="s1">'中文'</span><span class="p">,</span> <span class="s1">'hello'</span><span class="p">],</span> <span class="p">[</span><span class="s1">'123'</span><span class="p">,</span> <span class="s1">'中文'</span><span class="p">,</span> <span class="s1">'hello'</span><span class="p">].</span><span class="nx">reverse</span><span class="p">()))</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">compare</span><span class="p">([</span><span class="s1">'123'</span><span class="p">,</span> <span class="s1">'中文'</span><span class="p">,</span> <span class="s1">'hello'</span><span class="p">,</span><span class="s1">'中2文'</span><span class="p">],</span> <span class="p">[</span><span class="s1">'12'</span><span class="p">,</span> <span class="s1">'中2文'</span><span class="p">,</span> <span class="s1">'123'</span><span class="p">,</span><span class="s1">'中文3'</span><span class="p">]))</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">compare</span><span class="p">([</span><span class="s1">'123'</span><span class="p">,</span> <span class="s1">'中文'</span><span class="p">,</span> <span class="s1">'hello'</span><span class="p">],</span> <span class="p">[</span><span class="s1">'中文'</span><span class="p">,</span> <span class="s1">'world'</span><span class="p">,</span> <span class="s1">'456'</span><span class="p">]))</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">compare</span><span class="p">([</span><span class="s1">'123'</span><span class="p">,</span> <span class="s1">'中3文'</span><span class="p">,</span> <span class="s1">'hello'</span><span class="p">],</span> <span class="p">[</span><span class="s1">'中文'</span><span class="p">,</span> <span class="s1">'world'</span><span class="p">,</span> <span class="s1">'汉字'</span><span class="p">]))</span>
</code></pre>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[js的简单串行加载方案]]></title>
    <link href="http://www.lianghaijun.com/2012-09-12-1676290.html"/>
    <updated>2012-09-12T00:29:00+08:00</updated>
    <id>http://www.lianghaijun.com/1676290</id>
    <content type="html"><![CDATA[<p>写了一个超简单的串行加载工具, 不想引入框架时, 可以试用下</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">all</span><span class="p">)</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">callee</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">;</span>
	<span class="nx">all</span><span class="p">.</span><span class="nx">shift</span><span class="p">()(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">callee</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">all</span><span class="p">,</span> <span class="nx">data</span><span class="p">);</span>
	<span class="p">});</span>
<span class="p">})([</span>
	<span class="kd">function</span><span class="p">(</span><span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
			<span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">+=</span> <span class="s1">'&lt;li&gt;first'</span><span class="p">;</span>

			<span class="nx">next</span><span class="p">();</span>
		<span class="p">},</span> <span class="mi">1000</span><span class="p">)</span>
	<span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
			<span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">+=</span> <span class="s1">'&lt;li&gt;second'</span><span class="p">;</span>

			<span class="nx">next</span><span class="p">();</span>
		<span class="p">},</span> <span class="mi">2000</span><span class="p">)</span>
	<span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
			<span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">+=</span> <span class="s1">'&lt;li&gt;third'</span><span class="p">;</span>

		<span class="p">},</span> <span class="mi">3000</span><span class="p">)</span>
	<span class="p">}</span>
<span class="p">]);</span>


</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[parseURL]]></title>
    <link href="http://www.lianghaijun.com/2012-07-22-1603820.html"/>
    <updated>2012-07-22T23:00:00+08:00</updated>
    <id>http://www.lianghaijun.com/1603820</id>
    <content type="html"><![CDATA[<p>我们知道, 在location对象中, 可以直接获取 hostname, search , hash 等参数
而链接的url中, 我们没有现成的API可以获取这些参数
下面是一个小方法, 可以得到链接中的各种参数</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">parseURL</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">ret</span> <span class="o">=</span> <span class="p">{};</span>
	<span class="nx">ret</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nx">url</span><span class="p">;</span>

	<span class="kd">var</span> <span class="nx">match</span> <span class="o">=</span> <span class="nx">url</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^</span><span class="se">([^\/</span><span class="sr">:</span><span class="se">]</span><span class="sr">+:</span><span class="se">)?(?:\/\/([^\/</span><span class="sr">:</span><span class="se">]</span><span class="sr">*</span><span class="se">)(?:</span><span class="sr">:</span><span class="se">([\d]</span><span class="sr">+</span><span class="se">))?)?(\/?[^\?</span><span class="sr">#</span><span class="se">]</span><span class="sr">*</span><span class="se">)?(\?[^\#]</span><span class="sr">*</span><span class="se">)?(</span><span class="sr">#.*</span><span class="se">)?</span><span class="sr">$/i</span><span class="p">);</span>
	<span class="k">if</span> <span class="p">(</span><span class="nx">match</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">ret</span><span class="p">.</span><span class="nx">isValid</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
		<span class="nx">ret</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">=</span> <span class="nx">match</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">||</span> <span class="s1">''</span><span class="p">;</span>
		<span class="nx">ret</span><span class="p">.</span><span class="nx">hostname</span> <span class="o">=</span> <span class="nx">match</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">||</span> <span class="s1">''</span><span class="p">;</span>
		<span class="nx">ret</span><span class="p">.</span><span class="nx">port</span> <span class="o">=</span> <span class="nx">match</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">||</span> <span class="s1">''</span><span class="p">;</span>
		<span class="nx">ret</span><span class="p">.</span><span class="nx">host</span> <span class="o">=</span> <span class="nx">ret</span><span class="p">.</span><span class="nx">hostname</span> <span class="o">+</span> <span class="nx">ret</span><span class="p">.</span><span class="nx">port</span> <span class="p">?</span> <span class="s1">':'</span> <span class="p">:</span> <span class="s1">''</span> <span class="o">+</span> <span class="nx">ret</span><span class="p">.</span><span class="nx">port</span><span class="p">;</span>
		<span class="nx">ret</span><span class="p">.</span><span class="nx">pathname</span> <span class="o">=</span> <span class="nx">match</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">||</span> <span class="s2">"/"</span><span class="p">;</span>
		<span class="nx">ret</span><span class="p">.</span><span class="nx">origin</span> <span class="o">=</span> <span class="nx">ret</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">+</span> <span class="nx">ret</span><span class="p">.</span><span class="nx">host</span> <span class="p">?</span> <span class="s1">'//'</span> <span class="p">:</span> <span class="s1">''</span> <span class="o">+</span> <span class="nx">ret</span><span class="p">.</span><span class="nx">host</span><span class="p">;</span>
		<span class="nx">ret</span><span class="p">.</span><span class="nx">search</span> <span class="o">=</span> <span class="nx">match</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">||</span> <span class="s1">''</span><span class="p">;</span>
		<span class="nx">ret</span><span class="p">.</span><span class="nx">hash</span> <span class="o">=</span> <span class="nx">match</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">||</span> <span class="s1">''</span><span class="p">;</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
		<span class="nx">ret</span><span class="p">.</span><span class="nx">isValid</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
		<span class="nx">ret</span><span class="p">.</span><span class="nx">path</span> <span class="o">=</span> <span class="nx">ret</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="nx">ret</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[硬盘里还能存点啥?]]></title>
    <link href="http://www.lianghaijun.com/2012-06-29-1570934.html"/>
    <updated>2012-06-29T13:21:00+08:00</updated>
    <id>http://www.lianghaijun.com/1570934</id>
    <content type="html"><![CDATA[<p>网速越来越快了, 需要存硬盘的东西越来越少了</p>

<ul>
  <li>电影      没必要下载电影了, 随时随地观看在线电影,直播电视, 怀旧连续剧等   (pplive,youku)</li>
  <li>音乐      在线音乐,在线播放列表,在线mv,最新最热歌曲,各类频道  (ting, yinyuetai)</li>
  <li>电子书    不必把大量的电子书, 存放在硬盘里, 多是看一遍后, 就存下来了, 以后就很少翻了, 看着4.5个G的电子书, 删也不是, 不删也不是, 还是网络共享下, 大家共同学习.  (w3school, open开源文档)</li>
  <li>书签      浏览器的书签,没必要备份在本地了, 也没有必要换电脑或重装系统时备份了,     (chrome书签同步)</li>
  <li>安装程序  自己本地有个5G的TDDownload, 发现这些安装程序, 很少用, 且版本总是很旧, 或者多版本共存,该整理下了,换软件管理吧      (360软件管家)</li>
  <li>代码      自己的代码 or 别人的代码,还是用版本控制吧     (github,googlecode)</li>
  <li>工具包    java的jar包吗?  用maven吧,只记录地址    (maven)</li>
  <li>文档      自己的一些文档,压缩一下备份在网络上     (各类网盘)</li>
  <li>笔记      一些小碎文字,如cdkey,桌面上的小心得     (云笔记)</li>
  <li>游戏      小游戏,flash游戏,在线游戏等,  如果网络够快,将来的大型网游,也可随时下载</li>
  <li>驱动      驱动一般都有地方下载,如果用书签就更好了 (mydrivers 或 官网吧)</li>
  <li>其它      如各类backup, 等…</li>
</ul>

<p>细数下来
* 硬盘的功能, 越来越像一个cache了, 程序的cache,数据的cache,只是做个中转.   ]* 硬盘大小不够时,可以随时删除,随时从服务端再获取
* 将来我们的电脑,会不会就像ipad一样
    1. 在线商店里, 双击某个应用, 开始自动安装
    2. 自动将程序装在 D:\program files\
    3. 自动将数据装在 D:\Users\xx\Application Data , 并自动服务端同步
    4. 然后, 打开应用, 正常使用
    5. 使用过程中, 将配置,数据自动同步,  某些cache,找个大盘自动cache
    6. 不需要理会装在哪里,不需要理会数据备份问题,都由软件来解决吧
* 这个就是传说中的app模式, ipad, 360桌面, Q+, win8, 似乎都有这个意向…</p>

<p>还有哪些会存在硬盘里呢:</p>

<ol>
  <li>个人私密文档,私密照片,不适宜共享   (包括私密电影?)</li>
  <li>超大文件,   下载起来费事, 如游戏客户端,大型软件安装程序</li>
  <li>其它</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mini javascript loader]]></title>
    <link href="http://www.lianghaijun.com/2012-06-07-1553882.html"/>
    <updated>2012-06-07T00:56:00+08:00</updated>
    <id>http://www.lianghaijun.com/1553882</id>
    <content type="html"><![CDATA[<p>[size=medium]
自己写的一个mini 且 simple 的 javascript loader</p>

<p>功能特点</p>

<ul>
  <li>异步并行载入js, 每个js只加载一次</li>
  <li>支持模块依赖, 未检测循环依赖</li>
  <li>支持别名</li>
  <li>兼容ie6+ , firefox, chrome …</li>
  <li>API :<br />
 define.alias[‘modName’] = ‘http://path/to/mods/root/dir’
 define(deps, callback)   其中 callback(dep1, dep2, dep3…)
 require(deps, callback)   其中 callback(dep1, dep2, dep3…)</li>
</ul>

<div class="highlighter-rouge"><pre class="highlight"><code>
<span class="nx">define</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	
	<span class="kd">var</span> <span class="nx">modules</span> <span class="o">=</span> <span class="p">{};</span>
	<span class="kd">var</span> <span class="nx">modulesCallbacks</span> <span class="o">=</span> <span class="p">{};</span>
	<span class="kd">var</span> <span class="nx">alias</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">alias</span> <span class="o">||</span> <span class="p">{};</span>

	<span class="kd">function</span> <span class="nx">map</span><span class="p">(</span><span class="nx">arr</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
		<span class="kd">var</span> <span class="nx">ret</span> <span class="o">=</span> <span class="p">[];</span>
		<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">ret</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">callback</span><span class="p">(</span><span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">arr</span><span class="p">));</span>
		<span class="p">}</span>
		<span class="k">return</span> <span class="nx">ret</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="kd">function</span> <span class="nx">isString</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">return</span> <span class="k">typeof</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="o">==</span> <span class="s1">'string'</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="kd">function</span> <span class="nx">isArray</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="o">==</span> <span class="s1">'[object Array]'</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="kd">function</span> <span class="nx">isFunction</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">return</span> <span class="k">typeof</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="o">==</span> <span class="s1">'function'</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="kd">function</span> <span class="nx">mix</span><span class="p">(</span><span class="nx">src</span><span class="p">,</span> <span class="nx">dst</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">key</span> <span class="k">in</span> <span class="nx">dst</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">src</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="nx">dst</span><span class="p">[</span><span class="nx">key</span><span class="p">];</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="kd">function</span> <span class="nx">getScript</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
		<span class="kd">var</span> <span class="nx">node</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">"script"</span><span class="p">);</span>
		<span class="nx">node</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
		<span class="k">if</span> <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">node</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">'load'</span><span class="p">,</span> <span class="nx">callback</span><span class="p">);</span>
		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
			<span class="nx">node</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
				<span class="k">if</span><span class="p">(</span><span class="nx">node</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">'loaded'</span> <span class="o">||</span> <span class="nx">node</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">'complete'</span><span class="p">)</span> <span class="p">{</span>
					<span class="nx">callback</span> <span class="o">&amp;&amp;</span> <span class="nx">callback</span><span class="p">();</span>
				<span class="p">}</span>
			<span class="p">}</span>
		<span class="p">}</span>
		<span class="nx">node</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">url</span><span class="p">;</span>

		<span class="kd">var</span> <span class="nx">head</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">head</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">'head'</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">;</span>
		<span class="nx">head</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">node</span><span class="p">,</span> <span class="nx">head</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span>
		<span class="k">return</span> <span class="nx">node</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="kd">function</span> <span class="nx">getCurrentScript</span><span class="p">()</span> <span class="p">{</span>
		
		<span class="c1">//firefox4 and opera</span>
		<span class="k">if</span> <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">currentScript</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">return</span> <span class="nb">document</span><span class="p">.</span><span class="nx">currentScript</span><span class="p">;</span>
		<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">)</span> <span class="p">{</span>
			<span class="c1">//ie6-9 得到当前正在执行的script标签</span>
			<span class="kd">var</span> <span class="nx">scripts</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">'script'</span><span class="p">);</span>
			<span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="nx">scripts</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
				<span class="k">if</span> <span class="p">(</span><span class="nx">scripts</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">readyState</span> <span class="o">===</span> <span class="s1">'interactive'</span><span class="p">)</span> <span class="p">{</span>
					<span class="k">return</span> <span class="nx">scripts</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
				<span class="p">}</span>
			<span class="p">}</span>
		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
			<span class="c1">// 参考 https://github.com/samyk/jiagra/blob/master/jiagra.js</span>
			<span class="c1">// chrome and firefox4以前的版本</span>
			<span class="kd">var</span> <span class="nx">stack</span><span class="p">;</span>
			<span class="k">try</span> <span class="p">{</span>
				<span class="nx">makeReferenceError</span>
			<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
				<span class="nx">stack</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">stack</span><span class="p">;</span>
			<span class="p">}</span>
			<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">stack</span><span class="p">)</span>
				<span class="k">return</span> <span class="kc">undefined</span><span class="p">;</span>
			<span class="c1">// chrome uses at, ff uses @</span>

			<span class="kd">var</span> <span class="nx">e</span> <span class="o">=</span> <span class="nx">stack</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">' at '</span><span class="p">)</span> <span class="o">!==</span> <span class="o">-</span><span class="mi">1</span> <span class="p">?</span> <span class="s1">' at '</span> <span class="p">:</span> <span class="s1">'@'</span><span class="p">;</span>
			<span class="k">while</span> <span class="p">(</span><span class="nx">stack</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="o">!==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
				<span class="nx">stack</span> <span class="o">=</span> <span class="nx">stack</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">stack</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
			<span class="p">}</span>
			<span class="nx">stack</span> <span class="o">=</span> <span class="nx">stack</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/:</span><span class="se">\d</span><span class="sr">+:</span><span class="se">\d</span><span class="sr">+$/ig</span><span class="p">,</span> <span class="s2">""</span><span class="p">);</span>

			<span class="kd">var</span> <span class="nx">scripts</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">'script'</span><span class="p">);</span>
			<span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="nx">scripts</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
				<span class="k">if</span> <span class="p">(</span><span class="nx">scripts</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">src</span> <span class="o">===</span> <span class="nx">stack</span><span class="p">)</span> <span class="p">{</span>
					<span class="k">return</span> <span class="nx">scripts</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
				<span class="p">}</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="kd">function</span> <span class="nx">getScriptWithCache</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
		<span class="kd">var</span> <span class="nx">scripts</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">_scripts</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">_scripts</span> <span class="o">||</span> <span class="p">{};</span>
		<span class="kd">var</span> <span class="nx">cache</span> <span class="o">=</span> <span class="nx">scripts</span><span class="p">;</span>
		<span class="k">if</span> <span class="p">(</span><span class="nx">cache</span> <span class="o">===</span> <span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">callback</span> <span class="o">&amp;&amp;</span> <span class="nx">callback</span><span class="p">();</span>
			<span class="k">return</span> <span class="p">;</span>
		<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">cache</span><span class="p">))</span> <span class="p">{</span>
			<span class="nx">cache</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">callback</span><span class="p">);</span>
			<span class="k">return</span> <span class="p">;</span>
		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
			<span class="nx">scripts</span> <span class="o">=</span> <span class="p">[</span><span class="nx">callback</span><span class="p">];</span>
		<span class="p">}</span>

		<span class="nx">getScript</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
			<span class="kd">var</span> <span class="nx">callbacks</span> <span class="o">=</span> <span class="nx">scripts</span> <span class="o">||</span> <span class="p">[];</span>
			<span class="nx">scripts</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
			<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">callbacks</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
				<span class="nx">callbacks</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="nx">callbacks</span><span class="p">[</span><span class="nx">i</span><span class="p">]();</span>
			<span class="p">}</span>
		<span class="p">});</span>		
	<span class="p">}</span>

	<span class="kd">function</span> <span class="nx">getModule</span><span class="p">(</span><span class="nx">mod</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">modules</span><span class="p">[</span><span class="nx">mod</span><span class="p">])</span> <span class="p">{</span>
			<span class="nx">modulesCallbacks</span><span class="p">[</span><span class="nx">mod</span><span class="p">]</span> <span class="o">=</span> <span class="nx">modulesCallbacks</span><span class="p">[</span><span class="nx">mod</span><span class="p">]</span> <span class="o">||</span> <span class="p">[];</span>
			<span class="nx">modulesCallbacks</span><span class="p">[</span><span class="nx">mod</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">callback</span><span class="p">);</span>

			<span class="nx">getScriptWithCache</span><span class="p">(</span><span class="nx">mod</span><span class="p">);</span>
		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
			<span class="nx">callback</span> <span class="o">&amp;&amp;</span> <span class="nx">callback</span><span class="p">(</span><span class="nx">modules</span><span class="p">[</span><span class="nx">mod</span><span class="p">]);</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="kd">function</span> <span class="nx">getModules</span><span class="p">(</span><span class="nx">mods</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="nx">mods</span> <span class="o">==</span> <span class="kc">undefined</span> <span class="o">||</span> <span class="nx">mods</span><span class="p">.</span><span class="nx">length</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">callback</span> <span class="o">&amp;&amp;</span> <span class="nx">callback</span><span class="p">();</span>
			<span class="k">return</span> <span class="p">;</span>
		<span class="p">}</span>
		<span class="kd">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

		<span class="kd">var</span> <span class="nx">ret</span> <span class="o">=</span> <span class="p">[];</span>
		<span class="nx">map</span><span class="p">(</span><span class="nx">mods</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">mod</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">getModule</span><span class="p">(</span><span class="nx">mod</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
				<span class="nx">ret</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">;</span>

				<span class="k">if</span> <span class="p">(</span><span class="o">++</span><span class="nx">c</span> <span class="o">==</span> <span class="nx">mods</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="p">{</span>
					<span class="nx">callback</span> <span class="o">&amp;&amp;</span> <span class="nx">callback</span><span class="p">(</span><span class="nx">ret</span><span class="p">);</span>
				<span class="p">}</span>
			<span class="p">});</span>
		<span class="p">});</span>
	<span class="p">}</span>

	<span class="kd">function</span> <span class="nx">define</span><span class="p">(</span><span class="nx">deps</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
		<span class="kd">var</span> <span class="nx">container</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>

		<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isString</span><span class="p">(</span><span class="nx">deps</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">deps</span><span class="p">))</span> <span class="p">{</span>
			<span class="nx">callback</span> <span class="o">=</span> <span class="nx">deps</span><span class="p">;</span>
			<span class="nx">deps</span> <span class="o">=</span> <span class="p">[];</span>
		<span class="p">}</span>
		<span class="kd">var</span> <span class="nx">current</span> <span class="o">=</span> <span class="nx">getCurrentScript</span><span class="p">();</span>
		<span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">current</span> <span class="o">&amp;&amp;</span> <span class="nx">current</span><span class="p">.</span><span class="nx">src</span><span class="p">;</span>

		<span class="nx">deps</span> <span class="o">=</span> <span class="nx">deps</span> <span class="o">||</span> <span class="p">[];</span>
		<span class="k">if</span> <span class="p">(</span><span class="nx">isString</span><span class="p">(</span><span class="nx">deps</span><span class="p">))</span> <span class="p">{</span>
			<span class="nx">deps</span> <span class="o">=</span> <span class="nx">deps</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">','</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="kd">var</span> <span class="nx">allDeps</span> <span class="o">=</span> <span class="nx">map</span><span class="p">(</span><span class="nx">deps</span><span class="p">,</span> <span class="nx">tran</span><span class="p">);</span>				<span class="c1">//全部转换映射</span>

		<span class="nx">getModules</span><span class="p">(</span><span class="nx">allDeps</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">mods</span><span class="p">)</span> <span class="p">{</span>
			<span class="kd">var</span> <span class="nx">ret</span> <span class="o">=</span> <span class="nx">isFunction</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span> <span class="p">?</span> <span class="nx">callback</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">undefined</span><span class="p">,</span> <span class="nx">mods</span><span class="o">||</span><span class="p">[])</span> <span class="p">:</span> <span class="nx">callback</span><span class="p">;</span>
			<span class="nx">modules</span> <span class="o">=</span> <span class="nx">modules</span> <span class="o">||</span> <span class="p">{}</span>
			<span class="nx">mix</span><span class="p">(</span><span class="nx">modules</span><span class="p">,</span> <span class="nx">ret</span><span class="p">);</span>

			<span class="nx">container</span> <span class="o">!=</span> <span class="nb">window</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nx">mix</span><span class="p">(</span><span class="nx">container</span><span class="p">,</span> <span class="nx">ret</span><span class="p">));</span>

			<span class="k">if</span> <span class="p">(</span><span class="nx">modulesCallbacks</span><span class="p">)</span> <span class="p">{</span>
				<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">modulesCallbacks</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
					<span class="nx">modulesCallbacks</span><span class="p">[</span><span class="nx">i</span><span class="p">](</span><span class="nx">ret</span><span class="p">);</span>
				<span class="p">}</span>
			<span class="p">}</span>
		<span class="p">});</span>

		<span class="k">return</span> <span class="nx">container</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="kd">function</span> <span class="nx">tran</span><span class="p">(</span><span class="nx">dep</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">key</span> <span class="k">in</span> <span class="nx">alias</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">dep</span> <span class="o">=</span> <span class="nx">dep</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s1">'^'</span> <span class="o">+</span> <span class="nx">key</span><span class="p">),</span> <span class="nx">alias</span><span class="p">[</span><span class="nx">key</span><span class="p">]);</span>		<span class="c1">//TODO</span>
		<span class="p">}</span>
		<span class="k">return</span> <span class="nx">dep</span> <span class="o">+</span> <span class="s1">'.js'</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="nx">define</span><span class="p">.</span><span class="nx">alias</span> <span class="o">=</span> <span class="nx">alias</span><span class="p">;</span>
	<span class="k">return</span> <span class="nx">define</span><span class="p">;</span>
<span class="p">})();</span>

</code></pre>
</div>

<p>测试用例</p>

<p>//上述代码保存为 http://localhost/loader/loader.js</p>

<pre><code class="language-htm">
&lt;!-- index.htm --&gt;
&lt;script src="loader.js"&gt;&lt;/script&gt;

&lt;script&gt;
define.alias['ok'] = 'http://localhost/loader/';
define(['ok/mod1', 'ok/mod2'], function(Mod1, Mod2) {
	console.log('execute index ', Mod1, Mod2);
});
&lt;/script&gt;

</code></pre>

<div class="highlighter-rouge"><pre class="highlight"><code>
<span class="c1">//   http://localhost/loader/mod1.js</span>
<span class="nx">require</span><span class="p">([</span><span class="s1">'ok/mod2'</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">Mod2</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'mod1 index '</span><span class="p">,</span> <span class="nx">Mod2</span><span class="p">);</span>

	<span class="k">return</span> <span class="p">{</span>
		<span class="na">mod1</span><span class="p">:</span> <span class="s1">'this is mod1'</span>
	<span class="p">}</span>
<span class="p">});</span>

</code></pre>
</div>

<div class="highlighter-rouge"><pre class="highlight"><code>
<span class="c1">//   http://localhost/loader/mod2.js</span>
<span class="nx">define</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'mod2 index '</span><span class="p">);</span>

	<span class="k">return</span> <span class="p">{</span>
		<span class="s1">'hello'</span> <span class="p">:</span> <span class="s1">'world'</span>
	<span class="p">}</span>
<span class="p">});</span>

</code></pre>
</div>

<p>补: 其它用法</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="c1">//mod3.js</span>
<span class="c1">//功能模块1</span>
<span class="nx">define</span><span class="p">({</span>
    <span class="na">sayHello</span> <span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
       <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">});</span>

<span class="c1">//功能模块2, 模块2没支持!!!</span>
<span class="nx">define</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">{</span>
        <span class="na">sayWorld</span> <span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
           <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'world'</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">});</span>



</code></pre>
</div>
<div class="highlighter-rouge"><pre class="highlight"><code>
App = {define : define, require: define};
App.define.alias['ok'] = 'http://lhj/loader';
App.define({
      showMsg : function(msg) {
          console.log(msg);
      }
});

App.define(function(Mod3) {
      return {
          say : function() {
				App.require('ok/Mod3', function(Mod3) {
	                  return Mod3.sayHello() + ' ' + '';//Mod3.sayWorld();
				});
          }
      }
});

App.showMsg(123);
App.say();

</code></pre>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[inline元素上支持的css属性]]></title>
    <link href="http://www.lianghaijun.com/2012-03-03-1439239.html"/>
    <updated>2012-03-03T22:39:00+08:00</updated>
    <id>http://www.lianghaijun.com/1439239</id>
    <content type="html"><![CDATA[<p>今天在测试时,意外发现inline元素是可以设置background与border的, 之前有所误解, 故对其它的css属性重新回顾了下</p>

<p>随手写了一个demo:</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="nt">&lt;h3&gt;</span>inline测试<span class="nt">&lt;/h3&gt;</span>
<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"width:110px"</span><span class="nt">&gt;</span><span class="ni">&amp;nbsp;</span>
<span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span> <span class="na">style=</span><span class="s">"
    background: #ccc;
    padding: 11px;
    margin-left: 80px;
    line-height: 70px;
    border: 1px solid blue;
"</span><span class="nt">&gt;</span>display<span class="nt">&lt;/a&gt;</span>

<span class="nt">&lt;i</span> <span class="na">href=</span><span class="s">"#"</span> <span class="na">style=</span><span class="s">"
    background: #ccc;
    padding: 11px;
    margin-left: 80px;
    line-height: 70px;
    border: 1px solid blue;
    min-width: 10px;
    min-height: 10px;
    overflow: hidden;
    max-width: 10px;
    max-height: 10px;.;
    resize: both;
"</span><span class="nt">&gt;</span>inline<span class="nt">&lt;/i&gt;</span>
<span class="nt">&lt;/div&gt;</span>

</code></pre>
</div>

<p>经测试
1. inline元素, 有效的: background, margin-left, margin-right, padding, border
2. inline元素, 无效的: width, height, margin-top, margin-bottom
3. 因width, height无效, 因此下列属性也无效: text-align, text-indent, min|max-width|height, overflow
4. 原文字相关的依然有效, 如word-spacing,  word-wrap,  white-space, letter-spacing
5. 下面两个有效, line-height, vertical-align, box-shadow
6. float,position及与之相关top,left, 不考虑, 已经不是inline了</p>

<p>其中 border, line-height, 这两个可以多多利用</p>

<p><em>思考:</em>
1. inline元素的宽高是不能定义, 即宽高度是由inline元素inline内容的元素决定的,(ie6,ie7下高度会受inline-block元素的影响)
2. 即宽高完全是自适应而得出的, 因此也不存在overflow的问题, min|max-width|height也没有影响
3. margin四个属性, left|right 与 top|bottom 有不同的待遇
4. margin-top, margin-bottom, 可以用line-height模拟, 但有很大不同, 与inline-block也不兼容,  另 margin:0 auto的居中效果, 也没有作用</p>

<p>*其次: *
1. div元素, 使用 display:inline 以上几条也成立
2. button元素, 使用display:inline, 样式没有变化, 等于于inline-block</p>

<p>*最后: *
mdn中说: 默认 inline-level 的元素 (inline + inline-block)</p>

<ul>
  <li>b, big, i, small, tt</li>
  <li>abbr, acronym, cite, code, dfn, em, kbd, strong, samp, var</li>
  <li>a, bdo, br, img, map, object, q, script, span, sub, sup</li>
  <li>button, input, label, select, textarea</li>
</ul>

<p>其中img, button, input, label, select, textarea 并没有以上的特征, 测试了一下, 设置inline与inline-block, 效果是一样的, 没有变化, 都等同于设置了inline-block</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用bat反编译jar包生成源码jar包]]></title>
    <link href="http://www.lianghaijun.com/2012-02-21-1416013.html"/>
    <updated>2012-02-21T22:27:00+08:00</updated>
    <id>http://www.lianghaijun.com/1416013</id>
    <content type="html"><![CDATA[<p>之前曾发表在 csdn(blog.csdn.net/seavers) 上, 不过, csdn的代码乱掉了, 今天重新整理了一下</p>

<p>反编译所使用的工具是jad.exe,笔者的测试版本是1.5.8e,压缩与解压缩使用的是WinRAR</p>

<p>jad.exe 可反编译一个class文件为java文件,笔者的BAT可通过此工具将一个jar包反编译成一个完整的源码jar包,同时生成的目录也可以在eclipse中使用</p>

<p>jad.exe 官方网站 ： http://www.kpdus.com/jad.html   (已失效, 从<a href="https://github.com/seavers/jad">这里</a>或者附件下载)</p>

<p>BAT脚本见后</p>

<p>安装方法如下:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>    复制粘贴后面的文本为一个BAT,然后与jad.exe放在同一个目录即可(WinRAR需正确安装)
</code></pre>
</div>

<p>使用方法如下:   (有3种使用方法, 使用其中任意一种均可,结果是相同的)</p>

<div class="highlighter-rouge"><pre class="highlight"><code> 1. 双击BAT,提示输入需反编译的jar包,请输入完整的jar路径
 2. 直接将 jar 包拖放在bat上
 3.右键点击jar包,选择打开方式,然后选择使用该BAT来执行
</code></pre>
</div>

<p>运行后的结果如下:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>  在jar包的同一目录下, 将会生成一个目录,一个jar,目录下有两个子目录,一个目录存放解压缩后的所有class,一个目录存放反编译后的java文件,jar包是用源码压缩生成的
</code></pre>
</div>

<p>几点说明:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>1. 工具中使用的WinRAR是自动识别安装路径的,请正确安装WinRAR
2. 工具使用的jad.exe,须与BAT放在同一目录,或者放在PATH可搜索到的位置
3.  jar包中非class文件,也会完整拷贝在源码目录下,方便生成源码工程
4. 生成的目录名与原 jar 包同名, 生成的源码 jar 包的文件名是在原名称中加入-src而生成, 如原 jar 包为 jdbc.jar, 则生成的目录名为 jdbc, 而生成的源码jar 包名则为 jdbc-src.jar
5. eclipse使用方法1, 将BAT生成的目录放在workspace中,然后创建同名工程
6. eclipse使用方法2,在 eclipse 中创建同名工程,使用src为源文件目录,bin为class文件目录,然后将BAT生成的目录拷贝在eclipse的workspace中 
</code></pre>
</div>

<p>该BAT为 blog.csdn.net/seavers 原创, BAT源码仅供个人学习,使用,研究,未经本人同意,不可用于商业用途</p>

<hr />

<p>我通常的使用方式是: 将 bat 与 jad.exe 解压在windows根目录, .jar右键用bat打开发后, 第二次及以后使用就方便多了</p>

<p>BAT更新了一下</p>

<p>BAT源码如下: (请直接拷贝在BAT文件中)</p>

<div class="highlighter-rouge"><pre class="highlight"><code>::功能:     利用bat反编译jar包生成源码jar包
::作者:     seavers
::博客:     http://seavers.iteye.com/
::版本:     1.7


::打开/关闭命令行显示
REM @echo OFF

::::::::::::::::::::::::::::解析并设置变量::::::::::::::::::


::查找jad文件的路径, 这里取的jad.exe, 表示从PATH中查找,如果想手工指定,需在这里修改
set JAD_PATH=jad.exe

::设置解压出的class文件存放的位置(相对路径)
set CLASS_PATH=bin

::设置反编译后的java文件存放的位置(相对路径)
set JAVA_PATH=src

::检查JAD文件是否存在bat所在目录下,
if exist "%~dp0jad.exe" set JAD_PATH=%~dp0jad.exe

::判断参数个数,如果没有文件参数,则报错,这里也可以使用%~f1,也可以用%1,没有关系,之后要去掉引号
if ""%1""=="""" (set /P JAR_PATH=请输入要反编译的JAR包的路径...) else (set JAR_PATH=%~f1)
if '%JAR_PATH:~0,1%%JAR_PATH:~0,1%'=='""' set JAR_PATH=%JAR_PATH:~1,-1%

::获取源代码存放的路径,这里取JAR包所在路径,然后去掉".jar"作为文件夹路径, 这里的LOCATION不能带引号,因为下面还要追加字符)
if ""%2""=="""" (set LOCATION=%JAR_PATH:~0,-4%) else (set LOCATION=%~f2)

::::::::::::::::::::开始执行程序:::::::::::::::::::::::::::::::

::获取WinRAR.exe的路径,设置在临时变量rarpath中
for /f "usebackq delims=" %%i in (`ftype WinRAR`) do set RARPATH=%%i

::对rarpath进行解析,去掉前面7个节符,去掉后面5个字符,得到WinRAR执行路径
::路径大致是这样的形式  Winrar="C:\Program Files\WinRAR\WinRAR.exe" "%1"
set RAREXE=%RARPATH:~7,-5%

::调用WinRAR命令,解压文件到指定目录的bin目录下
%RAREXE% x "%JAR_PATH%" "%LOCATION%\%CLASS_PATH%\"

::遍历整个bin目录,取所有class文件,调用jad.exe反编译出源码,非class的拷贝到src目录下
::打开变量延迟功能
setlocal EnableDelayedExpansion
for /r "%LOCATION%\bin" %%i in (*.*) do if '%%~xi'=='.class' ("%JAD_PATH%"  -o -r -sjava -ff -b -nonlb -space -t -8 -d"%LOCATION%\%JAVA_PATH%" "%%~si") else (set TEMP_PATH=%%i &amp; echo f|xcopy "%%i" "!TEMP_PATH:%LOCATION%\bin=%LOCATION%\src!")
endlocal EnableDelayedExpansion

::将产生的java文件压缩成源码文件
%RAREXE% a -ep1 -r "%LOCATION%-src.zip" "%LOCATION%\%JAVA_PATH%\*.*"


::::::::::::::::::程序结束, 显示运行结果::::::::::::::::::::::
echo *********************************************
echo 程序运行结束
echo 解析的JAR包的路径为 %JAR_PATH%
echo 解压缩工具WinRAR.exe的路径为 %RAREXE%
echo 反编译工具JAD.exe的路径为 %JAD_PATH%
echo 解析后的文件的根路径为 %LOCATION%
echo 解析后的class文件存放在 %LOCATION%\%CLASS_PATH%
echo 解析后的java文件存放在 %LOCATION%\%JAVA_PATH%
echo 压缩后的java文件存放在 %LOCATION%-src.zip
echo *********************************************
pause


</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sync.js]]></title>
    <link href="http://www.lianghaijun.com/2012-01-12-1343766.html"/>
    <updated>2012-01-12T21:11:00+08:00</updated>
    <id>http://www.lianghaijun.com/1343766</id>
    <content type="html"><![CDATA[<p>自己写了一个小工具, 做个备份</p>

<p>支持addTask任务, 每个任务将会同步执行</p>

<p>sync.js</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="cm">/*** 
 *   Sync 框架
 *
 *   支持 addTask,  addCirle,  addListener,  finish 等功能
 *
 */</span>
<span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>

	<span class="kd">var</span> <span class="nx">MAX_TOTAL</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">31</span><span class="p">);</span>

	<span class="kd">function</span> <span class="nx">Sync</span><span class="p">(</span><span class="nx">delay</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">delay</span> <span class="o">=</span> <span class="nx">delay</span><span class="p">;</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">queue</span> <span class="o">=</span> <span class="p">[];</span>			<span class="c1">//执行队列</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">listeners</span> <span class="o">=</span> <span class="p">[];</span>			<span class="c1">//listeners</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">timer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>				<span class="c1">//总的计数</span>
	<span class="p">}</span>

	<span class="nx">Sync</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setDelay</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">delay</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">delay</span> <span class="o">=</span> <span class="nx">delay</span><span class="p">;</span>
		<span class="k">return</span> <span class="k">this</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="nx">Sync</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addListener</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">func</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">listeners</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">func</span><span class="p">);</span>
		<span class="k">return</span> <span class="k">this</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="nx">Sync</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeListener</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">func</span><span class="p">)</span> <span class="p">{</span>
		<span class="kd">var</span> <span class="nx">pos</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">listeners</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">func</span><span class="p">)</span>
		<span class="k">if</span> <span class="p">(</span><span class="nx">pos</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">listeners</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">pos</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">return</span> <span class="k">this</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="nx">Sync</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addTask</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">func</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">addCircle</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nx">func</span><span class="p">,</span> <span class="nx">callback</span><span class="p">);</span>
		<span class="k">return</span> <span class="k">this</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="nx">Sync</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addParallelTask</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="cm">/** func1, func2, func3...  **/</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">addCircle</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
				<span class="kd">var</span> <span class="nx">func</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
				<span class="nx">func</span><span class="p">(</span><span class="nx">index</span><span class="p">);</span>
			<span class="p">}</span>
		<span class="p">});</span>
		<span class="k">return</span> <span class="k">this</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="nx">Sync</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addCircle</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">total</span><span class="p">,</span> <span class="nx">func</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="nx">total</span><span class="p">)</span> <span class="o">==</span> <span class="s1">'function'</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">func</span> <span class="o">=</span> <span class="nx">total</span><span class="p">;</span>
			<span class="nx">total</span> <span class="o">=</span> <span class="nx">MAX_TOTAL</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">queue</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
			<span class="na">func</span> <span class="p">:</span> <span class="nx">func</span><span class="p">,</span> 
			<span class="na">total</span> <span class="p">:</span> <span class="nx">total</span><span class="p">,</span>
			<span class="na">index</span> <span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
			<span class="na">callback</span> <span class="p">:</span> <span class="nx">callback</span>
		<span class="p">});</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">checkStart</span><span class="p">();</span>
		<span class="k">return</span> <span class="k">this</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="nx">Sync</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">checkStart</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">total</span><span class="p">,</span> <span class="nx">func</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timer</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">return</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="kd">var</span> <span class="nx">that</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">timer</span> <span class="o">=</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
			<span class="kd">var</span> <span class="nx">task</span> <span class="o">=</span> <span class="nx">that</span><span class="p">.</span><span class="nx">queue</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
			<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">task</span><span class="p">)</span> <span class="p">{</span>
				<span class="nx">that</span><span class="p">.</span><span class="nx">timer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
				<span class="k">return</span> <span class="p">;</span>
			<span class="p">}</span>
			<span class="kd">var</span> <span class="nx">ret</span> <span class="o">=</span> <span class="nx">that</span><span class="p">.</span><span class="nx">_execute</span><span class="p">(</span><span class="nx">task</span><span class="p">,</span> <span class="nx">task</span><span class="p">.</span><span class="nx">index</span><span class="p">);</span>
			<span class="k">if</span> <span class="p">(</span><span class="nx">ret</span> <span class="o">===</span> <span class="kc">true</span> <span class="o">||</span> <span class="o">++</span><span class="nx">task</span><span class="p">.</span><span class="nx">index</span> <span class="o">&gt;=</span> <span class="nx">task</span><span class="p">.</span><span class="nx">total</span><span class="p">)</span> <span class="p">{</span>
				<span class="nx">that</span><span class="p">.</span><span class="nx">queue</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span>
				<span class="nx">that</span><span class="p">.</span><span class="nx">_callback</span><span class="p">(</span><span class="nx">task</span><span class="p">);</span>
			<span class="p">}</span>
			<span class="nx">that</span><span class="p">.</span><span class="nx">timer</span> <span class="o">=</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span> <span class="nx">that</span><span class="p">.</span><span class="nx">delay</span><span class="p">);</span>			
		<span class="p">},</span> <span class="k">this</span><span class="p">.</span><span class="nx">delay</span><span class="p">);</span>
	<span class="p">}</span>

	<span class="nx">Sync</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_execute</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">task</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
		<span class="kd">var</span> <span class="nx">ret</span> <span class="o">=</span> <span class="nx">task</span><span class="p">.</span><span class="nx">func</span><span class="p">(</span><span class="nx">index</span><span class="p">);</span>
		<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">listeners</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">listeners</span><span class="p">[</span><span class="nx">i</span><span class="p">](</span><span class="k">this</span><span class="p">.</span><span class="nx">count</span><span class="o">++</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="nx">Sync</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_callback</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">task</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">task</span><span class="p">.</span><span class="nx">callback</span> <span class="o">&amp;&amp;</span> <span class="nx">task</span><span class="p">.</span><span class="nx">callback</span><span class="p">(</span><span class="nx">index</span><span class="p">);</span>
	<span class="p">}</span>

	<span class="nx">Sync</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">finish</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">bool</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timer</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timer</span><span class="p">);</span>
			<span class="k">this</span><span class="p">.</span><span class="nx">timer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">if</span> <span class="p">(</span><span class="nx">bool</span> <span class="o">===</span> <span class="kc">undefined</span> <span class="o">||</span> <span class="nx">bool</span> <span class="o">===</span> <span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">queue</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
				<span class="kd">var</span> <span class="nx">task</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">queue</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
				<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span> <span class="o">=</span> <span class="nx">task</span><span class="p">.</span><span class="nx">index</span><span class="p">;</span> <span class="nx">j</span> <span class="o">&lt;</span> <span class="nx">task</span><span class="p">.</span><span class="nx">total</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
					<span class="kd">var</span> <span class="nx">ret</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">_execute</span><span class="p">(</span><span class="nx">task</span><span class="p">,</span> <span class="nx">j</span><span class="p">);</span>
					<span class="k">if</span> <span class="p">(</span><span class="nx">ret</span> <span class="o">===</span> <span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
						<span class="k">break</span><span class="p">;</span>
					<span class="p">}</span>
				<span class="p">}</span>
				
			<span class="p">}</span>
		<span class="p">}</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">queue</span> <span class="o">=</span> <span class="p">[];</span>
	<span class="p">}</span>


	<span class="nb">window</span><span class="p">.</span><span class="nx">Sync</span> <span class="o">=</span> <span class="nx">Sync</span><span class="p">;</span>


<span class="p">})();</span>
</code></pre>
</div>

<p>index.htm:</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"sync.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script&gt;</span>

	<span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Sync</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
	<span class="nx">a</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'notify .'</span> <span class="o">+</span> <span class="nx">n</span><span class="p">)});</span>
	<span class="nx">a</span><span class="p">.</span><span class="nx">addCircle</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'execute 2 -- '</span> <span class="o">+</span> <span class="nx">n</span><span class="p">)});</span>
	<span class="nx">a</span><span class="p">.</span><span class="nx">addCircle</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'execute 4 -- '</span> <span class="o">+</span> <span class="nx">n</span><span class="p">)});</span>
	<span class="nx">a</span><span class="p">.</span><span class="nx">addCircle</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'execute 8 -- '</span> <span class="o">+</span> <span class="nx">n</span><span class="p">)});</span>
	<span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
		<span class="nx">a</span><span class="p">.</span><span class="nx">addCircle</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'execute n -- '</span> <span class="o">+</span> <span class="nx">n</span><span class="p">)});</span>
		<span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
			<span class="nx">a</span><span class="p">.</span><span class="nx">finish</span><span class="p">();</span>
		<span class="p">},</span> <span class="mi">3000</span><span class="p">);</span>
	<span class="p">},</span> <span class="mi">3000</span><span class="p">);</span>

<span class="nt">&lt;/script&gt;</span>



</code></pre>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[with语句的本质]]></title>
    <link href="http://www.lianghaijun.com/2011-10-01-1184400.html"/>
    <updated>2011-10-01T23:41:00+08:00</updated>
    <id>http://www.lianghaijun.com/1184400</id>
    <content type="html"><![CDATA[<p>通过测试及debug后, 得出结论, 仅代表个人意见:</p>

<p>with的本质, 就是构造一个作用域, 将with的对象的所有key, 声明为局部变量</p>

<div class="highlighter-rouge"><pre class="highlight"><code>
var inner = '123';
var outer = {inner : 'hello world', another: 'hello with'};
window.obj = {outer: outer};

with(outer) {
	alert(inner);
	alert(another);
	alert(outer.inner);
	alert(window.obj.outer.inner);
	show();
}


function show() {
	alert(inner);

}
</code></pre>
</div>

<p>等同于以下代码</p>

<div class="highlighter-rouge"><pre class="highlight"><code>
var inner = '123';
var outer = {inner : 'hello world', another: 'hello with'};
window.obj = {outer: outer};

(function(inner, another) {
	alert(inner);
	alert(another);
	alert(outer.inner);
	alert(window.obj.outer.inner);
	show();
})(outer.inner, outer.another);


function show() {
	alert(inner);

}

</code></pre>
</div>

<p>再看看下面这个常见的问题, 一目了然</p>

<div class="highlighter-rouge"><pre class="highlight"><code>var root = { 
    branch: { 
        node: 1 
    } 
}; 

with(root.branch) { 
    root.branch = { 
        node: 0 
    }; 
    // 显示 1, 错误! 
    alert(node); 
} 
// 显示 0, 正确! 
alert(root.branch.node); 
</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[display, position, float 之间的关系]]></title>
    <link href="http://www.lianghaijun.com/2011-09-17-1174269.html"/>
    <updated>2011-09-17T22:52:00+08:00</updated>
    <id>http://www.lianghaijun.com/1174269</id>
    <content type="html"><![CDATA[<p>从 css2.1 规范中翻译而来
出处见: http://www.w3.org/TR/CSS21/visuren.html#dis-pos-flo</p>

<p>Ps: 原文中的box未翻译, 可理解为盒模型, 或盒子</p>

<p>影响 产生box及布局的三个属性 - display, position, float 之间的关系如下:</p>

<ul>
  <li>如果 display 的值为none, 则忽略position与float, 这种情况下, 元素不产生box</li>
  <li>如果 position 的值为 absolute 或者 fixed, 则box绝对定位, float的值设定为 none , display 的值按照下面的表格来设定. box 的定位将决定于 top, right, bottom, left 属性及box的容器</li>
  <li>如果 float 的值不是 none, 则 box 是浮动的且 display 按照下面的表格来设定</li>
  <li>如果元素是根元素, display 按下面的表格来设定, 有一个例外: 当指定的值为list-item时,将变成计算后的 block 还是 list-item, 这点没有在CSS2.1中定义   (这句话不会翻译了)</li>
  <li>剩余的 display 按照指定的方式来显示</li>
</ul>

<p>[table]
|specified value| computed value |
|inline-table   | table          |
|inline, table-row-group, table-column, table-column-group, table-header-group, table-footer-group, table-row, table-cell, table-caption, inline-block| block |
|others|same as specified |
[/table]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[手机游戏 cat physics 分数记录]]></title>
    <link href="http://www.lianghaijun.com/2011-06-23-1982081.html"/>
    <updated>2011-06-23T19:48:00+08:00</updated>
    <id>http://www.lianghaijun.com/1982081</id>
    <content type="html"><![CDATA[<div class="iteye-blog-content-contain" style="font-size: 14px;">
<p> </p>
<p>记录一下分数</p>
<p> </p>
<p> </p>
<p> </p>
<table border="0"><tbody>
<tr>
<td>关数</td>
<td>我的分数</td>
<td>二星分数</td>
<td>三星分数</td>
<td>几星</td>
</tr>
<tr>
<td>1</td>
<td>752</td>
<td>750</td>
<td>750</td>
<td>3</td>
</tr>
<tr>
<td>2</td>
<td>690</td>
<td>600</td>
<td>690</td>
<td>3</td>
</tr>
<tr>
<td>3</td>
<td>496</td>
<td>490</td>
<td>500</td>
<td>2</td>
</tr>
<tr>
<td>4</td>
<td>508</td>
<td>500</td>
<td>520</td>
<td>2</td>
</tr>
<tr>
<td>5</td>
<td>604</td>
<td>590</td>
<td>600</td>
<td>3</td>
</tr>
<tr>
<td>6</td>
<td>581</td>
<td>550</td>
<td>570</td>
<td>3</td>
</tr>
<tr>
<td>7</td>
<td>614</td>
<td>450</td>
<td>570</td>
<td>3</td>
</tr>
<tr>
<td>8</td>
<td>671</td>
<td>660</td>
<td>670</td>
<td>3</td>
</tr>
<tr>
<td>9</td>
<td>574</td>
<td>540</td>
<td>570</td>
<td>3</td>
</tr>
<tr>
<td>10</td>
<td>801</td>
<td>750</td>
<td>800</td>
<td>3</td>
</tr>
<tr>
<td>11</td>
<td>573</td>
<td>560</td>
<td>600</td>
<td>2</td>
</tr>
<tr>
<td>12</td>
<td>458</td>
<td>440</td>
<td>500</td>
<td>2</td>
</tr>
<tr>
<td>13</td>
<td>464</td>
<td>500</td>
<td>515</td>
<td>1</td>
</tr>
<tr>
<td>14</td>
<td>511</td>
<td>530</td>
<td>610</td>
<td>1</td>
</tr>
<tr>
<td>15</td>
<td>673</td>
<td>650</td>
<td>690</td>
<td>2</td>
</tr>
<tr>
<td>16</td>
<td>738</td>
<td>700</td>
<td>730</td>
<td>3</td>
</tr>
<tr>
<td>17</td>
<td>542</td>
<td>500</td>
<td>560</td>
<td>2</td>
</tr>
<tr>
<td>18</td>
<td>611</td>
<td>550</td>
<td>630</td>
<td>2</td>
</tr>
<tr>
<td>19</td>
<td>734</td>
<td>690</td>
<td>730</td>
<td>3</td>
</tr>
<tr>
<td>20</td>
<td>711</td>
<td>650</td>
<td>710</td>
<td>3</td>
</tr>
<tr>
<td>21</td>
<td>483</td>
<td>320</td>
<td>500</td>
<td>2</td>
</tr>
<tr>
<td>22</td>
<td>372</td>
<td>310</td>
<td>350</td>
<td>3</td>
</tr>
<tr>
<td>23</td>
<td>464</td>
<td>450</td>
<td>540</td>
<td>2</td>
</tr>
<tr>
<td>24</td>
<td>621</td>
<td>450</td>
<td>610</td>
<td>3</td>
</tr>
<tr>
<td>25</td>
<td>603</td>
<td>570</td>
<td>600</td>
<td>3</td>
</tr>
<tr>
<td>26</td>
<td>659</td>
<td>600</td>
<td>640</td>
<td>3</td>
</tr>
<tr>
<td>28</td>
<td>417</td>
<td>335</td>
<td>450</td>
<td>2</td>
</tr>
<tr>
<td>29</td>
<td>507</td>
<td>450</td>
<td>520</td>
<td>2</td>
</tr>
<tr>
<td>30</td>
<td>491</td>
<td>460</td>
<td>470</td>
<td>3</td>
</tr>
<tr>
<td>31</td>
<td>473</td>
<td>420</td>
<td>470</td>
<td>3</td>
</tr>
<tr>
<td>32</td>
<td>539</td>
<td>510</td>
<td>540</td>
<td>2</td>
</tr>
<tr>
<td>33</td>
<td>601</td>
<td>590</td>
<td>600</td>
<td>3</td>
</tr>
<tr>
<td>34</td>
<td>355</td>
<td>320</td>
<td>340</td>
<td>3</td>
</tr>
<tr>
<td>35</td>
<td>484</td>
<td>450</td>
<td>465</td>
<td>3</td>
</tr>
<tr>
<td>36</td>
<td>488</td>
<td>350</td>
<td>450</td>
<td>3</td>
</tr>
<tr>
<td>37</td>
<td>589</td>
<td>500</td>
<td>580</td>
<td>3</td>
</tr>
<tr>
<td>38</td>
<td>700</td>
<td>450</td>
<td>700</td>
<td>3</td>
</tr>
<tr>
<td>39</td>
<td>424</td>
<td>150</td>
<td>250</td>
<td>3</td>
</tr>
<tr>
<td>40</td>
<td>698</td>
<td>670</td>
<td>680</td>
<td>3</td>
</tr>
<tr>
<td>41</td>
<td>421</td>
<td>350</td>
<td>420</td>
<td>3</td>
</tr>
<tr>
<td>42</td>
<td>546</td>
<td>450</td>
<td>540</td>
<td>3</td>
</tr>
<tr>
<td>43</td>
<td>525</td>
<td>500</td>
<td>520</td>
<td>3</td>
</tr>
<tr>
<td>44</td>
<td>496</td>
<td>350</td>
<td>450</td>
<td>3</td>
</tr>
<tr>
<td>45</td>
<td>559</td>
<td>550</td>
<td>600</td>
<td>2</td>
</tr>
<tr>
<td>46</td>
<td>512</td>
<td>500</td>
<td>675</td>
<td>2</td>
</tr>
<tr>
<td>47</td>
<td>566</td>
<td>550</td>
<td>600</td>
<td>2</td>
</tr>
<tr>
<td>48</td>
<td>505</td>
<td>500</td>
<td>505</td>
<td>3</td>
</tr>
<tr>
<td>49</td>
<td>452</td>
<td>450</td>
<td>490</td>
<td>2</td>
</tr>
<tr>
<td>50</td>
<td>498</td>
<td>400</td>
<td>460</td>
<td>3</td>
</tr>
<tr>
<td>51</td>
<td>472</td>
<td>520</td>
<td>465</td>
<td>1</td>
</tr>
<tr>
<td>52</td>
<td>610</td>
<td>630</td>
<td>642</td>
<td>1</td>
</tr>
<tr>
<td>53</td>
<td>745</td>
<td>650</td>
<td>745</td>
<td>3</td>
</tr>
<tr>
<td>54</td>
<td>608</td>
<td>580</td>
<td>610</td>
<td>2</td>
</tr>
<tr>
<td>55</td>
<td>410</td>
<td>360</td>
<td>400</td>
<td>3</td>
</tr>
<tr>
<td>56</td>
<td>744</td>
<td>680</td>
<td>750</td>
<td>2</td>
</tr>
<tr>
<td>57</td>
<td>564</td>
<td>400</td>
<td>500</td>
<td>3</td>
</tr>
<tr>
<td>58</td>
<td>562</td>
<td>50</td>
<td>555</td>
<td>3</td>
</tr>
<tr>
<td>59</td>
<td>306</td>
<td>320</td>
<td>330</td>
<td>1</td>
</tr>
<tr>
<td>60</td>
<td>648</td>
<td>570</td>
<td>660</td>
<td>2</td>
</tr>
<tr>
<td>61</td>
<td>473</td>
<td>400</td>
<td>520</td>
<td>2</td>
</tr>
<tr>
<td>62</td>
<td>681</td>
<td>640</td>
<td>680</td>
<td>3</td>
</tr>
<tr>
<td>63</td>
<td>647</td>
<td>580</td>
<td>640</td>
<td>3</td>
</tr>
<tr>
<td>64</td>
<td>647</td>
<td>600</td>
<td>645</td>
<td>3</td>
</tr>
<tr>
<td>65</td>
<td>763</td>
<td>590</td>
<td>780</td>
<td>2</td>
</tr>
<tr>
<td>66</td>
<td>410</td>
<td>540</td>
<td>545</td>
<td>1</td>
</tr>
<tr>
<td>67</td>
<td>581</td>
<td>530</td>
<td>575</td>
<td>3</td>
</tr>
<tr>
<td>68</td>
<td>702</td>
<td>700</td>
<td>780</td>
<td>2</td>
</tr>
<tr>
<td>69</td>
<td>577</td>
<td>390</td>
<td>425</td>
<td>3</td>
</tr>
<tr>
<td>70</td>
<td>722</td>
<td>650</td>
<td>730</td>
<td>2</td>
</tr>
<tr>
<td>71</td>
<td>526</td>
<td>481</td>
<td>513</td>
<td>3</td>
</tr>
<tr>
<td>72</td>
<td>602</td>
<td>580</td>
<td>604</td>
<td>2</td>
</tr>
<tr>
<td>73</td>
<td>681</td>
<td>585</td>
<td>619</td>
<td>3</td>
</tr>
<tr>
<td>74</td>
<td>571</td>
<td>520</td>
<td>561</td>
<td>3</td>
</tr>
<tr>
<td>75</td>
<td>749</td>
<td>690</td>
<td>730</td>
<td>3</td>
</tr>
<tr>
<td>76</td>
<td>732</td>
<td>627</td>
<td>690</td>
<td>3</td>
</tr>
<tr>
<td>77</td>
<td>638</td>
<td>540</td>
<td>600</td>
<td>3</td>
</tr>
<tr>
<td>78</td>
<td>591</td>
<td>540</td>
<td>580</td>
<td>3</td>
</tr>
<tr>
<td>79</td>
<td>566</td>
<td>520</td>
<td>565</td>
<td>3</td>
</tr>
<tr>
<td>80</td>
<td>610</td>
<td>500</td>
<td>595</td>
<td>3</td>
</tr>
<tr>
<td>81</td>
<td>596</td>
<td>550</td>
<td>580</td>
<td>3</td>
</tr>
<tr>
<td>82</td>
<td>407</td>
<td>400</td>
<td>470</td>
<td>2</td>
</tr>
<tr>
<td>83</td>
<td>538</td>
<td>525</td>
<td>550</td>
<td>2</td>
</tr>
<tr>
<td>84</td>
<td>600</td>
<td>530</td>
<td>565</td>
<td>3</td>
</tr>
<tr>
<td>85</td>
<td>534</td>
<td>600</td>
<td>630</td>
<td>1</td>
</tr>
<tr>
<td>86</td>
<td>379</td>
<td>300</td>
<td>320</td>
<td>3</td>
</tr>
<tr>
<td>87</td>
<td>530</td>
<td>500</td>
<td>530</td>
<td>3</td>
</tr>
<tr>
<td>88</td>
<td>652</td>
<td>600</td>
<td>650</td>
<td>3</td>
</tr>
<tr>
<td>89</td>
<td>607</td>
<td>595</td>
<td>605</td>
<td>3</td>
</tr>
<tr>
<td>90</td>
<td>632</td>
<td>610</td>
<td>630</td>
<td>3</td>
</tr>
</tbody></table>
<p> </p>
<p> </p>
<p> </p>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[javascript模拟html5新增特性 - placeholder属性]]></title>
    <link href="http://www.lianghaijun.com/2011-06-12-1078292.html"/>
    <updated>2011-06-12T00:11:00+08:00</updated>
    <id>http://www.lianghaijun.com/1078292</id>
    <content type="html"><![CDATA[<p>placeholder属性是html5的新增属性,当输入框为空时, 可以提示一些信息, 非常不错的功能</p>

<ol>
  <li>
    <p>placeholder支持情况:
  a) 已经支持: ie 9+  firefox 4.0+  chrome等
  b) 需要模拟 :  ie6 ie7 ie8 firefox3.6</p>
  </li>
  <li>
    <p>placeholder
  a) 内容为空时, 内容显示为placeholder内容, 样式为color:#999 , 且垂直居中显示
  b) 内容不为空, 无特殊变化, 原有placeholder样式, 需清除</p>
  </li>
  <li>
    <p>模拟placeholder, 要求满足( 只考虑 input)
  a) 当页面显示后, 如果数据为空, 则显示为placeholder状态
  b) 当点击input后, 清除placeholder,样式恢复文本样式
  c) 当input离开焦点后, 根据内容来显示placeholder状态
  d) 当placeholder状态时,刷新页面后, 也应该是placeholder状态
  e) 当有js执行脚本后, 且变更input值后, 重置placeholder状态
  f) 当表单reset后, 也需要重置placeholder状态
  g) 当表单提交后, 当为placeholder状态时,提交的参数应该为空</p>
  </li>
  <li>
    <p>注意点
  a) firefox 3.6 ,需考虑 3.d)点, 需监停 window.onunload
  b) ie下, 第3.e)点,需监控 onpropertychange事件,比较复杂
  c) firefox , 需监控 oninput 事件, 也比较复杂
  d) form.reset事件, onreset是在修改input值前调用的, 也比较难重置状态</p>
  </li>
  <li>判断浏览器是否原生支持placeholder :  “placeholder” in document.createElement(“input”)</li>
  <li>简单实现, 可以监停focus/blur(focusin/focusout), submit/unload事件</li>
  <li>本文发表在http://seavers.iteye.com/ 本文未经同意,谢绝转载</li>
</ol>

<p>例:</p>

<p>KISSY 实现:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>input.placeholder {color:#999}
</code></pre>
</div>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;script src="http://a.tbcdn.cn/s/kissy/1.1.6/kissy-min.js"&gt;&lt;/script&gt;
&lt;script&gt;
//本代码发布在 http://seavers.iteye.com/ , 未经同意,谢绝转载
//模拟了placeholder 80%的功能
(function() {
	var S=KISSY, Dom = S.DOM, Event = S.Event;

	S.namespace("HTML5");
	S.HTML5.placeholder = {
		support  : "placeholder" in document.createElement("input"), 
		activate : (function() {
			function _showPlaceholder(el, className, value) {
				if (!Dom.hasClass(el, className) &amp;&amp; !el.value) {
					el.value = value;
					Dom.addClass(el, className);
				}
			}
			
			function _hidePlaceholder(el, className, value) {
				if (Dom.hasClass(el, className)) {
					el.value = value;
					Dom.removeClass(el, className);
				}
			}
			
			function _activatePlaceholder(selector) {
				var ATTR = "placeholder", CLASS = "placeholder";
				
				S.each(S.query(selector), function(el){
					var TIP = el.getAttribute(ATTR);
					if (!TIP) return ;
					
					Event.on(el.form, 'submit', function(ev) {
						_hidePlaceholder(el, CLASS, "");
					});
					Event.on(window, 'unload', function(ev) {	//解决firefox3.6刷新问题
						_hidePlaceholder(el, CLASS, "");
					});
					Event.on(el, 'focusin', function(ev){
						_hidePlaceholder(el, CLASS, "");
					});
					Event.on(el, 'focusout', function(ev){
						_showPlaceholder(el, CLASS, TIP);
					});
					_showPlaceholder(el, CLASS, TIP);
				});
			}
			
			return _activatePlaceholder;
		})()
	};
	
	//如果有原生的placeholder，使用原生，否则使用模拟的
	if (!S.HTML5.placeholder.support) {
		S.HTML5.placeholder.activate('INPUT');
	}
})();

&lt;/script&gt;
</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[version compare]]></title>
    <link href="http://www.lianghaijun.com/2011-02-11-904122.html"/>
    <updated>2011-02-11T21:34:00+08:00</updated>
    <id>http://www.lianghaijun.com/904122</id>
    <content type="html"><![CDATA[<p>[img]http://dl.iteye.com/upload/attachment/412672/dda5fd96-afce-3f8c-bdf3-bf20b8228fe7.jpg[/img]</p>

<p>Apache log4j™ 1.3 development has been abandoned and no future releases or development is anticipated. Users of Apache log4j 1.3 are encouraged to migrate to Apache log4j 1.2 or to monitor and contribute to the Apache log4j 2.0 development effort. The companions for Apache log4j 1.2 provide many of the features that were developed during the Apache log4j 1.3 development effort.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php 学习笔记 (1)]]></title>
    <link href="http://www.lianghaijun.com/2011-02-10-903168.html"/>
    <updated>2011-02-10T22:02:00+08:00</updated>
    <id>http://www.lianghaijun.com/903168</id>
    <content type="html"><![CDATA[<p>与java.String对比
[table]
||id|java.String|php.String|
||0| equals | strcmp |
||1| substring(start,end)| substr(string,start,length) |
||2| indexOf(str, fromIndex)|  strpos stripos  ,  strstr  stristr  strrpos|
||3| concat(str) (+)| (.)|
||4| startsWith ||
||5| endsWith ||
||6| getBytes | |
||7| matches | |
||8| replace | str_replace(find, replace, str, count)  ,  str_ireplace|
||9| replaceAll ||
||10| split | |
||11| toLowerCase | strtolower() |
||12| toUpperCase | strtoupper()|
||13| trim() | trim()  ltrim()  rtrim()|
||14| length | strlen |
||15|  | md5|
||16| format|fprintf|
[/table]</p>

<p>php    join  md5</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux进阶命令]]></title>
    <link href="http://www.lianghaijun.com/2011-01-05-860004.html"/>
    <updated>2011-01-05T20:11:00+08:00</updated>
    <id>http://www.lianghaijun.com/860004</id>
    <content type="html"><![CDATA[<p>linux版本：uname -ar
cpu信息：  cat /proc/cpuinfo
mem信息：  cat /proc/meminfo</p>

<p>apache日志，过滤IP,并按照IP的次数倒排序
cat 2011-01-05-access.log | awk ‘{print $1}’ | sort | uniq -c | sort -k1,1nr</p>

<p>同理，有于 url, referer, status.code</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SimpleDateFormat 不是线程安全的``]]></title>
    <link href="http://www.lianghaijun.com/2010-11-21-819050.html"/>
    <updated>2010-11-21T19:53:00+08:00</updated>
    <id>http://www.lianghaijun.com/819050</id>
    <content type="html"><![CDATA[<p>原来SimpleDateFormat不是线程安全的``</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一道智力题]]></title>
    <link href="http://www.lianghaijun.com/2010-06-20-1982082.html"/>
    <updated>2010-06-20T21:47:00+08:00</updated>
    <id>http://www.lianghaijun.com/1982082</id>
    <content type="html"><![CDATA[<div class="iteye-blog-content-contain" style="font-size: 14px;">
<p>请回答以下问题: <br />　　　　1、第一个答案是b的问题是哪一个？<br />　　　　（a）2；（b） 3；（c）4；（d）5；（e）6 <br />　　　　2、唯一的连续两个具有相同答案的问题是： <br />　　　　（a）2，3；（b）3，4；（c）4，5；（d）5，6；（e）6，7； <br />　　　　3、本问题答案和哪一个问题的答案相同？ <br />　　　　（a）1；（b）2；（c）4；（d）7；（e）6<br />　　　　4、答案是a的问题的个数是： <br />　　　　（a）0；（b）1；（c）2；（d）3；（e）4 <br />　　　　5、本问题答案和哪一个问题的答案相同？ <br />　　　　（a）10；（b）9；（c）8；（d）7；（e）6 <br />　　　　6、答案是a的问题的个数和答案是什么的问题的个数相同？ <br />　　　　（a）b；（b）c；（c）d；（d）e；（e）以上都不是 <br />　　　　7、按照字母顺序，本问题的答案和下一个问题的答案相差几个字母？ <br />　　　　（a）4；（b）3；（c）2；（d）1；（e）0。（注：a和b相差一个字母） <br />　　　　8、答案是元音字母的问题的个数是： <br />　　　　（a）2；（b）3；（c）4；（d）5；（e）6。（注：a和e是元音字母） <br />　　　　9、答案是辅音字母的问题的个数是： <br />　　　　（a）一个质数；（b）一个阶乘数；（c）一个平方数；（d）一个立方数，（e）5的倍数 <br />　　　　10、本问题的答案是： <br />　　　　（a）a；（b）b；（c）c；（d）d；（e）e</p>
<p> </p>
<p> </p>
<p>我的答案:</p>
<p> </p>
<p>1. 第1题不能是b, 否则自相矛盾<br />2. 第2题不能是a, 否则123题矛盾<br />2.1 1为c,2不能为abc, 1为d,2不能为abcd,1为e,2不能为abde<br />3. 第3题不能是a, 因为第四题不可能是a<br />4. 第3题不能是b, 否则234题都是b则与第二题矛盾<br />4.1 1为e, 3不能是abe, 6为b,则3,5不能为e<br />5. 第4题不能是a, 否则自相矛盾<br />5.1 1234为 abcc abdd abee,cdeb cedb dedcbddxb dedebddxb ecdccbdcx<br />5.2 根据上面来判断,a的个数, 1题为d或e都不可能, 第1题只能是ac<br />5.3 如1234为cdeb cedb时, cdebee cedbxdd -&gt; cdebee cedbaddxxa cedbcddcxx<br />6. 第7题不能是e, 否则与第2题矛盾<br />7. 第7,8题,可能的结果是 Xe, ca, dc 三种可能, 即第8题为ace, 即元音个数为246三种可能, 那么辅音则为864三种可能<br />8. 第9题的结果为 a) 235 b) 126 c) 149 d) 18 e) 5 10 即结果为bcd 即648三种可能<br />9. 即第789三题可能为 aec bec cad cec dcb dec<br />10. 即第5789 四题可能为 axxx bdcb cdcb ddcb ddec exxx<br />10.1 如1234为cdeb,cedb时, cdebeedcba cedbaddcba cedbaddeca cedbcddcadx cedbcddceca<br />10.2 上面的,成立的有 cdebeedcba<br />11. 当第1题是a时, 第2题是b<br />a) 第1234题为 abcc时, 第5题为a,与4矛盾, 5789为bdcb,cdcb ddcb时,已经7个辅音,与9矛盾, 当5为e时,与2矛盾<br />b) 第1234题为 abdd时, 789题为dcb dec, 5610为 aca 即abddacdcba不成立<br />c) 第1234题为 abee时, 第6题为e, 第8题为e, 3个a,4个e,与8题矛盾</p>
<p>综上所述, 只有一种情况成立 cdebeedcba</p>
<p><br />其它方析(曾经使用过的分析)<br />11. 第8题不能为a, 否则第5题abcde都不可能, 即789为xec,dcb, 且5789 axxx xdcb ddec exxx<br />12. 第8题只能是ce<br />13. 第9题只能是bc<br />14. 如果第8题为e, 有两种1个a+5个e或2个a+4个e<br />a) 第6个必须为e,否则只有1210可以为e,不够4个<br />b) 1xa+5xe 4b6e8e, 1c, 3510e 2d7a cdebeeaece与6矛盾<br />c) 2xa+4xe 4c6e8e, 1为a时, 510必须为e abcceeaece与2矛盾 1不a, 只能为d, 5为b,310只能e,只有7为a,与4矛盾<br />d) 因此第8题不能为e,只能为c<br />15. 第89只能为cb, 7只能为d,10不能为b<br />16. 第2,3不为e时, 15610必须为a或e, 1为a则</p>
<p>15. 当第1题不为a时, 123都不可能为ab, 只有56710四题可能为a<br />a) 当56710为a时, 123都不可能为ab, 与6矛盾, 即4不能为e<br />b) 当5610或者6710时,题为a时, 1238都不可能为b, 79不能同时为b, 矛盾, 所以6不能为a<br />c) 当5710为a时, 45678910为daxaeca, 第2题cde都不可选择, 矛盾<br />d) 所以只能有1个a或者2个a<br />e) 当4选择b时, 1234为cdeb,cedb, 5只能为e<br />e1) 1234为cdeb, 5为e, 6为e, 78910为dcba即 cdebeedcba 成立<br />e2) 1234为cedb, 5为e, 6为d, 6,8矛盾<br />f) 当4选择c时, 1只能为de, 1234都不能为ab, 3不能c 8不能为ab, 56710可能为ab,9可能为b<br />f1) 123为 dcd dce ded时 4c5b 只能是dedcbddcb<br />f2) 123为 ecd ece ede时</p>
<p>f1) 当5为a时,10为a, 67不能为a, <br />f2) 当5不为a时,<br />f3) 当6为a时, 1234为</p>
<p>f1) 当1为d, 59为b, 则dxxcbxdcbx,则只有10为a,与4矛盾<br />f2) 当1为e, ecxccb edxcbb</p>
<p><br />8. 如果第1题选d, 第234不能为b,则59为b,则dxxxbxdcbx,即只能有第10题可能为a,而第4题不能选ab,矛盾, 即第1题不可能为d</p>
<p>15. 当第1题为c时, 那么5不能为a, 否则与4矛盾, 5不能为d, 否则5与7矛盾<br />a) 第12题为cd时, 4为b, 5不能为a, 456789为bbdcb ccdcb eexxx,</p>
<p> </p>
<p><br />1 a c d e<br />2 b c d e<br />3 c d e<br />4 b c <br />5 a b c d e<br />6 a b c d e<br />7 d<br />8 c <br />9 b<br />10 a c d e</p>
<p>9. 即第35789 五题可能为 cxxxx,</p>
<p>9. 如果第1题为e, 第2345不能为b,则6为b</p>
<p><br />cxxbdxxxbxdcbx dcxbbxdcb dexxbddcb deccbddcbx dedxbddcbxexxxxb<br />1 567 10 15610 15710 16710abcd ce bc</p>
<p>ae=13 22 15 24<br />15 4b8e6+1210 6e 4b6e8e35101a|7aaxebeexexecdebeeaece<br />24 4c8e6+12106b7b 4c6e8e3510 1a7a510axdxceeabxceeaecedxecbeaeca<br />1 2 8 10</p>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[无状态缓冲带来的可伸缩性]]></title>
    <link href="http://www.lianghaijun.com/2010-06-19-694660.html"/>
    <updated>2010-06-19T17:13:00+08:00</updated>
    <id>http://www.lianghaijun.com/694660</id>
    <content type="html"><![CDATA[<p>假设性思考~~~~</p>

<p>如果企业级开发中, 系统这样设计, 能否满足各类系统需求</p>

<p>——–  第一阶段限制</p>

<ol>
  <li>系统中所有的对象只有以下两种情况
  a) 常量bean, 常量,不会改变的数据,固定配置,固定参数
  a) 数据bean, 拥有getter,setter方法的纯javabean对象,均可持久化,如POJO,DTO
  b) 服务bean, 即bean组件, spring管理下的bean组件,如DAO,MO,AO,SO
        i.   对象的成员变量只能是bean组件
        ii.  空参构造函数, 无需初使化
        iii. 对象的方法的参数和返回类型必须为ID数据或数据bean</li>
  <li>数据bean均需持久化管理,或者持久化到数据库服务器,或者持久化到缓冲服务器. 方法退出后,此bean中不可以保持任何引用.</li>
  <li>数据bean的获取只能来源于
  a) HTTP请求参数
  b) 缓冲服务器
  c) 数据库服务器
  d) 其它的外部服务</li>
  <li>数据bean不能来源于当前服务器的内存缓冲或者全局变量或者本地硬盘</li>
  <li>数据bean在每台服务器获取后,都应该是一致的,不存在不同步的情况</li>
  <li>数据bean是无状态的,与服务器无关,因此bean是一致的</li>
  <li>数据bean的一致性由缓冲服务器,数据库服务器,或其它外部服务来保证</li>
  <li>
    <p>换句话说, 所有服务在等待请求状态时, 本地服务器不可以保持任何数据bean的引用.</p>
  </li>
  <li>服务bean中每个方法,只能接受数据bean做为参数,也只能返回数据bean做为结果
10.服务bean中每个方法,如果根据每个bean调用外部服务获取的数据一致,则相同的参数,必须返回相同的结果
11.服务bean中每个变量,不能是数据bean,只能是常量bean或者服务bean的引用,
12.服务bean中每个方法,不能依赖于成员变量, 没有上下文参数, 即此类对象性质等同于工具类助手类对象, 可实现单例模式</li>
</ol>

<p>13.服务器集群=任意个应用服务器+外部服务器,应用服务器单点故障不会影响业务轮转</p>

<p>————-   第二阶段</p>

<ol>
  <li>由于数据bean是可序列化的,因此可以用固定的字符串ID来表示相应的数据bean</li>
  <li>如果数据bean实现版本管理,可以通过 id.version 来确定唯一的数据</li>
  <li>组合id.version与数据bean后产生的数据bean, 等同于常量bean</li>
  <li>由于服务bean可实现单例,因此服务bean可以用固定的字符串name来确定唯一的服务bean</li>
  <li>服务bean可以byName方式或byType注入, 再加上空参构造</li>
</ol>

<p>————-   第三阶段</p>

<ol>
  <li>外部服务器上实现字符串ID获取最新版本的数据bean</li>
  <li>本地服务器上实现字符串name获取唯一版本的服务bean</li>
  <li>本地服务器上实现字符串name+方法名name获取服务bean指定的方法</li>
  <li>由字符串name+方法名name确定唯一ID,来确定唯一方法</li>
  <li>客户端传入字符串ID及方法ID,传至服务器,可返回唯一的字符串ID</li>
  <li>字符串ID与方法ID,确定唯一的请求ID,可转换为字符串,也可逆转换</li>
  <li>这里的唯一ID,都可以理解为常量bean</li>
</ol>

<p>————-  第四阶段</p>

<ol>
  <li>本地服务器只处理两种逻辑
  a) 传入唯一字符串ID,去外部服务器获取结果bean
  b) 根据字符串ID,方法ID,处理后返回结果bean</li>
  <li>本地服务器,外地服务器都可理解为数据bean的转换器</li>
  <li>唯一ID可用来标识
  a) 常量bean,数据bean,服务bean,服务bean的每种请求</li>
  <li>可使用缓冲服务器或代理服务器来缓冲唯一ID对应的各类数据</li>
</ol>

<p>————-  第五阶段</p>

<ol>
  <li>使用URL规范来表示唯一请求ID,传至服务器,返回唯一的HTML代码</li>
  <li>HTTP协议中相同的URL,在服务端数据版本相同时,应该返回相同的HTML</li>
  <li>HTTP协议中与上下文参数相关的数据,应保存在HTTP.HEADER中,如处理服务器的ID,处理时间,处理版本,处理参数</li>
  <li>由HTTP协议中的last-modified,etag来标识服务端的版本号,由max-age,Expire来标识版本的生命周期</li>
  <li>HTTP请求,对与相同的URL,相同版本,在生命周期内,返回唯一的HTML结果</li>
</ol>

<p>————————————&gt;</p>

<p>假设以下皆可实现
1. 对数据bean操作自动保存至缓冲服务器, 根据缓冲策略刷新至数据库服务器
2. 缓冲服务器选择性支持以下缓冲,单条缓冲,分页缓冲,TOP缓冲,分类缓冲,自增缓冲
3. 数据bean是有版本的,服务bean,及服务bean中的每个方法也是有版本的</p>

<p>————————————&gt;</p>

<p>高性能WEB服务</p>

<ol>
  <li>由代理服务器或者缓冲服务器缓冲HTTP结果,如果版本未更新,则返回304或者缓冲的内容</li>
  <li>当缓冲生命周期结束后,由代理服务器去应用服务器验证每个数据bean及方法的版本,如果数据及方法的版本均未改变,则返回304或者缓冲的内容</li>
  <li>如果数据bean或者方法bean更新,则由方法处理返回最新版本的结果bean,并通知代理服务器或者缓冲服务器更新版本</li>
</ol>

<p>未完待续…</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[统计使用~~~勿入~~~~]]></title>
    <link href="http://www.lianghaijun.com/2010-04-06-634841.html"/>
    <updated>2010-04-06T19:27:00+08:00</updated>
    <id>http://www.lianghaijun.com/634841</id>
    <content type="html"><![CDATA[<p>更新日期    2010.04.06 19：31</p>

<p>2323</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[手机游戏 resco bubbles 个人记录 score]]></title>
    <link href="http://www.lianghaijun.com/2009-01-27-1982083.html"/>
    <updated>2009-01-27T23:29:00+08:00</updated>
    <id>http://www.lianghaijun.com/1982083</id>
    <content type="html"><![CDATA[<p>手机游戏resco bubbles </p>
<p>游戏共50关 个人记录如下</p>
<p></p>
<p>-------------------------------</p>
<p>(2009-01-27)</p>
<p></p>
<p>1 1.5<br />2 2.6<br />3 3.3<br />4 5.9<br />5 10.2<br />6 3.2<br />7 6.0<br />8 0.6<br />9 14.3<br />10 15.5<br />11 1.6<br />12 14.4<br />13 1.3<br />14 3.8<br />15 4.4<br />16 3.5<br />17 1.2<br />18 24.3<br />19 28.1<br />20 24.7<br />21 5.9<br />22 15.2<br />23 16.9<br />24 11.5<br />25 28.9<br />26 21.6<br />27 15.2<br />28 12.2<br />29 5.4<br />30 7.3<br />31 1:38.2<br />32 12.8<br />33 50.0<br />34 12.1<br />35 8.2<br />36 2.3(bug??) --------此处是因软件bug而导致成绩出错<br />37 1:01.2<br />38 5.4<br />39 37.4<br />40 8.6<br />41 5.1<br />42 8.3<br />43 13.4<br />44 11.8<br />45 10.6<br />46 1.9<br />47 1:32.0<br />48 (未通关)<br />49 (未通关)<br />50 (未通关)</p>
<p></p>
<p>-----------------------------------------</p>
<p>第二次更新成绩 (20090719)</p>
<p></p>
<p><a href="http://blog.csdn.net/seavers/archive/2009/01/28/3853875.aspx"></a></p>
<p>11.5<br />22.6<br />33.3<br />44.8<br />58.9<br />62.8<br />74.8<br />80.5<br />914.1<br />1014.3<br />111.6<br />1211.1<br />131.3<br />141.9<br />154.2<br />163.5<br />171.1<br />1824.3<br />1927.6<br />2016.2<br />215.2<br />2210.0<br />2316.9<br />2411.2<br />2513.9<br />2621.6<br />2715.2<br />2812.2<br />295.4<br />307.3<br />311:38.2<br />3212.8<br />3350.0<br />3410.1<br />357.0<br />3616.9<br />3749.2<br />385.2<br />3937.4<br />408.6<br />415.1<br />428.3<br />4313.4<br />4411.8<br />4510.6<br />461.9<br />471:32.0<br />48--<br />49--<br />50--</p>
<p></p>
<p></p>
<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用bat反编译jar包生成源码jar包]]></title>
    <link href="http://www.lianghaijun.com/2008-01-14-1982084.html"/>
    <updated>2008-01-14T21:29:00+08:00</updated>
    <id>http://www.lianghaijun.com/1982084</id>
    <content type="html"><![CDATA[<div class="iteye-blog-content-contain" style="font-size: 14px;">
<p>(<span style="font-size: 12px; line-height: 1.5;">这篇文章是从blog.csdn.net/seavers导入的, </span><span style="font-size: 12px; line-height: 1.5;">最新版本见: </span><a style="font-size: 12px; line-height: 1.5;" href="/blog/1416013">http://seavers.iteye.com/blog/1416013</a><span style="font-size: 12px; line-height: 1.5;">,  </span><span style="font-size: 12px; line-height: 1.5;">)</span></p>
<p>反编译所使用的工具是jad.exe,笔者的测试版本是1.5.8e,压缩与解压缩使用的是WinRAR</p>
<p>jad.exe 可反编译一个class文件为java文件,笔者的BAT可通过此工具将一个jar包反编译成一个完整的源码jar包,同时生成的目录也可以在eclipse中使用</p>
<p>jad.exe 官方网站 ： <a href="http://www.kpdus.com/jad.html">http://www.kpdus.com/jad.html</a> (英文的)</p>
<p>BAT脚本见后</p>
<p>安装方法如下:</p>
<p>复制粘贴后面的文本为一个BAT,然后与jad.exe放在同一个目录即可(WinRAR需正确安装)</p>
<p>使用方法如下: (有3种使用方法, 使用其中任意一种均可,结果是相同的)</p>
<p>1. 双击BAT,提示输入需反编译的jar包,请输入完整的jar路径</p>
<p>2. 直接将 jar 包拖放在bat上</p>
<p>3.右键点击jar包,选择打开方式,然后选择使用该BAT来执行</p>
<p>运行后的结果如下:</p>
<p>在jar包的同一目录下, 将会生成一个目录,一个jar,目录下有两个子目录,一个目录存放解压缩后的所有class,一个目录存放反编译后的java文件,jar包是用源码压缩生成的</p>
<p>几点说明:</p>
<p>1. 工具中使用的WinRAR是自动识别安装路径的,请正确安装WinRAR</p>
<p>2. 工具使用的jad.exe,须与BAT放在同一目录,或者放在PATH可搜索到的位置</p>
<p>3. jar包中非class文件,也会完整拷贝在源码目录下,方便生成源码工程</p>
<p>4. 生成的目录名与原 jar 包同名, 生成的源码 jar 包的文件名是在原名称中加入-src而生成, 如原 jar 包为 jdbc.jar, 则生成的目录名为 jdbc, 而生成的源码jar 包名则为 jdbc-src.jar</p>
<p>5. eclipse使用方法1, 将BAT生成的目录放在workspace中,然后创建同名工程</p>
<p>6. eclipse使用方法2,在 eclipse 中创建同名工程,使用src为源文件目录,bin为class文件目录,然后将BAT生成的目录拷贝在eclipse的workspace中</p>
<p> </p>
<p>该BAT为 blog.csdn.net/seavers 原创, BAT源码仅供个人学习,使用,研究,未经本人同意,不可用于商业用途</p>
<p> </p>
<p> </p>
<p>BAT源码如下: (请直接拷贝在BAT文件中)</p>
<p> </p>
<div style="padding: 4px 5.4pt; width: 95%;">
<span style="color: #008000;">::</span><span style="color: #008000;">作者:seavers</span><span style="color: #008000;"><br /> ::</span><span style="color: #008000;">blog:blog.csdn.net/seavers(在此blog上首次发布该bat)</span><span style="color: #008000;"><br /> ::</span><span style="color: #008000;">功能:反编译jar包,生成对应的源码jar包,详细说明方档请登陆我的blog</span>
<div>
<span style="color: #000000;"><br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">打开/关闭命令行显示</span><span style="color: #008000;"><br /></span><span style="color: #0000ff;">@echo</span><span style="color: #0000ff;">OFF</span><span style="color: #000000;"><br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">::::::::::::::::::::::::::解析并设置变量::::::::::::::::::</span><span style="color: #008000;"><br /></span><span style="color: #000000;"><br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">查找jad文件的路径,这里取的jad.exe,表示从PATH中查找,如果想手工指定,需在这里修改</span><span style="color: #008000;"><br /></span><span style="color: #0000ff;">set</span><span style="color: #000000;">JAD_PATH</span><span style="color: #000000;">=</span><span style="color: #000000;">jad</span><span style="color: #000000;">.</span><span style="color: #000000;">exe<br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">设置解压出的class文件存放的位置(相对路径)</span><span style="color: #008000;"><br /></span><span style="color: #0000ff;">set</span><span style="color: #000000;">CLASS_PATH</span><span style="color: #000000;">=</span><span style="color: #000000;">bin<br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">设置反编译后的java文件存放的位置(相对路径)</span><span style="color: #008000;"><br /></span><span style="color: #0000ff;">set</span><span style="color: #000000;">JAVA_PATH</span><span style="color: #000000;">=</span><span style="color: #000000;">src<br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">检查JAD文件是否存在bat所在目录下,</span><span style="color: #008000;"><br /></span><span style="color: #0000ff;">if</span><span style="color: #0000ff;">exist</span><span style="color: #000000;">"</span><span style="color: #000000;">%~dp0jad.exe</span><span style="color: #000000;">"</span><span style="color: #0000ff;">set</span><span style="color: #000000;">JAD_PATH</span><span style="color: #000000;">=</span><span style="color: #000000;">%~dp0jad</span><span style="color: #000000;">.</span><span style="color: #000000;">exe<br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">判断参数个数,如果没有文件参数,则报错,这里也可以使用%~f1,也可以用%1,没有关系,之后要去掉引号</span><span style="color: #008000;"><br /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">""</span><span style="color: #800080;">%1</span><span style="color: #000000;">""</span><span style="color: #000000;">==</span><span style="color: #000000;">""""</span><span style="color: #000000;">(</span><span style="color: #0000ff;">set</span><span style="color: #000000;">/</span><span style="color: #000000;">PJAR_PATH</span><span style="color: #000000;">=</span><span style="color: #000000;">请输入要反编译的JAR包的路径</span><span style="color: #000000;">...)</span><span style="color: #0000ff;">else</span><span style="color: #000000;">(</span><span style="color: #0000ff;">set</span><span style="color: #000000;">JAR_PATH</span><span style="color: #000000;">=</span><span style="color: #000000;">%~f1</span><span style="color: #000000;">)</span><span style="color: #000000;"><br /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">'%JAR_PATH:~</span><span style="color: #000000;">0</span><span style="color: #000000;">,</span><span style="color: #000000;">1</span><span style="color: #000000;">%%JAR_PATH:~</span><span style="color: #000000;">0</span><span style="color: #000000;">,</span><span style="color: #000000;">1</span><span style="color: #000000;">%'</span><span style="color: #000000;">==</span><span style="color: #000000;">'</span><span style="color: #000000;">""</span><span style="color: #000000;">'</span><span style="color: #0000ff;">set</span><span style="color: #000000;">JAR_PATH</span><span style="color: #000000;">=</span><span style="color: #000000;">%JAR_PATH:~</span><span style="color: #000000;">1</span><span style="color: #000000;">,</span><span style="color: #000000;">-</span><span style="color: #000000;">1</span><span style="color: #000000;">%<br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">获取源代码存放的路径,这里取JAR包所在路径,然后去掉".jar"作为文件夹路径,这里的LOCATION不能带引号,因为下面还要追加字符)</span><span style="color: #008000;"><br /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">""</span><span style="color: #800080;">%2</span><span style="color: #000000;">""</span><span style="color: #000000;">==</span><span style="color: #000000;">""""</span><span style="color: #000000;">(</span><span style="color: #0000ff;">set</span><span style="color: #000000;">LOCATION</span><span style="color: #000000;">=</span><span style="color: #000000;">%JAR_PATH:~</span><span style="color: #000000;">0</span><span style="color: #000000;">,</span><span style="color: #000000;">-</span><span style="color: #000000;">4</span><span style="color: #000000;">%</span><span style="color: #000000;">)</span><span style="color: #0000ff;">else</span><span style="color: #000000;">(</span><span style="color: #0000ff;">set</span><span style="color: #000000;">LOCATION</span><span style="color: #000000;">=</span><span style="color: #000000;">%~f2</span><span style="color: #000000;">)</span><span style="color: #000000;"><br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">::::::::::::::::::开始执行程序:::::::::::::::::::::::::::::::</span><span style="color: #008000;"><br /></span><span style="color: #000000;"><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">获取WinRAR.exe的路径,设置在临时变量rarpath中</span><span style="color: #008000;"><br /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">/</span><span style="color: #000000;">f</span><span style="color: #000000;">"</span><span style="color: #000000;">usebackqdelims=</span><span style="color: #000000;">"</span><span style="color: #000000;">%%iin</span><span style="color: #000000;">(</span><span style="color: #000000;">`ftypeWinRAR`</span><span style="color: #000000;">)</span><span style="color: #0000ff;">do</span><span style="color: #0000ff;">set</span><span style="color: #000000;">RARPATH</span><span style="color: #000000;">=</span><span style="color: #000000;">%%i<br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">对rarpath进行解析,去掉前面7个节符,去掉后面5个字符,得到WinRAR执行路径</span><span style="color: #008000;"><br /> ::</span><span style="color: #008000;">路径大致是这样的形式Winrar="C:/ProgramFiles/WinRAR/WinRAR.exe""%1"</span><span style="color: #008000;"><br /></span><span style="color: #0000ff;">set</span><span style="color: #000000;">RAREXE</span><span style="color: #000000;">=</span><span style="color: #000000;">%RARPATH:~</span><span style="color: #000000;">7</span><span style="color: #000000;">,</span><span style="color: #000000;">-</span><span style="color: #000000;">5</span><span style="color: #000000;">%<br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">调用WinRAR命令,解压文件到指定目录的bin目录下</span><span style="color: #008000;"><br /></span><span style="color: #000000;">%RAREXE%x</span><span style="color: #000000;">"</span><span style="color: #000000;">%JAR_PATH%</span><span style="color: #000000;">"</span><span style="color: #000000;">"</span><span style="color: #000000;">%LOCATION%/%CLASS_PATH%/</span><span style="color: #000000;">"</span><span style="color: #000000;"><br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">遍历整个bin目录,取所有class文件,调用jad.exe反编译出源码,非class的拷贝到src目录下</span><span style="color: #008000;"><br /> ::</span><span style="color: #008000;">打开变量延迟功能</span><span style="color: #008000;"><br /></span><span style="color: #0000ff;">setlocal</span><span style="color: #000000;">EnableDelayedExpansion<br /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">/</span><span style="color: #000000;">r</span><span style="color: #000000;">"</span><span style="color: #000000;">%LOCATION%/bin</span><span style="color: #000000;">"</span><span style="color: #000000;">%%iin</span><span style="color: #000000;">(</span><span style="color: #000000;">*</span><span style="color: #000000;">.</span><span style="color: #000000;">*</span><span style="color: #000000;">)</span><span style="color: #0000ff;">do</span><span style="color: #0000ff;">if</span><span style="color: #000000;">'%%~xi'</span><span style="color: #000000;">==</span><span style="color: #000000;">'</span><span style="color: #000000;">.</span><span style="color: #000000;">class'</span><span style="color: #000000;">(</span><span style="color: #000000;">"</span><span style="color: #000000;">%JAD_PATH%</span><span style="color: #000000;">"</span><span style="color: #000000;">-o-r-sjava-ff-b-nonlb-space-t-</span><span style="color: #000000;">8</span><span style="color: #000000;">-d</span><span style="color: #000000;">"</span><span style="color: #000000;">%LOCATION%/%JAVA_PATH%</span><span style="color: #000000;">"</span><span style="color: #000000;">"</span><span style="color: #000000;">%%~si</span><span style="color: #000000;">"</span><span style="color: #000000;">)</span><span style="color: #0000ff;">else</span><span style="color: #000000;">(</span><span style="color: #0000ff;">set</span><span style="color: #000000;">TEMP_PATH</span><span style="color: #000000;">=</span><span style="color: #000000;">%%i&amp;</span><span style="color: #0000ff;">echo</span><span style="color: #000000;">f|</span><span style="color: #0000ff;">xcopy</span><span style="color: #000000;">"</span><span style="color: #000000;">%%i</span><span style="color: #000000;">"</span><span style="color: #000000;">"</span><span style="color: #000000;">!TEMP_PATH:%LOCATION%/bin=%LOCATION%/src!</span><span style="color: #000000;">"</span><span style="color: #000000;">)</span><span style="color: #000000;"><br /></span><span style="color: #0000ff;">endlocal</span><span style="color: #000000;">EnableDelayedExpansion<br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">将产生的java文件压缩成源码文件</span><span style="color: #008000;"><br /></span><span style="color: #000000;">%RAREXE%a-ep1-r</span><span style="color: #000000;">"</span><span style="color: #000000;">%LOCATION%-src.zip</span><span style="color: #000000;">"</span><span style="color: #000000;">"</span><span style="color: #000000;">%LOCATION%/%JAVA_PATH%/*.*</span><span style="color: #000000;">"</span><span style="color: #000000;"><br /><br /><br /></span><span style="color: #008000;">::</span><span style="color: #008000;">::::::::::::::::程序结束,显示运行结果::::::::::::::::::::::</span><span style="color: #008000;"><br /></span><span style="color: #0000ff;">echo</span><span style="color: #000000;">*********************************************<br /></span><span style="color: #0000ff;">echo</span><span style="color: #000000;">程序运行结束<br /></span><span style="color: #0000ff;">echo</span><span style="color: #000000;">解析的JAR包的路径为%JAR_PATH%<br /></span><span style="color: #0000ff;">echo</span><span style="color: #000000;">解压缩工具WinRAR</span><span style="color: #000000;">.</span><span style="color: #000000;">exe的路径为%RAREXE%<br /></span><span style="color: #0000ff;">echo</span><span style="color: #000000;">反编译工具JAD</span><span style="color: #000000;">.</span><span style="color: #000000;">exe的路径为%JAD_PATH%<br /></span><span style="color: #0000ff;">echo</span><span style="color: #000000;">解析后的文件的根路径为%LOCATION%<br /></span><span style="color: #0000ff;">echo</span><span style="color: #000000;">解析后的class文件存放在%LOCATION%</span><span style="color: #000000;">/</span><span style="color: #000000;">%CLASS_PATH%<br /></span><span style="color: #0000ff;">echo</span><span style="color: #000000;">解析后的java文件存放在%LOCATION%</span><span style="color: #000000;">/</span><span style="color: #000000;">%JAVA_PATH%<br /></span><span style="color: #0000ff;">echo</span><span style="color: #000000;">压缩后的java文件存放在%LOCATION%-src</span><span style="color: #000000;">.</span><span style="color: #000000;">zip<br /></span><span style="color: #0000ff;">echo</span><span style="color: #000000;">*********************************************<br /></span><span style="color: #0000ff;">pause</span><span style="color: #000000;"><br /><br /><br /></span>
</div>
</div>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[c3p0.properties  .vs.   c3p0-config.xml]]></title>
    <link href="http://www.lianghaijun.com/2007-08-23-1982085.html"/>
    <updated>2007-08-23T21:11:00+08:00</updated>
    <id>http://www.lianghaijun.com/1982085</id>
    <content type="html"><![CDATA[<div class="iteye-blog-content-contain" style="font-size: 14px;">
<p> </p>
<p>摘自c3p0.jar，方便查看</p>
<p>//c3p0.properties</p>
<div style="padding-right: 5.4pt; padding-left: 5.4pt; background: #e6e6e6; padding-bottom: 4px; width: 95%; padding-top: 4px;">
<div>
<span style="color: #000000;">#<br />#Thisfileisdetritusfromvarioustestingattempts<br />#thevaluesbelowmaychange</span><span style="color: #000000;">,</span><span style="color: #000000;">andoftendonotrepresent<br />#reasonablevaluesfortheparameters.<br />#<br /><br />#c3p0.testConnectionOnCheckout</span><span style="color: #000000;">=</span><span style="color: #000000;">true<br />#c3p0.testConnectionOnCheckin</span><span style="color: #000000;">=</span><span style="color: #000000;">true<br />#c3p0.minPoolSize</span><span style="color: #000000;">=</span><span style="color: #000000;">3</span><span style="color: #000000;"><br />#c3p0.maxPoolSize</span><span style="color: #000000;">=</span><span style="color: #000000;">20</span><span style="color: #000000;"><br />#c3p0.checkoutTimeout</span><span style="color: #000000;">=</span><span style="color: #000000;">2000</span><span style="color: #000000;"><br />#c3p0.idleConnectionTestPeriod</span><span style="color: #000000;">=</span><span style="color: #000000;">5</span><span style="color: #000000;"><br />#c3p0.maxConnectionAge</span><span style="color: #000000;">=</span><span style="color: #000000;">10</span><span style="color: #000000;"><br />#c3p0.maxIdleTime</span><span style="color: #000000;">=</span><span style="color: #000000;">2</span><span style="color: #000000;"><br />#c3p0.maxIdleTimeExcessConnections</span><span style="color: #000000;">=</span><span style="color: #000000;">1</span><span style="color: #000000;"><br />#c3p0.propertyCycle</span><span style="color: #000000;">=</span><span style="color: #000000;">1</span><span style="color: #000000;"><br />#c3p0.numHelperThreads</span><span style="color: #000000;">=</span><span style="color: #000000;">10</span><span style="color: #000000;"><br />#c3p0.unreturnedConnectionTimeout</span><span style="color: #000000;">=</span><span style="color: #000000;">15</span><span style="color: #000000;"><br />#c3p0.debugUnreturnedConnectionStackTraces</span><span style="color: #000000;">=</span><span style="color: #000000;">true<br />#c3p0.maxStatements</span><span style="color: #000000;">=</span><span style="color: #000000;">30</span><span style="color: #000000;"><br />#c3p0.maxStatementsPerConnection</span><span style="color: #000000;">=</span><span style="color: #000000;">5</span><span style="color: #000000;"><br />#c3p0.maxAdministrativeTaskTime</span><span style="color: #000000;">=</span><span style="color: #000000;">3</span><span style="color: #000000;"><br />#c3p0.preferredTestQuery</span><span style="color: #000000;">=</span><span style="color: #000000;">SELECT</span><span style="color: #000000;">1</span><span style="color: #000000;"><br />#c3p0.preferredTestQuery</span><span style="color: #000000;">=</span><span style="color: #000000;">SELECTaFROMemptyyukyukWHEREa</span><span style="color: #000000;">=</span><span style="color: #000000;">5</span><span style="color: #000000;"><br />#c3p0.preferredTestQuery</span><span style="color: #000000;">=</span><span style="color: #000000;">SELECTaFROMtestpbdsWHEREa</span><span style="color: #000000;">=</span><span style="color: #000000;">5</span><span style="color: #000000;"><br />#c3p0.usesTraditionalReflectiveProxies</span><span style="color: #000000;">=</span><span style="color: #000000;">true<br />#c3p0.automaticTestTable</span><span style="color: #000000;">=</span><span style="color: #000000;">PoopyTestTable<br />#c3p0.acquireIncrement</span><span style="color: #000000;">=</span><span style="color: #000000;">4</span><span style="color: #000000;"><br />#c3p0.acquireRetryDelay</span><span style="color: #000000;">=</span><span style="color: #000000;">1000</span><span style="color: #000000;"><br />#c3p0.acquireRetryAttempts</span><span style="color: #000000;">=</span><span style="color: #000000;">60</span><span style="color: #000000;"><br />#c3p0.connectionTesterClassName</span><span style="color: #000000;">=</span><span style="color: #000000;">com.mchange.v2.c3p0.test.AlwaysFailConnectionTester<br />#c3p0.initialPoolSize</span><span style="color: #000000;">=</span><span style="color: #000000;">10</span><span style="color: #000000;"><br /><br />c3p0.jdbcUrl</span><span style="color: #000000;">=</span><span style="color: #000000;">jdbc:postgresql://localhost/c3p0-test<br />c3p0.driverClass</span><span style="color: #000000;">=</span><span style="color: #000000;">org.postgresql.Driver<br />c3p0.user</span><span style="color: #000000;">=</span><span style="color: #000000;">swaldman<br />c3p0.password</span><span style="color: #000000;">=</span><span style="color: #000000;">test<br />#c3p0.user</span><span style="color: #000000;">=</span><span style="color: #000000;">poop<br />#c3p0.password</span><span style="color: #000000;">=</span><span style="color: #000000;">scoop<br /><br />#com.mchange.v2.log.MLog</span><span style="color: #000000;">=</span><span style="color: #000000;">com.mchange.v2.log.log4j.Log4jMLog<br />#com.mchange.v2.log.MLog</span><span style="color: #000000;">=</span><span style="color: #000000;">com.mchange.v2.log.jdk14logging.Jdk14MLog<br />#com.mchange.v2.log.MLog</span><span style="color: #000000;">=</span><span style="color: #000000;">com.mchange.v2.log.FallbackMLog<br />#com.mchange.v2.log.NameTransformer</span><span style="color: #000000;">=</span><span style="color: #000000;">com.mchange.v2.log.PackageNames<br />#com.mchange.v2.log.FallbackMLog.DEFAULT_CUTOFF_LEVEL</span><span style="color: #000000;">=</span><span style="color: #000000;">ALL<br /><br /><br />#com.mchange.v2.c3p0.VMID</span><span style="color: #000000;">=</span><span style="color: #000000;">poop<br /><br /></span>
</div>
</div>
<p> </p>
<p> </p>
<p>//c3p0-config.xml</p>
<div style="padding-right: 5.4pt; padding-left: 5.4pt; background: #e6e6e6; padding-bottom: 4px; width: 95%; padding-top: 4px;">
<div>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">c3p0-config</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"><br /></span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">default-config</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="automaticTestTable"&gt;con_test&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="checkoutTimeout"&gt;30000&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="idleConnectionTestPeriod"&gt;30&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="initialPoolSize"&gt;10&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="maxIdleTime"&gt;30&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="maxIdleTimeExcessConnections"&gt;10&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="maxConnectionAge"&gt;60&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="propertyCycle"&gt;1&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="maxPoolSize"&gt;25&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="minPoolSize"&gt;5&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="maxStatements"&gt;0&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="maxStatementsPerConnection"&gt;5&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="maxAdministrativeTaskTime"&gt;4&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="connectionCustomizerClassName"&gt;com.mchange.v2.c3p0.test.TestConnectionCustomizer&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="unreturnedConnectionTimeout"&gt;15&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;propertyname="debugUnreturnedConnectionStackTraces"&gt;true&lt;/property&gt;</span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;"><br />&lt;user-overridesuser="swaldman"&gt;<br />&lt;propertyname="debugUnreturnedConnectionStackTraces"&gt;true&lt;/property&gt;<br />&lt;/user-overrides&gt;<br /></span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /><br /></span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">default-config</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"><br /><br /></span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;"><br />&lt;named-configname="dumbTestConfig"&gt;<br />&lt;propertyname="maxStatements"&gt;200&lt;/property&gt;<br />&lt;propertyname="jdbcUrl"&gt;jdbc:test&lt;/property&gt;<br />&lt;user-overridesuser="poop"&gt;<br />&lt;propertyname="maxStatements"&gt;300&lt;/property&gt;<br />&lt;/user-overrides&gt;<br />&lt;/named-config&gt;<br /></span><span style="color: #008000;">--&gt;</span><span style="color: #000000;"><br /><br /></span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">c3p0-config</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"><br /><br /><br /></span>
</div>
</div>
<p> </p>
<p> </p>
<p>//解析properties</p>
<p> </p>
<div style="padding-right: 5.4pt; padding-left: 5.4pt; background: #e6e6e6; padding-bottom: 4px; width: 95%; padding-top: 4px;">
<div>
<img id="_0_853_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif" alt="" align="top" /><img id="_0_853_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif" alt="" align="top" /><span id="_0_853_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">/**/</span><span id="_0_853_Open_Text"><span style="color: #008000;">/*</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Distributedaspartofc3p0v.0.9.1.2<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Copyright(C)2005MachineryForChange,Inc.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Author:SteveWaldman&lt;swaldman@mchange.com&gt;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Thislibraryisfreesoftware;youcanredistributeitand/ormodify<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*itunderthetermsoftheGNULesserGeneralPublicLicenseversion2.1,as<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*publishedbytheFreeSoftwareFoundation.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Thissoftwareisdistributedinthehopethatitwillbeuseful,<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*butWITHOUTANYWARRANTY;withouteventheimpliedwarrantyof<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*MERCHANTABILITYorFITNESSFORAPARTICULARPURPOSE.Seethe<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*GNULesserGeneralPublicLicenseformoredetails.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*YoushouldhavereceivedacopyoftheGNULesserGeneralPublicLicense<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*alongwiththissoftware;seethefileLICENSE.Ifnot,writetothe<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*FreeSoftwareFoundation,Inc.,59TemplePlace,Suite330,<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Boston,MA02111-1307,USA.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif" alt="" align="top" /></span><span style="color: #008000;">*/</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">package</span><span style="color: #000000;">com.mchange.v2.c3p0.cfg;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">java.io.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">java.lang.reflect.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">java.util.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">com.mchange.v2.cfg.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">com.mchange.v2.log.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">com.mchange.v2.c3p0.impl.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">class</span><span style="color: #000000;">C3P0ConfigUtils<br /><img id="_1086_5190_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif" alt="" align="top" /><img id="_1086_5190_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif" alt="" align="top" /></span><span id="_1086_5190_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1086_5190_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringPROPS_FILE_RSRC_PATH</span><span style="color: #000000;">=</span><span style="color: #000000;">"</span><span style="color: #000000;">/c3p0.properties</span><span style="color: #000000;">"</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringPROPS_FILE_PROP_PFX</span><span style="color: #000000;">=</span><span style="color: #000000;">"</span><span style="color: #000000;">c3p0.</span><span style="color: #000000;">"</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #0000ff;">int</span><span style="color: #000000;">PROPS_FILE_PROP_PFX_LEN</span><span style="color: #000000;">=</span><span style="color: #000000;">5</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img id="_1345_1380_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1345_1380_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #000000;">String[]MISSPELL_PFXS</span><span style="color: #000000;">=</span><span id="_1345_1380_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1345_1380_Open_Text"><span style="color: #000000;">{</span><span style="color: #000000;">"</span><span style="color: #000000;">/c3pO</span><span style="color: #000000;">"</span><span style="color: #000000;">,</span><span style="color: #000000;">"</span><span style="color: #000000;">/c3po</span><span style="color: #000000;">"</span><span style="color: #000000;">,</span><span style="color: #000000;">"</span><span style="color: #000000;">/C3P0</span><span style="color: #000000;">"</span><span style="color: #000000;">,</span><span style="color: #000000;">"</span><span style="color: #000000;">/C3PO</span><span style="color: #000000;">"</span><span style="color: #000000;">}</span></span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #000000;">MLoggerlogger</span><span style="color: #000000;">=</span><span style="color: #000000;">MLog.getLogger(C3P0ConfigUtils.</span><span style="color: #0000ff;">class</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">static</span><span style="color: #000000;"><br /><img id="_1484_2445_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1484_2445_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_1484_2445_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1484_2445_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(logger.isLoggable(MLevel.WARNING)</span><span style="color: #000000;">&amp;&amp;</span><span style="color: #000000;">C3P0ConfigUtils.</span><span style="color: #0000ff;">class</span><span style="color: #000000;">.getResource(PROPS_FILE_RSRC_PATH)</span><span style="color: #000000;">==</span><span style="color: #0000ff;">null</span><span style="color: #000000;">)<br /><img id="_1612_2439_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1612_2439_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_1612_2439_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1612_2439_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #008000;">//</span><span style="color: #008000;">warnonamisspelling...itsanuglywaytodothis,butsinceresourcesarenotlistable...</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(</span><span style="color: #0000ff;">int</span><span style="color: #000000;">i</span><span style="color: #000000;">=</span><span style="color: #000000;">0</span><span style="color: #000000;">;i</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">MISSPELL_PFXS.length;</span><span style="color: #000000;">++</span><span style="color: #000000;">i)<br /><img id="_1793_2429_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1793_2429_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_1793_2429_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1793_2429_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Stringtest</span><span style="color: #000000;">=</span><span style="color: #000000;">MISSPELL_PFXS[i]</span><span style="color: #000000;">+</span><span style="color: #000000;">"</span><span style="color: #000000;">.properties</span><span style="color: #000000;">"</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(C3P0ConfigUtils.</span><span style="color: #0000ff;">class</span><span style="color: #000000;">.getResource(MISSPELL_PFXS[i]</span><span style="color: #000000;">+</span><span style="color: #000000;">"</span><span style="color: #000000;">.properties</span><span style="color: #000000;">"</span><span style="color: #000000;">)</span><span style="color: #000000;">!=</span><span style="color: #0000ff;">null</span><span style="color: #000000;">)<br /><img id="_1974_2415_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1974_2415_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_1974_2415_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1974_2415_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />logger.warning(</span><span style="color: #000000;">"</span><span style="color: #000000;">POSSIBLYMISSPELLEDc3p0.propertiesCONFIGRESOURCEFOUND.</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;">"</span><span style="color: #000000;">Pleaseensurethefilenameisc3p0.properties,alllowercase,</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;">"</span><span style="color: #000000;">withthedigit0(NOTtheletterO)inc3p0.Itshouldbeplaced</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;">"</span><span style="color: #000000;">inthetoplevelofc3p0'seffectiveclasspath.</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">break</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">HashMapextractHardcodedC3P0Defaults(</span><span style="color: #0000ff;">boolean</span><span style="color: #000000;">stringify)<br /><img id="_2526_3248_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2526_3248_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2526_3248_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2526_3248_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />HashMapout</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">HashMap();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">try</span><span style="color: #000000;"><br /><img id="_2569_3110_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2569_3110_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2569_3110_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2569_3110_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Method[]methods</span><span style="color: #000000;">=</span><span style="color: #000000;">C3P0Defaults.</span><span style="color: #0000ff;">class</span><span style="color: #000000;">.getMethods();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(</span><span style="color: #0000ff;">int</span><span style="color: #000000;">i</span><span style="color: #000000;">=</span><span style="color: #000000;">0</span><span style="color: #000000;">,len</span><span style="color: #000000;">=</span><span style="color: #000000;">methods.length;i</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">len;</span><span style="color: #000000;">++</span><span style="color: #000000;">i)<br /><img id="_2685_3103_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2685_3103_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2685_3103_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2685_3103_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Methodm</span><span style="color: #000000;">=</span><span style="color: #000000;">methods[i];<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">int</span><span style="color: #000000;">mods</span><span style="color: #000000;">=</span><span style="color: #000000;">m.getModifiers();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">((mods</span><span style="color: #000000;">&amp;</span><span style="color: #000000;">Modifier.PUBLIC)</span><span style="color: #000000;">!=</span><span style="color: #000000;">0</span><span style="color: #000000;">&amp;&amp;</span><span style="color: #000000;">(mods</span><span style="color: #000000;">&amp;</span><span style="color: #000000;">Modifier.STATIC)</span><span style="color: #000000;">!=</span><span style="color: #000000;">0</span><span style="color: #000000;">&amp;&amp;</span><span style="color: #000000;">m.getParameterTypes().length</span><span style="color: #000000;">==</span><span style="color: #000000;">0</span><span style="color: #000000;">)<br /><img id="_2860_3095_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2860_3095_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2860_3095_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2860_3095_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(stringify)<br /><img id="_2889_3021_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2889_3021_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2889_3021_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2889_3021_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Objectval</span><span style="color: #000000;">=</span><span style="color: #000000;">m.invoke(</span><span style="color: #0000ff;">null</span><span style="color: #000000;">,</span><span style="color: #0000ff;">null</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(val</span><span style="color: #000000;">!=</span><span style="color: #0000ff;">null</span><span style="color: #000000;">)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />out.put(m.getName(),String.valueOf(val));<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">else</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />out.put(m.getName(),m.invoke(</span><span style="color: #0000ff;">null</span><span style="color: #000000;">,</span><span style="color: #0000ff;">null</span><span style="color: #000000;">));<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(Exceptione)<br /><img id="_3138_3228_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3138_3228_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3138_3228_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3138_3228_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />logger.log(MLevel.WARNING,</span><span style="color: #000000;">"</span><span style="color: #000000;">Failedtoextracthardcodeddefaultconfig!?</span><span style="color: #000000;">"</span><span style="color: #000000;">,e);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">out;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">HashMapextractHardcodedC3P0Defaults()<br /><img id="_3312_3359_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3312_3359_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3312_3359_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3312_3359_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">extractHardcodedC3P0Defaults(</span><span style="color: #0000ff;">true</span><span style="color: #000000;">);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">HashMapextractC3P0PropertiesResources()<br /><img id="_3425_3890_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3425_3890_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3425_3890_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3425_3890_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />HashMapout</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">HashMap();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #008000;">//</span><span style="color: #008000;">Propertiesprops=findResourceProperties();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #008000;">//</span><span style="color: #008000;">props.putAll(findAllC3P0Properties());</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Propertiesprops</span><span style="color: #000000;">=</span><span style="color: #000000;">findAllC3P0Properties();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(Iteratorii</span><span style="color: #000000;">=</span><span style="color: #000000;">props.keySet().iterator();ii.hasNext();)<br /><img id="_3667_3870_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3667_3870_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3667_3870_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3667_3870_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Stringkey</span><span style="color: #000000;">=</span><span style="color: #000000;">(String)ii.next();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Stringval</span><span style="color: #000000;">=</span><span style="color: #000000;">(String)props.get(key);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(key.startsWith(PROPS_FILE_PROP_PFX))<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />out.put(key.substring(PROPS_FILE_PROP_PFX_LEN).trim(),val.trim());<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">out;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">C3P0ConfigconfigFromFlatDefaults(HashMapflatDefaults)<br /><img id="_3971_4176_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3971_4176_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3971_4176_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3971_4176_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />NamedScopedefaults</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">NamedScope();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />defaults.props.putAll(flatDefaults);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />HashMapconfigNamesToNamedScopes</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">HashMap();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #0000ff;">new</span><span style="color: #000000;">C3P0Config(defaults,configNamesToNamedScopes);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringgetPropFileConfigProperty(Stringprop)<br /><img id="_4253_4320_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4253_4320_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4253_4320_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4253_4320_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">MultiPropertiesConfig.readVmConfig().getProperty(prop);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #0000ff;">static</span><span style="color: #000000;">PropertiesfindResourceProperties()<br /><img id="_4382_4479_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4382_4479_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4382_4479_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4382_4479_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">MultiPropertiesConfig.readVmConfig().getPropertiesByResourcePath(PROPS_FILE_RSRC_PATH);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #0000ff;">static</span><span style="color: #000000;">PropertiesfindAllC3P0Properties()<br /><img id="_4540_4617_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4540_4617_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4540_4617_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4540_4617_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">MultiPropertiesConfig.readVmConfig().getPropertiesByPrefix(</span><span style="color: #000000;">"</span><span style="color: #000000;">c3p0</span><span style="color: #000000;">"</span><span style="color: #000000;">);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">static</span><span style="color: #000000;">PropertiesfindAllC3P0SystemProperties()<br /><img id="_4676_5150_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4676_5150_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4676_5150_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4676_5150_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Propertiesout</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">Properties();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />SecurityExceptionsampleExc</span><span style="color: #000000;">=</span><span style="color: #0000ff;">null</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">try</span><span style="color: #000000;"><br /><img id="_4762_5077_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4762_5077_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4762_5077_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4762_5077_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(Iteratorii</span><span style="color: #000000;">=</span><span style="color: #000000;">C3P0Defaults.getKnownProperties().iterator();ii.hasNext();)<br /><img id="_4853_5070_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4853_5070_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4853_5070_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4853_5070_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Stringkey</span><span style="color: #000000;">=</span><span style="color: #000000;">(String)ii.next();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />StringprefixedKey</span><span style="color: #000000;">=</span><span style="color: #000000;">"</span><span style="color: #000000;">c3p0.</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;">key;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Stringvalue</span><span style="color: #000000;">=</span><span style="color: #000000;">System.getProperty(prefixedKey);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(value</span><span style="color: #000000;">!=</span><span style="color: #0000ff;">null</span><span style="color: #000000;">&amp;&amp;</span><span style="color: #000000;">value.trim().length()</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">0</span><span style="color: #000000;">)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />out.put(key,value);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(SecurityExceptione)<br /><img id="_5113_5130_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_5113_5130_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_5113_5130_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_5113_5130_Open_Text"><span style="color: #000000;">{sampleExc</span><span style="color: #000000;">=</span><span style="color: #000000;">e;}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">out;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #000000;">C3P0ConfigUtils()<br /><img id="_5187_5188_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_5187_5188_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_5187_5188_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_5187_5188_Open_Text"><span style="color: #000000;">{}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span>
</div>
</div>
<p> </p>
<p> </p>
<p>//解析xml</p>
<p> </p>
<div style="padding-right: 5.4pt; padding-left: 5.4pt; background: #e6e6e6; padding-bottom: 4px; width: 95%; padding-top: 4px;">
<div>
<img id="_0_853_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif" alt="" align="top" /><img id="_0_853_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif" alt="" align="top" /><span id="_0_853_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">/**/</span><span id="_0_853_Open_Text"><span style="color: #008000;">/*</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Distributedaspartofc3p0v.0.9.1.2<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Copyright(C)2005MachineryForChange,Inc.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Author:SteveWaldman&lt;swaldman@mchange.com&gt;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Thislibraryisfreesoftware;youcanredistributeitand/ormodify<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*itunderthetermsoftheGNULesserGeneralPublicLicenseversion2.1,as<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*publishedbytheFreeSoftwareFoundation.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Thissoftwareisdistributedinthehopethatitwillbeuseful,<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*butWITHOUTANYWARRANTY;withouteventheimpliedwarrantyof<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*MERCHANTABILITYorFITNESSFORAPARTICULARPURPOSE.Seethe<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*GNULesserGeneralPublicLicenseformoredetails.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*YoushouldhavereceivedacopyoftheGNULesserGeneralPublicLicense<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*alongwiththissoftware;seethefileLICENSE.Ifnot,writetothe<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*FreeSoftwareFoundation,Inc.,59TemplePlace,Suite330,<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Boston,MA02111-1307,USA.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif" alt="" align="top" /></span><span style="color: #008000;">*/</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">package</span><span style="color: #000000;">com.mchange.v2.c3p0.cfg;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">java.io.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">java.util.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">javax.xml.parsers.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">org.w3c.dom.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">com.mchange.v2.log.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">com.mchange.v1.xml.DomParseUtils;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">class</span><span style="color: #000000;">C3P0ConfigXmlUtils<br /><img id="_1089_8910_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif" alt="" align="top" /><img id="_1089_8910_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif" alt="" align="top" /></span><span id="_1089_8910_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1089_8910_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringXML_CONFIG_RSRC_PATH</span><span style="color: #000000;">=</span><span style="color: #000000;">"</span><span style="color: #000000;">/c3p0-config.xml</span><span style="color: #000000;">"</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #000000;">MLoggerlogger</span><span style="color: #000000;">=</span><span style="color: #000000;">MLog.getLogger(C3P0ConfigXmlUtils.</span><span style="color: #0000ff;">class</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringLINESEP;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img id="_1340_1384_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1340_1384_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #000000;">String[]MISSPELL_PFXS</span><span style="color: #000000;">=</span><span id="_1340_1384_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1340_1384_Open_Text"><span style="color: #000000;">{</span><span style="color: #000000;">"</span><span style="color: #000000;">/c3p0</span><span style="color: #000000;">"</span><span style="color: #000000;">,</span><span style="color: #000000;">"</span><span style="color: #000000;">/c3pO</span><span style="color: #000000;">"</span><span style="color: #000000;">,</span><span style="color: #000000;">"</span><span style="color: #000000;">/c3po</span><span style="color: #000000;">"</span><span style="color: #000000;">,</span><span style="color: #000000;">"</span><span style="color: #000000;">/C3P0</span><span style="color: #000000;">"</span><span style="color: #000000;">,</span><span style="color: #000000;">"</span><span style="color: #000000;">/C3PO</span><span style="color: #000000;">"</span><span style="color: #000000;">}</span></span><span style="color: #000000;">;<br /><img id="_1439_1448_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1439_1448_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #0000ff;">char</span><span style="color: #000000;">[]MISSPELL_LINES</span><span style="color: #000000;">=</span><span id="_1439_1448_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1439_1448_Open_Text"><span style="color: #000000;">{</span><span style="color: #000000;">'</span><span style="color: #000000;">-</span><span style="color: #000000;">'</span><span style="color: #000000;">,</span><span style="color: #000000;">'</span><span style="color: #000000;">_</span><span style="color: #000000;">'</span><span style="color: #000000;">}</span></span><span style="color: #000000;">;<br /><img id="_1503_1522_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1503_1522_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #000000;">String[]MISSPELL_CONFIG</span><span style="color: #000000;">=</span><span id="_1503_1522_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1503_1522_Open_Text"><span style="color: #000000;">{</span><span style="color: #000000;">"</span><span style="color: #000000;">config</span><span style="color: #000000;">"</span><span style="color: #000000;">,</span><span style="color: #000000;">"</span><span style="color: #000000;">CONFIG</span><span style="color: #000000;">"</span><span style="color: #000000;">}</span></span><span style="color: #000000;">;<br /><img id="_1574_1587_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1574_1587_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #000000;">String[]MISSPELL_XML</span><span style="color: #000000;">=</span><span id="_1574_1587_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1574_1587_Open_Text"><span style="color: #000000;">{</span><span style="color: #000000;">"</span><span style="color: #000000;">xml</span><span style="color: #000000;">"</span><span style="color: #000000;">,</span><span style="color: #000000;">"</span><span style="color: #000000;">XML</span><span style="color: #000000;">"</span><span style="color: #000000;">}</span></span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #008000;">//</span><span style="color: #008000;">itsanuglywaytodothis,butsinceresourcesarenotlistable...<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #008000;">//</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #008000;">//</span><span style="color: #008000;">thisisonlyexecutedonce,anddoesabout40tests(fornow)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #008000;">//</span><span style="color: #008000;">shouldIcareaboutthecostininitializationtime?<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #008000;">//</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #008000;">//</span><span style="color: #008000;">shouldonlyberunifwe'vecheckedforthecorrectfile,but<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #008000;">//</span><span style="color: #008000;">notfoundit</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #0000ff;">void</span><span style="color: #000000;">warnCommonXmlConfigResourceMisspellings()<br /><img id="_1974_3736_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1974_3736_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_1974_3736_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1974_3736_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(logger.isLoggable(MLevel.WARNING))<br /><img id="_2033_3730_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2033_3730_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2033_3730_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2033_3730_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(</span><span style="color: #0000ff;">int</span><span style="color: #000000;">a</span><span style="color: #000000;">=</span><span style="color: #000000;">0</span><span style="color: #000000;">,lena</span><span style="color: #000000;">=</span><span style="color: #000000;">MISSPELL_PFXS.length;a</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">lena;</span><span style="color: #000000;">++</span><span style="color: #000000;">a)<br /><img id="_2119_3720_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2119_3720_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2119_3720_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2119_3720_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />StringBuffersb</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">StringBuffer(</span><span style="color: #000000;">16</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />sb.append(MISSPELL_PFXS[a]);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(</span><span style="color: #0000ff;">int</span><span style="color: #000000;">b</span><span style="color: #000000;">=</span><span style="color: #000000;">0</span><span style="color: #000000;">,lenb</span><span style="color: #000000;">=</span><span style="color: #000000;">MISSPELL_LINES.length;b</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">lenb;</span><span style="color: #000000;">++</span><span style="color: #000000;">b)<br /><img id="_2317_3706_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2317_3706_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2317_3706_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2317_3706_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />sb.append(MISSPELL_LINES*);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(</span><span style="color: #0000ff;">int</span><span style="color: #000000;">c</span><span style="color: #000000;">=</span><span style="color: #000000;">0</span><span style="color: #000000;">,lenc</span><span style="color: #000000;">=</span><span style="color: #000000;">MISSPELL_CONFIG.length;c</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">lenc;</span><span style="color: #000000;">++</span><span style="color: #000000;">c)<br /><img id="_2471_3687_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2471_3687_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2471_3687_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2471_3687_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />sb.append(MISSPELL_CONFIG[c]);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />sb.append(</span><span style="color: #000000;">'</span><span style="color: #000000;">.</span><span style="color: #000000;">'</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(</span><span style="color: #0000ff;">int</span><span style="color: #000000;">d</span><span style="color: #000000;">=</span><span style="color: #000000;">0</span><span style="color: #000000;">,lend</span><span style="color: #000000;">=</span><span style="color: #000000;">MISSPELL_XML.length;d</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">lend;</span><span style="color: #000000;">++</span><span style="color: #000000;">d)<br /><img id="_2675_3665_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2675_3665_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2675_3665_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2675_3665_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />sb.append(MISSPELL_XML[d]);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Stringtest</span><span style="color: #000000;">=</span><span style="color: #000000;">sb.toString();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(</span><span style="color: #000000;">!</span><span style="color: #000000;">test.equals(XML_CONFIG_RSRC_PATH))<br /><img id="_2886_3639_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2886_3639_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2886_3639_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2886_3639_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />ObjecthopefullyNull</span><span style="color: #000000;">=</span><span style="color: #000000;">C3P0ConfigXmlUtils.</span><span style="color: #0000ff;">class</span><span style="color: #000000;">.getResource(test);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(hopefullyNull</span><span style="color: #000000;">!=</span><span style="color: #0000ff;">null</span><span style="color: #000000;">)<br /><img id="_3080_3609_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3080_3609_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3080_3609_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3080_3609_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />logger.warning(</span><span style="color: #000000;">"</span><span style="color: #000000;">POSSIBLYMISSPELLEDc3p0-conf.xmlRESOURCEFOUND.</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;">"</span><span style="color: #000000;">Pleaseensurethefilenameisc3p0-config.xml,alllowercase,</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;">"</span><span style="color: #000000;">withthedigit0(NOTtheletterO)inc3p0.Itshouldbeplaced</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;">"</span><span style="color: #000000;">inthetoplevelofc3p0'seffectiveclasspath.</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">static</span><span style="color: #000000;"><br /><img id="_3754_3932_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3754_3932_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3754_3932_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3754_3932_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Stringls;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">try</span><span style="color: #000000;"><br /><img id="_3796_3849_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3796_3849_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3796_3849_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3796_3849_Open_Text"><span style="color: #000000;">{ls</span><span style="color: #000000;">=</span><span style="color: #000000;">System.getProperty(</span><span style="color: #000000;">"</span><span style="color: #000000;">line.separator</span><span style="color: #000000;">"</span><span style="color: #000000;">,</span><span style="color: #000000;">"</span><span style="color: #000000;">"</span><span style="color: #000000;">);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(Exceptione)<br /><img id="_3887_3902_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3887_3902_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3887_3902_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3887_3902_Open_Text"><span style="color: #000000;">{ls</span><span style="color: #000000;">=</span><span style="color: #000000;">"</span><span style="color: #000000;">"</span><span style="color: #000000;">;}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />LINESEP</span><span style="color: #000000;">=</span><span style="color: #000000;">ls;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">C3P0ConfigextractXmlConfigFromDefaultResource()</span><span style="color: #0000ff;">throws</span><span style="color: #000000;">Exception<br /><img id="_4023_4691_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4023_4691_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4023_4691_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4023_4691_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />InputStreamis</span><span style="color: #000000;">=</span><span style="color: #0000ff;">null</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">try</span><span style="color: #000000;"><br /><img id="_4077_4394_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4077_4394_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4077_4394_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4077_4394_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />is</span><span style="color: #000000;">=</span><span style="color: #000000;">C3P0ConfigUtils.</span><span style="color: #0000ff;">class</span><span style="color: #000000;">.getResourceAsStream(XML_CONFIG_RSRC_PATH);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(is</span><span style="color: #000000;">==</span><span style="color: #0000ff;">null</span><span style="color: #000000;">)<br /><img id="_4203_4305_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4203_4305_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4203_4305_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4203_4305_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />warnCommonXmlConfigResourceMisspellings();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #0000ff;">null</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">else</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">extractXmlConfigFromInputStream(is);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">finally</span><span style="color: #000000;"><br /><img id="_4420_4685_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4420_4685_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4420_4685_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4420_4685_Open_Text"><span style="color: #000000;">{<br /><img id="_4438_4468_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4438_4468_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">try</span><span id="_4438_4468_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4438_4468_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">if</span><span style="color: #000000;">(is</span><span style="color: #000000;">!=</span><span style="color: #0000ff;">null</span><span style="color: #000000;">)is.close();}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(Exceptione)<br /><img id="_4514_4675_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4514_4675_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4514_4675_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4514_4675_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(logger.isLoggable(MLevel.FINE))<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />logger.log(MLevel.FINE,</span><span style="color: #000000;">"</span><span style="color: #000000;">ExceptiononresourceInputStreamclose.</span><span style="color: #000000;">"</span><span style="color: #000000;">,e);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">C3P0ConfigextractXmlConfigFromInputStream(InputStreamis)</span><span style="color: #0000ff;">throws</span><span style="color: #000000;">Exception<br /><img id="_4792_5015_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4792_5015_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4792_5015_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4792_5015_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />DocumentBuilderFactoryfact</span><span style="color: #000000;">=</span><span style="color: #000000;">DocumentBuilderFactory.newInstance();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />DocumentBuilderdb</span><span style="color: #000000;">=</span><span style="color: #000000;">fact.newDocumentBuilder();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Documentdoc</span><span style="color: #000000;">=</span><span style="color: #000000;">db.parse(is);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">extractConfigFromXmlDoc(doc);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">C3P0ConfigextractConfigFromXmlDoc(Documentdoc)</span><span style="color: #0000ff;">throws</span><span style="color: #000000;">Exception<br /><img id="_5106_6579_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_5106_6579_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_5106_6579_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_5106_6579_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />ElementdocElem</span><span style="color: #000000;">=</span><span style="color: #000000;">doc.getDocumentElement();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(docElem.getTagName().equals(</span><span style="color: #000000;">"</span><span style="color: #000000;">c3p0-config</span><span style="color: #000000;">"</span><span style="color: #000000;">))<br /><img id="_5224_6431_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_5224_6431_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_5224_6431_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_5224_6431_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />NamedScopedefaults;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />HashMapconfigNamesToNamedScopes</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">HashMap();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />ElementdefaultConfigElem</span><span style="color: #000000;">=</span><span style="color: #000000;">DomParseUtils.uniqueChild(docElem,</span><span style="color: #000000;">"</span><span style="color: #000000;">default-config</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(defaultConfigElem</span><span style="color: #000000;">!=</span><span style="color: #0000ff;">null</span><span style="color: #000000;">)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />defaults</span><span style="color: #000000;">=</span><span style="color: #000000;">extractNamedScopeFromLevel(defaultConfigElem);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">else</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />defaults</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">NamedScope();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />NodeListnl</span><span style="color: #000000;">=</span><span style="color: #000000;">DomParseUtils.immediateChildElementsByTagName(docElem,</span><span style="color: #000000;">"</span><span style="color: #000000;">named-config</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(</span><span style="color: #0000ff;">int</span><span style="color: #000000;">i</span><span style="color: #000000;">=</span><span style="color: #000000;">0</span><span style="color: #000000;">,len</span><span style="color: #000000;">=</span><span style="color: #000000;">nl.getLength();i</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">len;</span><span style="color: #000000;">++</span><span style="color: #000000;">i)<br /><img id="_5773_6348_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_5773_6348_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_5773_6348_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_5773_6348_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />ElementnamedConfigElem</span><span style="color: #000000;">=</span><span style="color: #000000;">(Element)nl.item(i);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />StringconfigName</span><span style="color: #000000;">=</span><span style="color: #000000;">namedConfigElem.getAttribute(</span><span style="color: #000000;">"</span><span style="color: #000000;">name</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(configName</span><span style="color: #000000;">!=</span><span style="color: #0000ff;">null</span><span style="color: #000000;">&amp;&amp;</span><span style="color: #000000;">configName.length()</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">0</span><span style="color: #000000;">)<br /><img id="_5996_6182_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_5996_6182_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_5996_6182_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_5996_6182_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />NamedScopenamedConfig</span><span style="color: #000000;">=</span><span style="color: #000000;">extractNamedScopeFromLevel(namedConfigElem);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />configNamesToNamedScopes.put(configName,namedConfig);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">else</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />logger.warning(</span><span style="color: #000000;">"</span><span style="color: #000000;">ConfigurationXMLcontainednamed-configelementwithoutnameattribute:</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;">namedConfigElem);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #0000ff;">new</span><span style="color: #000000;">C3P0Config(defaults,configNamesToNamedScopes);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">else</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">throw</span><span style="color: #0000ff;">new</span><span style="color: #000000;">Exception(</span><span style="color: #000000;">"</span><span style="color: #000000;">Rootelementofc3p0configxmlshouldbe'c3p0-config',not'</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;">docElem.getTagName()</span><span style="color: #000000;">+</span><span style="color: #000000;">"</span><span style="color: #000000;">'.</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #0000ff;">static</span><span style="color: #000000;">NamedScopeextractNamedScopeFromLevel(Elementelem)<br /><img id="_6657_7539_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_6657_7539_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_6657_7539_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_6657_7539_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />HashMapprops</span><span style="color: #000000;">=</span><span style="color: #000000;">extractPropertiesFromLevel(elem);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />HashMapuserNamesToOverrides</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">HashMap();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />NodeListnl</span><span style="color: #000000;">=</span><span style="color: #000000;">DomParseUtils.immediateChildElementsByTagName(elem,</span><span style="color: #000000;">"</span><span style="color: #000000;">user-overrides</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(</span><span style="color: #0000ff;">int</span><span style="color: #000000;">i</span><span style="color: #000000;">=</span><span style="color: #000000;">0</span><span style="color: #000000;">,len</span><span style="color: #000000;">=</span><span style="color: #000000;">nl.getLength();i</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">len;</span><span style="color: #000000;">++</span><span style="color: #000000;">i)<br /><img id="_6935_7472_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_6935_7472_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_6935_7472_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_6935_7472_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />ElementperUserConfigElem</span><span style="color: #000000;">=</span><span style="color: #000000;">(Element)nl.item(i);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />StringuserName</span><span style="color: #000000;">=</span><span style="color: #000000;">perUserConfigElem.getAttribute(</span><span style="color: #000000;">"</span><span style="color: #000000;">user</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(userName</span><span style="color: #000000;">!=</span><span style="color: #0000ff;">null</span><span style="color: #000000;">&amp;&amp;</span><span style="color: #000000;">userName.length()</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">0</span><span style="color: #000000;">)<br /><img id="_7140_7304_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_7140_7304_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_7140_7304_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_7140_7304_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />HashMapuserProps</span><span style="color: #000000;">=</span><span style="color: #000000;">extractPropertiesFromLevel(perUserConfigElem);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />userNamesToOverrides.put(userName,userProps);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">else</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />logger.warning(</span><span style="color: #000000;">"</span><span style="color: #000000;">ConfigurationXMLcontaineduser-overrideselementwithoutuserattribute:</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;">LINESEP</span><span style="color: #000000;">+</span><span style="color: #000000;">perUserConfigElem);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #0000ff;">new</span><span style="color: #000000;">NamedScope(props,userNamesToOverrides);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #0000ff;">static</span><span style="color: #000000;">HashMapextractPropertiesFromLevel(Elementelem)<br /><img id="_7614_8867_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_7614_8867_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_7614_8867_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_7614_8867_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #008000;">//</span><span style="color: #008000;">System.err.println("extractPropertiesFromLevel()");</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />HashMapout</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">HashMap();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">try</span><span style="color: #000000;"><br /><img id="_7740_8547_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_7740_8547_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_7740_8547_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_7740_8547_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />NodeListnl</span><span style="color: #000000;">=</span><span style="color: #000000;">DomParseUtils.immediateChildElementsByTagName(elem,</span><span style="color: #000000;">"</span><span style="color: #000000;">property</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">int</span><span style="color: #000000;">len</span><span style="color: #000000;">=</span><span style="color: #000000;">nl.getLength();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(</span><span style="color: #0000ff;">int</span><span style="color: #000000;">i</span><span style="color: #000000;">=</span><span style="color: #000000;">0</span><span style="color: #000000;">;i</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">len;</span><span style="color: #000000;">++</span><span style="color: #000000;">i)<br /><img id="_7925_8537_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_7925_8537_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_7925_8537_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_7925_8537_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />ElementpropertyElem</span><span style="color: #000000;">=</span><span style="color: #000000;">(Element)nl.item(i);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />StringpropName</span><span style="color: #000000;">=</span><span style="color: #000000;">propertyElem.getAttribute(</span><span style="color: #000000;">"</span><span style="color: #000000;">name</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(propName</span><span style="color: #000000;">!=</span><span style="color: #0000ff;">null</span><span style="color: #000000;">&amp;&amp;</span><span style="color: #000000;">propName.length()</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">0</span><span style="color: #000000;">)<br /><img id="_8136_8368_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_8136_8368_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_8136_8368_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_8136_8368_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />StringpropVal</span><span style="color: #000000;">=</span><span style="color: #000000;">DomParseUtils.allTextFromElement(propertyElem,</span><span style="color: #0000ff;">true</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />out.put(propName,propVal);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #008000;">//</span><span style="color: #008000;">System.err.println(propName+"-&gt;"+propVal);</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" /></span><span style="color: #000000;">}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">else</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />logger.warning(</span><span style="color: #000000;">"</span><span style="color: #000000;">ConfigurationXMLcontainedpropertyelementwithoutnameattribute:</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;">LINESEP</span><span style="color: #000000;">+</span><span style="color: #000000;">propertyElem);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(Exceptione)<br /><img id="_8585_8840_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_8585_8840_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_8585_8840_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_8585_8840_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />logger.log(MLevel.WARNING,<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;">"</span><span style="color: #000000;">AnexceptionoccurredwhilereadingconfigXML.</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;">"</span><span style="color: #000000;">Someconfigurationinformationhasprobablybeenignored.</span><span style="color: #000000;">"</span><span style="color: #000000;">,<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />e);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">out;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #000000;">C3P0ConfigXmlUtils()<br /><img id="_8907_8908_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_8907_8908_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_8907_8908_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_8907_8908_Open_Text"><span style="color: #000000;">{}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span>
</div>
</div>
<p> </p>
<p> </p>
<div style="padding-right: 5.4pt; padding-left: 5.4pt; background: #e6e6e6; padding-bottom: 4px; width: 95%; padding-top: 4px;">
<div>
<img id="_0_853_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif" alt="" align="top" /><img id="_0_853_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif" alt="" align="top" /><span id="_0_853_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">/**/</span><span id="_0_853_Open_Text"><span style="color: #008000;">/*</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Distributedaspartofc3p0v.0.9.1.2<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Copyright(C)2005MachineryForChange,Inc.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Author:SteveWaldman&lt;swaldman@mchange.com&gt;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Thislibraryisfreesoftware;youcanredistributeitand/ormodify<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*itunderthetermsoftheGNULesserGeneralPublicLicenseversion2.1,as<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*publishedbytheFreeSoftwareFoundation.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Thissoftwareisdistributedinthehopethatitwillbeuseful,<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*butWITHOUTANYWARRANTY;withouteventheimpliedwarrantyof<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*MERCHANTABILITYorFITNESSFORAPARTICULARPURPOSE.Seethe<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*GNULesserGeneralPublicLicenseformoredetails.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*YoushouldhavereceivedacopyoftheGNULesserGeneralPublicLicense<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*alongwiththissoftware;seethefileLICENSE.Ifnot,writetothe<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*FreeSoftwareFoundation,Inc.,59TemplePlace,Suite330,<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*Boston,MA02111-1307,USA.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif" alt="" align="top" /></span><span style="color: #008000;">*/</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">package</span><span style="color: #000000;">com.mchange.v1.xml;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">java.util.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">org.xml.sax.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">org.w3c.dom.</span><span style="color: #000000;">*</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">import</span><span style="color: #000000;">com.mchange.v1.util.DebugUtils;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">class</span><span style="color: #000000;">DomParseUtils<br /><img id="_1023_5922_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif" alt="" align="top" /><img id="_1023_5922_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif" alt="" align="top" /></span><span id="_1023_5922_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1023_5922_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">final</span><span style="color: #0000ff;">static</span><span style="color: #0000ff;">boolean</span><span style="color: #000000;">DEBUG</span><span style="color: #000000;">=</span><span style="color: #0000ff;">true</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img id="_1069_1123_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1069_1123_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_1069_1123_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">/***/</span><span id="_1069_1123_Open_Text"><span style="color: #008000;">/**</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*</span><span style="color: #808080;">@return</span><span style="color: #008000;">nullifchilddoesn'texist.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" /></span><span style="color: #008000;">*/</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringallTextFromUniqueChild(Elementelem,StringchildTagName)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_1233_1295_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1233_1295_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_1233_1295_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1233_1295_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">allTextFromUniqueChild(elem,childTagName,</span><span style="color: #0000ff;">false</span><span style="color: #000000;">);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img id="_1302_1356_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1302_1356_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_1302_1356_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">/***/</span><span id="_1302_1356_Open_Text"><span style="color: #008000;">/**</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*</span><span style="color: #808080;">@return</span><span style="color: #008000;">nullifchilddoesn'texist.<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" /></span><span style="color: #008000;">*/</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringallTextFromUniqueChild(Elementelem,StringchildTagName,</span><span style="color: #0000ff;">boolean</span><span style="color: #000000;">trim)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_1484_1674_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1484_1674_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_1484_1674_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1484_1674_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />ElementuniqueChild</span><span style="color: #000000;">=</span><span style="color: #000000;">uniqueChildByTagName(elem,childTagName);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(uniqueChild</span><span style="color: #000000;">==</span><span style="color: #0000ff;">null</span><span style="color: #000000;">)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #0000ff;">null</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">else</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">DomParseUtils.allTextFromElement(uniqueChild,trim);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">ElementuniqueChild(Elementelem,StringchildTagName)</span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_1774_1826_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1774_1826_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_1774_1826_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_1774_1826_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">uniqueChildByTagName(elem,childTagName);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img id="_1833_1913_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_1833_1913_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_1833_1913_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">/***/</span><span id="_1833_1913_Open_Text"><span style="color: #008000;">/**</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*</span><span style="color: #808080;">@deprecated</span><span style="color: #008000;">useuniqueChild(Elementelem,StringchildTagName)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" /></span><span style="color: #008000;">*/</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">ElementuniqueChildByTagName(Elementelem,StringchildTagName)</span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_2021_2309_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2021_2309_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2021_2309_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2021_2309_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />NodeListnl</span><span style="color: #000000;">=</span><span style="color: #000000;">elem.getElementsByTagName(childTagName);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">int</span><span style="color: #000000;">len</span><span style="color: #000000;">=</span><span style="color: #000000;">nl.getLength();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(DEBUG)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />DebugUtils.myAssert(len</span><span style="color: #000000;">&lt;=</span><span style="color: #000000;">1</span><span style="color: #000000;">,<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;">"</span><span style="color: #000000;">Thereismorethanone(</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;">len</span><span style="color: #000000;">+</span><span style="color: #000000;">"</span><span style="color: #000000;">)childwithtagname:</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />childTagName</span><span style="color: #000000;">+</span><span style="color: #000000;">"</span><span style="color: #000000;">!!!</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">(len</span><span style="color: #000000;">==</span><span style="color: #000000;">1</span><span style="color: #000000;">?</span><span style="color: #000000;">(Element)nl.item(</span><span style="color: #000000;">0</span><span style="color: #000000;">):</span><span style="color: #0000ff;">null</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringallText(Elementelem)</span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_2383_2420_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2383_2420_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2383_2420_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2383_2420_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">allTextFromElement(elem);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringallText(Elementelem,</span><span style="color: #0000ff;">boolean</span><span style="color: #000000;">trim)</span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_2508_2551_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2508_2551_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2508_2551_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2508_2551_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">allTextFromElement(elem,trim);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img id="_2558_2601_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2558_2601_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2558_2601_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">/***/</span><span id="_2558_2601_Open_Text"><span style="color: #008000;">/**</span><span style="color: #808080;">@deprecated</span><span style="color: #008000;">useallText(Elementelem)</span><span style="color: #008000;">*/</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringallTextFromElement(Elementelem)</span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_2685_2728_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2685_2728_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2685_2728_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2685_2728_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">allTextFromElement(elem,</span><span style="color: #0000ff;">false</span><span style="color: #000000;">);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img id="_2735_2792_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2735_2792_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2735_2792_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">/***/</span><span id="_2735_2792_Open_Text"><span style="color: #008000;">/**</span><span style="color: #808080;">@deprecated</span><span style="color: #008000;">useallText(Elementelem,booleantrim)</span><span style="color: #008000;">*/</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringallTextFromElement(Elementelem,</span><span style="color: #0000ff;">boolean</span><span style="color: #000000;">trim)</span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_2890_3239_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_2890_3239_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_2890_3239_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_2890_3239_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />StringBuffertextBuf</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">StringBuffer();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />NodeListnl</span><span style="color: #000000;">=</span><span style="color: #000000;">elem.getChildNodes();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(</span><span style="color: #0000ff;">int</span><span style="color: #000000;">j</span><span style="color: #000000;">=</span><span style="color: #000000;">0</span><span style="color: #000000;">,len</span><span style="color: #000000;">=</span><span style="color: #000000;">nl.getLength();j</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">len;</span><span style="color: #000000;">++</span><span style="color: #000000;">j)<br /><img id="_3031_3162_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3031_3162_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3031_3162_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3031_3162_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Nodenode</span><span style="color: #000000;">=</span><span style="color: #000000;">nl.item(j);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(node</span><span style="color: #0000ff;">instanceof</span><span style="color: #000000;">Text)</span><span style="color: #008000;">//</span><span style="color: #008000;">includesTextandCDATA!</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;">textBuf.append(node.getNodeValue());<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Stringout</span><span style="color: #000000;">=</span><span style="color: #000000;">textBuf.toString();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">(trim</span><span style="color: #000000;">?</span><span style="color: #000000;">out.trim():out);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">String[]allTextFromImmediateChildElements(Elementparent,StringtagName)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_3363_3433_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3363_3433_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3363_3433_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3363_3433_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">allTextFromImmediateChildElements(parent,tagName,</span><span style="color: #0000ff;">false</span><span style="color: #000000;">);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">String[]allTextFromImmediateChildElements(Elementparent,StringtagName,</span><span style="color: #0000ff;">boolean</span><span style="color: #000000;">trim)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_3571_3803_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3571_3803_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3571_3803_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3571_3803_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />NodeListnl</span><span style="color: #000000;">=</span><span style="color: #000000;">immediateChildElementsByTagName(parent,tagName);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">int</span><span style="color: #000000;">len</span><span style="color: #000000;">=</span><span style="color: #000000;">nl.getLength();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />String[]out</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">String[len];<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(</span><span style="color: #0000ff;">int</span><span style="color: #000000;">i</span><span style="color: #000000;">=</span><span style="color: #000000;">0</span><span style="color: #000000;">;i</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">len;</span><span style="color: #000000;">++</span><span style="color: #000000;">i)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />out[i]</span><span style="color: #000000;">=</span><span style="color: #000000;">allText((Element)nl.item(i),trim);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">out;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">NodeListimmediateChildElementsByTagName(Elementparent,StringtagName)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_3925_3989_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3925_3989_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3925_3989_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_3925_3989_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">getImmediateChildElementsByTagName(parent,tagName);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img id="_3996_4090_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_3996_4090_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_3996_4090_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">/***/</span><span id="_3996_4090_Open_Text"><span style="color: #008000;">/**</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*</span><span style="color: #808080;">@deprecated</span><span style="color: #008000;">useimmediateChildrenByTagName(Elementparent,StringtagName)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" /></span><span style="color: #008000;">*/</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">NodeListgetImmediateChildElementsByTagName(Elementparent,StringtagName)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_4213_4606_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4213_4606_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4213_4606_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4213_4606_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">final</span><span style="color: #000000;">Listnodes</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;">ArrayList();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(Nodechild</span><span style="color: #000000;">=</span><span style="color: #000000;">parent.getFirstChild();child</span><span style="color: #000000;">!=</span><span style="color: #0000ff;">null</span><span style="color: #000000;">;child</span><span style="color: #000000;">=</span><span style="color: #000000;">child.getNextSibling())<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(child</span><span style="color: #0000ff;">instanceof</span><span style="color: #000000;">Element</span><span style="color: #000000;">&amp;&amp;</span><span style="color: #000000;">((Element)child).getTagName().equals(tagName))<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />nodes.add(child);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #0000ff;">new</span><span style="color: #000000;">NodeList()<br /><img id="_4475_4599_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4475_4599_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4475_4599_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4475_4599_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">int</span><span style="color: #000000;">getLength()<br /><img id="_4504_4527_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4504_4527_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4504_4527_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4504_4527_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">nodes.size();}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #000000;">Nodeitem(</span><span style="color: #0000ff;">int</span><span style="color: #000000;">i)<br /><img id="_4560_4592_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4560_4592_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4560_4592_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4560_4592_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">(Node)nodes.get(i);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringallTextFromUniqueImmediateChild(Elementelem,StringchildTagName)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_4726_4909_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_4726_4909_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_4726_4909_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_4726_4909_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />ElementuniqueChild</span><span style="color: #000000;">=</span><span style="color: #000000;">uniqueImmediateChildByTagName(elem,childTagName);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(uniqueChild</span><span style="color: #000000;">==</span><span style="color: #0000ff;">null</span><span style="color: #000000;">)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #0000ff;">null</span><span style="color: #000000;">;<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">DomParseUtils.allTextFromElement(uniqueChild);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">ElementuniqueImmediateChild(Elementelem,StringchildTagName)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_5020_5081_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_5020_5081_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_5020_5081_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_5020_5081_Open_Text"><span style="color: #000000;">{</span><span style="color: #0000ff;">return</span><span style="color: #000000;">uniqueImmediateChildByTagName(elem,childTagName);}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img id="_5088_5178_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_5088_5178_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_5088_5178_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">/***/</span><span id="_5088_5178_Open_Text"><span style="color: #008000;">/**</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*</span><span style="color: #808080;">@deprecated</span><span style="color: #008000;">useuniqueImmediateChild(Elementelem,StringchildTagName)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" /></span><span style="color: #008000;">*/</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">ElementuniqueImmediateChildByTagName(Elementelem,StringchildTagName)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_5297_5600_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_5297_5600_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_5297_5600_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_5297_5600_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />NodeListnl</span><span style="color: #000000;">=</span><span style="color: #000000;">getImmediateChildElementsByTagName(elem,childTagName);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">int</span><span style="color: #000000;">len</span><span style="color: #000000;">=</span><span style="color: #000000;">nl.getLength();<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">if</span><span style="color: #000000;">(DEBUG)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />DebugUtils.myAssert(len</span><span style="color: #000000;">&lt;=</span><span style="color: #000000;">1</span><span style="color: #000000;">,<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #000000;">"</span><span style="color: #000000;">Thereismorethanone(</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;">len</span><span style="color: #000000;">+</span><span style="color: #000000;">"</span><span style="color: #000000;">)childwithtagname:</span><span style="color: #000000;">"</span><span style="color: #000000;">+</span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />childTagName</span><span style="color: #000000;">+</span><span style="color: #000000;">"</span><span style="color: #000000;">!!!</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">(len</span><span style="color: #000000;">==</span><span style="color: #000000;">1</span><span style="color: #000000;">?</span><span style="color: #000000;">(Element)nl.item(</span><span style="color: #000000;">0</span><span style="color: #000000;">):</span><span style="color: #0000ff;">null</span><span style="color: #000000;">);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img id="_5607_5673_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_5607_5673_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_5607_5673_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">/***/</span><span id="_5607_5673_Open_Text"><span style="color: #008000;">/**</span><span style="color: #008000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />*</span><span style="color: #808080;">@deprecated</span><span style="color: #008000;">useElement.getAttribute(Stringval)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" /></span><span style="color: #008000;">*/</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">public</span><span style="color: #0000ff;">static</span><span style="color: #000000;">StringattrValFromElement(Elementelement,StringattrName)<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">throws</span><span style="color: #000000;">DOMException<br /><img id="_5778_5884_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_5778_5884_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_5778_5884_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_5778_5884_Open_Text"><span style="color: #000000;">{<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" />Attrattr</span><span style="color: #000000;">=</span><span style="color: #000000;">element.getAttributeNode(attrName);<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">return</span><span style="color: #000000;">(attr</span><span style="color: #000000;">==</span><span style="color: #0000ff;">null</span><span style="color: #000000;">?</span><span style="color: #0000ff;">null</span><span style="color: #000000;">:attr.getValue());<br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif" alt="" align="top" /></span><span style="color: #0000ff;">private</span><span style="color: #000000;">DomParseUtils()<br /><img id="_5919_5920_Open_Image" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif" alt="" align="top" /><img id="_5919_5920_Closed_Image" style="display: none;" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif" alt="" align="top" /></span><span id="_5919_5920_Closed_Text" style="display: none; background-color: #ffffff; border: #808080 1px solid;">...</span><span id="_5919_5920_Open_Text"><span style="color: #000000;">{}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif" alt="" align="top" />}</span></span><span style="color: #000000;"><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /><br /><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="" align="top" /></span>
</div>
</div>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[缓冲区溢出漏洞]]></title>
    <link href="http://www.lianghaijun.com/2006-11-02-1982086.html"/>
    <updated>2006-11-02T23:49:00+08:00</updated>
    <id>http://www.lianghaijun.com/1982086</id>
    <content type="html"><![CDATA[<p>贴一小段自己写的小程序</p>
<p>//MS VC++ 6.0 Console lhj<br />#include &lt;windows.h&gt;<br /></p>
<p>void main()<br />{<br />//保留原来的返回地址<br />DWORD *pBackAddress = (DWORD *)&amp;pBackAddress + 2;<br />DWORD BackAddress = *pBackAddress;</p>
<p>//获取自己的执行代码地址<br />HMODULE hModule = LoadLibrary("User32.dll");<br />DWORD Address = (DWORD)GetProcAddress(hModule, "MessageBoxA");</p>
<p>//缓冲区溢出<br />DWORD Buffer[100];<br />Buffer[0] = 0x5050C033;// xoreax, eaxpush eaxpush eax<br />Buffer[1] = 0xE8905050;// pusheax pusheax<br />Buffer[2] = Address - (DWORD)&amp;Buffer[3];// call MessageBoxA<br />Buffer[3] = 0xE9909090;// jmpBackAddress<br />Buffer[4] = BackAddress - (DWORD)&amp;Buffer[5];</p>
<p>//更改返回地址<br />*pBackAddress = (DWORD)Buffer;</p>
<p>}</p>
<p></p>
<p>举例:</p>
<p>void MyRecv(char buffer)<br />{<br />char TempBuf[1024];<br />memset(TempBuf, 0, 1024);<br />int len = recv(TempBuf);<br />memcpy(buffer, TempBuf, len);<br />}</p>
<p>如果在我们的程序中调用过这样一段程序, 那么我们的程序将面临着溢出的危险!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[windowsNT系统]]></title>
    <link href="http://www.lianghaijun.com/2006-09-09-1982087.html"/>
    <updated>2006-09-09T23:39:00+08:00</updated>
    <id>http://www.lianghaijun.com/1982087</id>
    <content type="html"><![CDATA[<p><img alt="" src="http://p.blog.csdn.net/images/p_blog_csdn_net/seavers/NT%E6%8A%80%E6%9C%AF.bmp" /></p>
]]></content>
  </entry>
  
</feed>
